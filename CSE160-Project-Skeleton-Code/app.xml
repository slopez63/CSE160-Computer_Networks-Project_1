<nesc xmlns="http://www.tinyos.net/nesC">
  <components>
    <component qname="NodeC" loc="15:NodeC.nc">
      <configuration/>
    </component>
    <component qname="MainC" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/MainC.nc">
      <configuration/>
    </component>
    <component qname="PlatformC" loc="41:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/PlatformC.nc">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/PlatformC.nc">
        <short>&#10; The default simulation platform, which does nothing.</short>
        <long>&#10; The default simulation platform, which does nothing.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMainP" loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMainP.nc">
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TinySchedulerC.nc">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TinySchedulerC.nc">
        <short>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).</short>
        <long>&#10; TOSSIM-specific scheduler implementation, which models&#10; tasks as simulation events (in order to capture delay).&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SimSchedulerBasicP" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SimMoteP" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/ActiveMessageC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/ActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="TossimActiveMessageC" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
        <short>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.</short>
        <long>&#10;&#10; The basic chip-independent TOSSIM Active Message layer for radio chips&#10; that do not have simulation support.&#10;&#10; @author Philip Levis&#10; @date December 2 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TossimPacketModelC" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.h">
        <short>&#10;&#10; Configuration parameters for a CSMA link.</short>
        <long>&#10;&#10; Configuration parameters for a CSMA link.&#10;&#10; @author Philip Levis&#10; @date   Dec 10 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CpmModelC" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <documentation loc="49:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
        <short>&#10; Accessor methods for Active Messages.</short>
        <long>&#10; Accessor methods for Active Messages.&#10;&#10; @author Philip Levis&#10; @author Morten Tranberg Hansen (added ActiveMessageAddress)&#10; @date June 19 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Node" loc="16:Node.nc">
      <module/>
    </component>
    <component qname="NodeC.GeneralReceive" loc="43(NodeC.GeneralReceive):/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC" loc="3(NodeC.SimpleSendC):lib/modules/SimpleSendC.nc">
      <instance number="0">
        <component-ref qname="SimpleSendC"/>
        <arguments>
          <value cst="I:6">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.SimpleSendP" loc="12(NodeC.SimpleSendC.SimpleSendP):lib/modules/SimpleSendP.nc">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleSendP"/>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.sendTimer" loc="44(NodeC.SimpleSendC.sendTimer):/home/sigi/CSE160/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/platforms/mica/sim/HilTimerMilliC.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/platforms/mica/sim/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/sigi/CSE160/tiny/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb78e62a0"/>
            <typename><typedef-ref name="TMilli" ref="0xb78e645c"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb759761c"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncC.nc">
        <short>&#10; The TOSSIM implementation of the Atm128 Timer0.</short>
        <long>&#10; The TOSSIM implementation of the Atm128 Timer0. It is built from a&#10; timer-specific counter component and a generic compare&#10; component. The counter component has an additional simulation-only&#10; interface to let the compare component know when its state has&#10; changed (e.g., TCNTX was set).&#10;&#10; @date November 22 2005&#10;&#10; @author Philip Levis &#60;pal@cs.stanford.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="1:/home/sigi/CSE160/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: platform_hardware.h,v 1.6 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb78e62a0"/>
            <typename><typedef-ref name="TMilli" ref="0xb78e645c"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb78e62a0"/>
            <typename><typedef-ref name="TMilli" ref="0xb78e645c"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb78e62a0"/>
            <typename><typedef-ref name="TMilli" ref="0xb78e645c"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/system/RandomC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC" loc="47(NodeC.SimpleSendC.AMSenderC):/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMSenderC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC.SenderC" loc="47(NodeC.SimpleSendC.AMSenderC.SenderC):/home/sigi/CSE160/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="DirectAMSenderC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7916618"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP" loc="43(NodeC.SimpleSendC.AMSenderC.SenderC.AMQueueEntryP):/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7916618"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueP.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="45(AMQueueP.AMQueueImplP):/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.PoolC" loc="41(NodeC.SimpleSendC.PoolC):/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0xb765a9bc"/>
            <typename><typedef-ref name="sendInfo" ref="0xb7659010"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="NodeC.SimpleSendC.PoolC.PoolP" loc="53(NodeC.SimpleSendC.PoolC.PoolP):/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb74065a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.SimpleSendC.QueueC" loc="42(NodeC.SimpleSendC.QueueC):/home/sigi/CSE160/tiny/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0xb765a9bc"/>
              <typename><typedef-ref name="sendInfo" ref="0xb7659010"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CommandHandlerC" loc="13:lib/modules/CommandHandlerC.nc">
      <documentation loc="1:lib/modules/CommandHandlerC.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CommandHandlerP" loc="13:lib/modules/CommandHandlerP.nc">
      <documentation loc="1:lib/modules/CommandHandlerP.nc">
        <short>&#10; </short>
        <long>&#10; @author UCM ANDES Lab&#10; $Author: abeltran2 $&#10; $LastChangedDate: 2014-08-31 16:06:26 -0700 (Sun, 31 Aug 2014) $&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CommandHandlerC.CommandReceive" loc="43(CommandHandlerC.CommandReceive):/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMReceiverC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:99">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CommandHandlerC.PoolC" loc="41(CommandHandlerC.PoolC):/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
            <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
          </type-tag>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="CommandHandlerC.PoolC.PoolP" loc="53(CommandHandlerC.PoolC.PoolP):/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolP.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb74065a0"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CommandHandlerC.QueueC" loc="42(CommandHandlerC.QueueC):/home/sigi/CSE160/tiny/tinyos-main/tos/system/QueueC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
              <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:20">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.packListC" loc="11(NodeC.packListC):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ListC"/>
        <arguments>
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0xb78c4420"/>
              <typename><typedef-ref name="pack" ref="0xb78c20c4"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:64">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.neighborListC" loc="11(NodeC.neighborListC):dataStructures/modules/ListC.nc">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ListC"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
          <value cst="I:64">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NodeC.myTimerC" loc="44(NodeC.myTimerC):/home/sigi/CSE160/tiny/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb759761c" loc="23:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb759761c"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb75977d0" loc="23:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleSendC" loc="3:lib/modules/SimpleSendC.nc" abstract="">
      <parameters>
        <constant name="channel" ref="0xb7603e60" loc="3:lib/modules/SimpleSendC.nc">
          <component-ref qname="SimpleSendC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleSendP" loc="12:lib/modules/SimpleSendP.nc" abstract="">
      <documentation loc="1:lib/modules/SimpleSendP.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10;&#10; </short>
        <long>&#10; ANDES Lab - University of California, Merced&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0xb74065a0" loc="41:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb74065a0"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0xb74067b0" loc="41:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0xb7401944" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb7401944"/></type-var>
        </typedef>
        <constant name="size" ref="0xb7401b24" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb749c590" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb749c590"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0xb749c764" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0xb743dcbc" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb760724c" loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7916618"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb75bfc6c" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb75bfc6c"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0xb7404b80" loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0xb7404b80"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0xb7404d9c" loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0xb758d5f0" loc="23:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0xb758d5f0"/></type-var>
        </typedef>
        <constant name="divider" ref="0xb758d7a4" loc="23:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMSenderC" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb7466b10" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7916618"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ListC" loc="11:dataStructures/modules/ListC.nc" abstract="">
      <documentation loc="1:dataStructures/modules/ListC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0xb73cf448" loc="11:dataStructures/modules/ListC.nc">
          <component-ref qname="ListC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb73cf448"/></type-var>
        </typedef>
        <constant name="n" ref="0xb73cf5c0" loc="11:dataStructures/modules/ListC.nc">
          <component-ref qname="ListC"/>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0xb744e0b0" loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7916618"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="DirectAMSenderC" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/system/DirectAMSenderC.nc" abstract="">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0xb7456694" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/system/DirectAMSenderC.nc">
          <component-ref qname="DirectAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7916618"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb747186c" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb747186c"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="SimpleSend" loc="3:lib/interfaces/SimpleSend.nc">
      <function command="" provided="0" name="send" ref="0xb7658788" loc="4:lib/interfaces/SimpleSend.nc">
        <interfacedef-ref qname="SimpleSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0xb78c4420"/>
              <typename><typedef-ref name="pack" ref="0xb78c20c4"/></typename>
            </type-tag>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7658444" loc="4:lib/interfaces/SimpleSend.nc">
            <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0xb78c4420"/>
              <typename><typedef-ref name="pack" ref="0xb78c20c4"/></typename>
            </type-tag>
          </variable>
          <variable name="dest" ref="0xb7658630" loc="4:lib/interfaces/SimpleSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0xb77eda28" loc="113:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb77ed8d8" loc="113:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0xb77ec730" loc="138:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0xb77ec5e0" loc="138:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb77ed224" loc="104:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb77edf04" loc="130:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0xb7856904" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0xb75f8444" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb75f8444"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb75f2010" loc="97:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="91:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb75f8444"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0xb75f329c" loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="74:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0xb75f889c" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0xb75f3864" loc="89:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="82:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb75f8444"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0xb75f3714" loc="89:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb75f8444"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0xb75f8d78" loc="72:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
        <documentation loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0xb78e77b0" loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0xb78e7c98" loc="75:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0xb7573ce8" loc="38:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0xb7572194" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0xb7573900" loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0xb7572618" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0xb757ae80" loc="21:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b5ee8"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0xb75b4124"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0xb7573458" loc="27:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b5ee8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0xb75b4124"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0xb7573308" loc="27:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b5ee8"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0xb75b4124"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacket" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacket.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="strength" ref="0xb77ccf08" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacket.nc">
        <interfacedef-ref qname="TossimPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0xb7f825d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77ccdb8" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
      <documentation loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0xb77e3540" loc="65:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77e33f0" loc="65:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0xb77e3ea8" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77e3d58" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb77ded6c" loc="126:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="109:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77dea24" loc="126:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb77debf8" loc="126:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb77de46c" loc="106:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="96:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0xb77e1af8" loc="94:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
        <documentation loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77e17cc" loc="94:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb77e19a0" loc="94:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb75be3b4" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb75be3b4"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb75be84c" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0xb75fb154" loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb75fb154"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0xb75fa650" loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="74:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb75fb154"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0xb75f7460" loc="97:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="90:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb75fb154"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0xb75f7310" loc="97:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb75fb154"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0xb7f8563c"/>
              <value-structured>
                <type-tag size="I:4" alignment="I:4"><attribute-ref name="one" ref="0xb7f8563c"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0xb75f7cf0" loc="108:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="99:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb75fb154"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0xb75f7ba0" loc="108:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="full" ref="0xb75fb9a4" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is full.</short>
          <long>&#10; Returns if the queue is full.&#10;&#10; @return Whether the queue is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0xb75fa254" loc="72:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0xb75fac98" loc="88:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="82:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb75fb154"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0xb75fb5ac" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0xb75fbdb4" loc="65:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
        <documentation loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb77efa20" loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0xb77ef4e8" loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0xb77ef6ec" loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb77ef8c0" loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb77e74c0" loc="135:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="126:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77e7178" loc="135:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb77e734c" loc="135:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb77eac00" loc="123:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="113:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb77e967c" loc="96:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="82:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77e952c" loc="96:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb77ea350" loc="110:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
        <documentation loc="98:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77ea010" loc="110:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb77ea1f8" loc="110:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Read.nc">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0xb76e8540" loc="49:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb76e8540"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0xb76e89ac" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0xb76e5168" loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Read.nc">
        <documentation loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb76e8540"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0xb76e8dfc" loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0xb76e5010" loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0xb76e8540"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Random.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0xb75ea010" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 16-bit pseudorandom number.</short>
          <long> &#10; Produces a 16-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0xb75eeb00" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Random.nc">
        <documentation loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0xb757c12c" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b8c90"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb75b8eac"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0xb757b5f8" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b1bf0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb75b1e0c"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0xb757cb98" loc="49:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b35a8"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb75b37c4"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0xb757b180" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b35a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb75b37c4"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0xb757b030" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b35a8"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb75b37c4"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0xb757bbc0" loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b1bf0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb75b1e0c"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0xb757ba70" loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b1bf0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb75b1e0c"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0xb757c714" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b8c90"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb75b8eac"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0xb757c5c4" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b8c90"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb75b8eac"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb744b4a4" loc="75:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb744b178" loc="75:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb744b34c" loc="75:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0xb744805c" loc="125:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="115:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7449cf0" loc="125:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb7449ec4" loc="125:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0xb74497c4" loc="112:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="102:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb744a160" loc="89:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="77:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb744a010" loc="89:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb744ad80" loc="100:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
        <documentation loc="91:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb744aa40" loc="100:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb744ac28" loc="100:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0xb74642b0" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb74642b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0xb74648b0" loc="64:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb74642b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0xb7464760" loc="64:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0xb74642b0"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0xb76664c8" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0xb7666cc8" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0xb7666900" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7916860"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0xb7666010" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7916860"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0xb7744c28" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7916860"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0xb7744e1c" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb759e7a4" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb759e7a4"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb759e900" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb759e900"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb759aa58" loc="109:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb759e900"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb759b7c4" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0xb759a44c" loc="103:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb759e900"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb759e900"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb759a114" loc="103:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb759e900"/></type-var>
          </variable>
          <variable name="dt" ref="0xb759a2f4" loc="103:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb759e900"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb759bbf4" loc="88:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0xb759aea8" loc="116:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb759e900"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb759eee0" loc="66:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb759e900"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb759ed90" loc="66:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb759e900"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb759b39c" loc="73:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7855434" loc="62:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0xb757e9e4" loc="41:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb757e9e4"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0xb75777bc" loc="74:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb75797f4" loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb757ee94" loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb757e9e4"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb7579bc0" loc="62:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb7577be0" loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb75793f0" loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb757e9e4"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb75792a0" loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb757e9e4"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7577010" loc="65:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb75773d0" loc="68:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="List" loc="11:dataStructures/interfaces/List.nc">
      <documentation loc="1:dataStructures/interfaces/List.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides a simple list.&#10;&#10; @author UCM ANDES Lab&#10; @author Alex Beltran&#10; @date   2013/09/03&#10; &#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0xb7657220" loc="11:dataStructures/interfaces/List.nc">
          <interfacedef-ref qname="List"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb7657220"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="size" ref="0xb764f21c" loc="24:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="front" ref="0xb7650770" loc="21:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb7657220"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0xb7650e64" loc="23:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb764f718" loc="25:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb7657220"/></type-var>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="position" ref="0xb764f5c8" loc="25:dataStructures/interfaces/List.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pushback" ref="0xb76577b0" loc="17:dataStructures/interfaces/List.nc">
        <documentation loc="12:dataStructures/interfaces/List.nc">
          <short>&#10; Put value into the end of the list.</short>
          <long>&#10; Put value into the end of the list.&#10;&#10; @param input - data to be inserted&#10;</long>
        </documentation>
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb7657220"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0xb7657660" loc="17:dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb7657220"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="popfront" ref="0xb765040c" loc="20:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb7657220"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="popback" ref="0xb7650088" loc="19:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb7657220"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="pushfront" ref="0xb7657ce8" loc="18:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb7657220"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="input" ref="0xb7657b98" loc="18:dataStructures/interfaces/List.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb7657220"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="back" ref="0xb7650acc" loc="22:dataStructures/interfaces/List.nc">
        <interfacedef-ref qname="List"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb7657220"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Receive.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0xb77e4360" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Receive.nc">
        <documentation loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
              <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77eed84" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0xb77e4010" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Receive.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb77e41e4" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SimMote" loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <short>&#10; TOSSIM-specific interface to access a mote's state.</short>
        <long>&#10; TOSSIM-specific interface to access a mote's state. TinyOS programs&#10; should never use this interface.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="setEuid" ref="0xb7820500" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="euid" ref="0xb78203b0" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getVariableInfo" ref="0xb781f58c" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="size_t" ref="0xb7f883cc"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="name" ref="0xb781f080" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="ptr" ref="0xb781f244" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-pointer size="I:4" alignment="I:4">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb781f42c" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
                <typename><typedef-ref name="size_t" ref="0xb7f883cc"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOff" ref="0xb781fc78" loc="49:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0xb781f8f0" loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getEuid" ref="0xb7820010" loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRadioChannel" ref="0xb781e288" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newRadioChannel" ref="0xb781e138" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb7820c8c" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRadioChannel" ref="0xb781e6a8" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStartTime" ref="0xb78208f4" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMote.nc">
        <interfacedef-ref qname="SimMote"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb75963c0" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb75963c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0xb759651c" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb759651c"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0xb75969bc" loc="64:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0xb759651c"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0xb75943a0" loc="76:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0xb7596ea4" loc="71:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb759476c" loc="82:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0xb77e574c" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77e55fc" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0xb77d1210" loc="71:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77d10c0" loc="71:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0xb77d1c2c" loc="85:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77d1adc" loc="85:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GainRadioModel" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="putOnAirTo" ref="0xb7785394" loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
            </type-int>
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0xb7ad29dc"/></typename>
            </type-int>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0xb7788850" loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0xb7788a64" loc="49:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0xb7788c2c" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
            </type-int>
          </variable>
          <variable name="endTime" ref="0xb7788e58" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="sim_time_t" ref="0xb7ad29dc"/></typename>
            </type-int>
          </variable>
          <variable name="gain" ref="0xb7785030" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
          <variable name="reverseGain" ref="0xb778521c" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0xb7783a68" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7783918" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearChannel" ref="0xb7785c40" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPendingTransmission" ref="0xb778306c" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClearValue" ref="0xb7785874" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0xb7785724" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-float cname="double" size="I:8" alignment="I:8"></type-float>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="acked" ref="0xb7783560" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7783410" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0xb7782010" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
        <interfacedef-ref qname="GainRadioModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb7783e60" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/GainRadioModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TossimPacketModel" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0xb77c8010" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0xb77c9a24" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </variable>
          <variable name="msg" ref="0xb77c9c28" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0xb77c9dfc" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0xb77c7698" loc="85:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="79:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Signal that a packet was received.</short>
          <long>&#10; Signal that a packet was received. Note that there is no buffer&#10; swap: a component using this interface must copy out the message&#10; if it needs it.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77c7548" loc="85:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0xb77c8774" loc="69:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77c8624" loc="69:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0xb77c708c" loc="76:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <documentation loc="71:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77c8d28" loc="76:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0xb77c8f10" loc="76:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="shouldAck" ref="0xb77c7ca0" loc="87:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
        <interfacedef-ref qname="TossimPacketModel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0xb77c7b50" loc="87:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModel.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0xb758655c" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb758655c"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0xb7581c1c" loc="98:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0xb75813fc" loc="87:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0xb7586a08" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb758655c"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0xb75801b4" loc="104:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0xb7580064" loc="104:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0xb7580610" loc="110:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0xb75837f0" loc="75:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0xb7583408" loc="70:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0xb7581828" loc="93:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0xb7583010" loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb758655c"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0xb7586df4" loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0xb758655c"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0xb7583bc0" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb7581010" loc="81:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0xb77d8bfc" loc="177:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7916860"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb77d8aac" loc="177:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0xb77db888" loc="88:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb77db738" loc="88:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0xb77e67b0" loc="68:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0xb77e6e04" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
            <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb77e6cb4" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0xb77d9094" loc="121:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb77dad34" loc="121:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb77daf28" loc="121:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0xb77da418" loc="103:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb77da0cc" loc="103:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0xb77da2c0" loc="103:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0xb77d66a4" loc="147:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0xb7916618"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb77d6554" loc="147:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0xb77d8188" loc="162:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7916618"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb77d6e4c" loc="162:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0xb77d8030" loc="162:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0xb7916618"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0xb77d9bc4" loc="136:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb77d9a74" loc="136:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0xb77d481c" loc="187:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7916860"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0xb77d44d0" loc="187:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
                <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0xb77d46c4" loc="187:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0xb7916860"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0xb77d306c" loc="195:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0xb7916860"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0xb7b0b088" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0xb7b0b930" loc="72:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0xb7b0b498" loc="65:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CommandHandler" loc="1:lib/interfaces/CommandHandler.nc">
      <function event="" provided="0" name="printLinkState" ref="0xb76540bc" loc="6:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printNeighbors" ref="0xb7655930" loc="4:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printDistanceVector" ref="0xb76544a0" loc="7:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestClient" ref="0xb7654bf0" loc="9:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setTestServer" ref="0xb7654848" loc="8:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppServer" ref="0xb7652010" loc="10:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="printRouteTable" ref="0xb7655cec" loc="5:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="ping" ref="0xb765557c" loc="3:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
            </type-int>
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="destination" ref="0xb765520c" loc="3:lib/interfaces/CommandHandler.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
              <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
            </type-int>
          </variable>
          <variable name="payload" ref="0xb7655424" loc="3:lib/interfaces/CommandHandler.nc">
            <type-pointer size="I:4" alignment="I:4">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setAppClient" ref="0xb76523b0" loc="11:lib/interfaces/CommandHandler.nc">
        <interfacedef-ref qname="CommandHandler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0xb764b6a0" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0xb764b6a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0xb7645bf4" loc="136:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0xb7648b4c" loc="83:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0xb7647c44" loc="114:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb7647914" loc="114:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb7647aec" loc="114:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0xb764749c" loc="98:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0xb7644510" loc="151:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0xb7644018" loc="144:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0xb7647010" loc="92:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0xb764bcac" loc="64:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb764bb5c" loc="64:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0xb7645608" loc="129:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
            </type-int>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0xb76452d8" loc="129:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0xb76454b0" loc="129:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0xb7648320" loc="73:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0xb76481d0" loc="73:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
              <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0xb76487bc" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
    <union loc="120:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75b5ee8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb75b4010" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb75b4070" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb75b5adc"/></type-tag>
      </field>
    </union>
    <enum loc="185:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75af21c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="250:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75a76bc" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb75a77c4" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb75a7824" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb75a72ac"/></type-tag>
      </field>
    </union>
    <attribute name="bnd" loc="9:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0xb7f86010" defined="" size="I:8" alignment="I:4">
      <field name="lo" ref="0xb7f86254" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0xb7f862b4" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <union loc="245:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c77220" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0xb7c77328" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c77388" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct loc="134:/usr/include/i386-linux-gnu/bits/types.h" ref="0xb7cb0780" defined="" size="I:8" alignment="I:4">
      <field name="__val" ref="0xb7cb0888" bit-offset="I:0" size="I:8">
        <type-array elements="I:2" size="I:8" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <struct name="itimerspec" loc="161:/usr/include/time.h" ref="0xb79a9dec" defined="" size="I:16" alignment="I:4">
      <field name="it_interval" ref="0xb79a8218" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timespec" ref="0xb7c8df10"/></type-tag>
      </field>
      <field name="it_value" ref="0xb79a8278" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timespec" ref="0xb7c8df10"/></type-tag>
      </field>
    </struct>
    <nx_struct name="tossim_metadata" loc="24:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0xb7914c34" defined="" size="I:7" alignment="I:1">
      <field name="strength" ref="0xb7912c74" bit-offset="I:0" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0xb7cea73c"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0xb7912cd4" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="tx_power" ref="0xb7912d34" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="crc" ref="0xb7912d94" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0xb7912df4" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="time" ref="0xb7912e54" bit-offset="I:40" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0xb7ce9cd4"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <nx_struct name="cc2420_metadata_t" loc="94:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7845f4c" defined="" size="I:12" alignment="I:1">
      <field name="rssi" ref="0xb7844b08" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0xb7844b68" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="tx_power" ref="0xb7844bc8" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="crc" ref="0xb7844c28" bit-offset="I:24" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0xb7cea73c"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0xb7844c88" bit-offset="I:32" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0xb7cea73c"/></typename>
        </type-int>
      </field>
      <field name="timesync" ref="0xb7844ce8" bit-offset="I:40" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
          <typename><typedef-ref name="nx_int8_t" ref="0xb7cea73c"/></typename>
        </type-int>
      </field>
      <field name="timestamp" ref="0xb7844d48" bit-offset="I:48" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0xb7ce717c"/></typename>
        </type-int>
      </field>
      <field name="rxInterval" ref="0xb7844da8" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0xb7ce9cd4"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union loc="231:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75a8130" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb75a8238" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb75a8298" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb75a9488"/></type-tag>
      </field>
    </union>
    <struct name="gain_entry" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_gain.h" ref="0xb79eb37c" defined="" size="I:16" alignment="I:4">
      <field name="mote" ref="0xb79eb810" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="gain" ref="0xb79eb870" bit-offset="I:32" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="next" ref="0xb79eb8d0" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0xb79eb37c"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct name="sim_gain_noise" loc="3:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_gain.c" ref="0xb79e54b4" defined="" size="I:16" alignment="I:4">
      <field name="mean" ref="0xb79e5800" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="range" ref="0xb79e5860" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct ref="0xb7f94f04" size="V:" alignment="V:">
    </struct>
    <attribute name="deputy_scope"  loc="NONE" ref="0xb7f8bbd4" size="V:" alignment="V:">
    </attribute>
    <struct loc="105:/usr/include/stdlib.h" ref="0xb7ca6a40" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0xb7ca6b48" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0xb7ca6ba8" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="timeval" loc="30:/usr/include/i386-linux-gnu/bits/time.h" ref="0xb7c8b514" defined="" size="I:8" alignment="I:4">
      <field name="tv_sec" ref="0xb7c8b8bc" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__time_t" ref="0xb7caf478"/></typename>
        </type-int>
      </field>
      <field name="tv_usec" ref="0xb7c8b91c" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__suseconds_t" ref="0xb7caf918"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="75:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75ba40c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="nonnull" loc="8:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0xb7f88a40" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0xb7f88c84" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <nx_struct name="CommandMsg" loc="16:includes/CommandMsg.h" ref="0xb78c88b8" defined="" size="I:28" alignment="I:1">
      <field name="dest" ref="0xb78c8f4c" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0xb7ce9cd4"/></typename>
        </type-int>
      </field>
      <field name="id" ref="0xb78c7010" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="payload" ref="0xb78c7070" bit-offset="I:24" size="I:25">
        <type-array elements="I:25" size="I:25" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <enum name="cc2420_secctrl0_enums" loc="326:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb782b708" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_secctrl1_enums" loc="336:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb782ab70" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="number"  loc="NONE" ref="0xb7f8ec90" size="V:" alignment="V:">
    </attribute>
    <enum name="cc2420_txctrl_enums" loc="284:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb783012c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="401:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb78235cc" defined="" size="I:4" alignment="I:4">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="9:includes/protocol.h" ref="0xb78e6e44" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="224:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c79234" defined="" size="I:8" alignment="I:4">
      <field name="__size" ref="0xb7c7933c" bit-offset="I:0" size="I:8">
        <type-array elements="I:8" size="I:8" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c7939c" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <union loc="193:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75ae89c" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb75ae9a4" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb75aea04" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb75ae478"/></type-tag>
      </field>
    </union>
    <struct name="node" loc="62:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/heap.c" ref="0xb7a75684" defined="" size="I:12" alignment="I:4">
      <field name="data" ref="0xb7a759ac" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="key" ref="0xb7a75a0c" bit-offset="I:32" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum name="cc2420_rssi_enums" loc="275:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7831620" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="64:/usr/include/i386-linux-gnu/sys/select.h" ref="0xb7c8a45c" defined="" size="I:128" alignment="I:4">
      <field name="__fds_bits" ref="0xb7c8a564" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="long" size="I:4" alignment="I:4">
            <typename><typedef-ref name="__fd_mask" ref="0xb7c8bd4c"/></typename>
          </type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="8:includes/sendInfo.h" ref="0xb765a5f4" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="144:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7843988" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="security_header_t" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7854a58" defined="" size="I:6" alignment="I:1">
      <field name="secLevel" ref="0xb78464c8" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="keyMode" ref="0xb7846528" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0xb7846588" bit-offset="I:5" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="frameCounter" ref="0xb78465e8" bit-offset="I:8" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
          <typename><typedef-ref name="nx_uint32_t" ref="0xb7ce717c"/></typename>
        </type-int>
      </field>
      <field name="keyID" ref="0xb7846648" bit-offset="I:40" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="serial_packet" loc="131:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0xb790d31c" defined="" size="I:7" alignment="I:1">
      <field name="header" ref="0xb790d788" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0xb790e6bc"/>
          <typename><typedef-ref name="serial_header_t" ref="0xb790d124"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0xb790d7e8" bit-offset="I:56" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <attribute name="integer"  loc="NONE" ref="0xb7f8eb34" size="V:" alignment="V:">
    </attribute>
    <attribute name="exactlyonce" loc="99:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/tos.h" ref="0xb7abaf58" defined="" size="I:0" alignment="I:1">
    </attribute>
    <union name="message_footer" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/platform_message.h" ref="0xb790b8a0" defined="" size="I:2" alignment="I:1">
      <field name="tossim" ref="0xb790bbcc" bit-offset="I:0" size="I:2">
        <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0xb7914688"/>
          <typename><typedef-ref name="tossim_footer_t" ref="0xb7914a28"/></typename>
        </type-tag>
      </field>
    </union>
    <union name="message_metadata" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/platform_message.h" ref="0xb790be98" defined="" size="I:7" alignment="I:1">
      <field name="tossim" ref="0xb790a208" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0xb7914c34"/>
          <typename><typedef-ref name="tossim_metadata_t" ref="0xb7912f08"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="combine"  loc="NONE" ref="0xb7f8b854" size="V:" alignment="V:">
      <field name="fn" ref="0xb7f8b95c" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <struct name="drand48_data" loc="412:/usr/include/stdlib.h" ref="0xb7c680e8" defined="" size="I:24" alignment="I:4">
      <field name="__x" ref="0xb7c68850" bit-offset="I:0" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__old_x" ref="0xb7c688b0" bit-offset="I:48" size="I:6">
        <type-array elements="I:3" size="I:6" alignment="I:2">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
        </type-array>
      </field>
      <field name="__c" ref="0xb7c68910" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__init" ref="0xb7c68970" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__a" ref="0xb7c689d0" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum name="cc2420_nonce_enums" loc="239:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb783503c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="133:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75b35a8" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb75b36b0" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb75b3710" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb75b3068"/></type-tag>
      </field>
    </union>
    <struct name="__locale_struct" loc="27:/usr/include/xlocale.h" ref="0xb7cd6190" defined="" size="I:116" alignment="I:4">
      <field name="__locales" ref="0xb7cd6ca8" bit-offset="I:0" size="I:52">
        <type-array elements="I:13" size="I:52" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="V:" alignment="V:"><struct-ref name="__locale_data" ref="0xb7cd6320"/></type-tag>
          </type-pointer>
        </type-array>
      </field>
      <field name="__ctype_b" ref="0xb7cd6d08" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_tolower" ref="0xb7cd6d68" bit-offset="I:448" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__ctype_toupper" ref="0xb7cd6dc8" bit-offset="I:480" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="__names" ref="0xb7cd6e28" bit-offset="I:512" size="I:52">
        <type-array elements="I:13" size="I:52" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
        </type-array>
      </field>
    </struct>
    <struct name="lqi_dist" loc="4:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h" ref="0xb77454ac" defined="" size="I:12" alignment="I:4">
      <field name="lqi" ref="0xb77457e4" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="cdf" ref="0xb7745844" bit-offset="I:32" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <struct loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.h" ref="0xb78e62a0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0xb78e63a8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="22:includes/CommandMsg.h" ref="0xb78c725c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="315:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb759f3bc" defined="" size="I:1" alignment="I:1">
      <field name="ocf1c" ref="0xb759f4c4" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocf3c" ref="0xb759f524" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="tov3" ref="0xb759f584" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocf3b" ref="0xb759f5e4" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocf3a" ref="0xb759f644" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="icf3" ref="0xb759f6a4" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0xb759f704" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <nx_struct name="serial_header" loc="123:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0xb790e6bc" defined="" size="I:7" alignment="I:1">
      <field name="dest" ref="0xb790ee9c" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0xb79163f0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0xb790eefc" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0xb79163f0"/></typename>
        </type-int>
      </field>
      <field name="length" ref="0xb790ef5c" bit-offset="I:32" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0xb790d010" bit-offset="I:40" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0xb791616c"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0xb790d070" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0xb7917d80"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <union name="message_header" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/platform_message.h" ref="0xb790b0ec" defined="" size="I:11" alignment="I:1">
      <field name="tossim" ref="0xb790b588" bit-offset="I:0" size="I:11">
        <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0xb7915564"/>
          <typename><typedef-ref name="tossim_header_t" ref="0xb7914464"/></typename>
        </type-tag>
      </field>
      <field name="serial" ref="0xb790b5e8" bit-offset="I:0" size="I:7">
        <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0xb790e6bc"/>
          <typename><typedef-ref name="serial_header_t" ref="0xb790d124"/></typename>
        </type-tag>
      </field>
    </union>
    <enum loc="25:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h" ref="0xb78c0698" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="timespec" loc="120:/usr/include/time.h" ref="0xb7c8df10" defined="" size="I:8" alignment="I:4">
      <field name="tv_sec" ref="0xb7c8b330" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__time_t" ref="0xb7caf478"/></typename>
        </type-int>
      </field>
      <field name="tv_nsec" ref="0xb7c8b390" bit-offset="I:32" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__syscall_slong_t" ref="0xb7cacaa8"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="count" loc="11:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0xb7f86c1c" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0xb7f86db8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum name="cc2420_manfidh_enums" loc="367:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7827de0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="bnd_nok" loc="10:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0xb7f86620" defined="" size="I:8" alignment="I:4">
      <field name="lo" ref="0xb7f86864" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="hi" ref="0xb7f868c4" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
    </attribute>
    <union loc="67:/usr/include/stdlib.h" ref="0xb7ca7da0" defined="" size="I:4" alignment="I:4">
      <field name="__uptr" ref="0xb7ca7ea8" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:4" alignment="I:4"><union-ref name="wait" ref="0xb7ca8568"/></type-tag>
        </type-pointer>
      </field>
      <field name="__iptr" ref="0xb7ca7f08" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </type-pointer>
      </field>
    </union>
    <nx_struct name="cc2420_packet_t" loc="111:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7843240" defined="" size="I:12" alignment="I:1">
      <field name="packet" ref="0xb78436ac" bit-offset="I:0" size="I:12">
        <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0xb7846924"/>
          <typename><typedef-ref name="cc2420_header_t" ref="0xb78458b8"/></typename>
        </type-tag>
      </field>
      <field name="data" ref="0xb784370c" bit-offset="I:96" size="I:0">
        <type-array elements="I:0" size="I:0" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="timezone" loc="55:/usr/include/i386-linux-gnu/sys/time.h" ref="0xb7a3d010" defined="" size="I:8" alignment="I:4">
      <field name="tz_minuteswest" ref="0xb7a3d350" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tz_dsttime" ref="0xb7a3d3b0" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <union name="wait" loc="66:/usr/include/i386-linux-gnu/bits/waitstatus.h" ref="0xb7ca8568" defined="" size="I:4" alignment="I:4">
      <field name="w_status" ref="0xb7ca78f0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wait_terminated" ref="0xb7ca7950" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb7ca8dc8"/></type-tag>
      </field>
      <field name="__wait_stopped" ref="0xb7ca79b0" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb7ca75ec"/></type-tag>
      </field>
    </union>
    <struct name="sim_event" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_event_queue.h" ref="0xb7aca690" defined="" size="I:28" alignment="I:4">
      <field name="time" ref="0xb7ac987c" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0xb7ad29dc"/></typename>
        </type-int>
      </field>
      <field name="mote" ref="0xb7ac98dc" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="force" ref="0xb7ac993c" bit-offset="I:96" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
        </type-int>
      </field>
      <field name="cancelled" ref="0xb7ac999c" bit-offset="I:104" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
        </type-int>
      </field>
      <field name="data" ref="0xb7ac99fc" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="handle" ref="0xb7ac9a5c" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:4" alignment="I:4">
                <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7aca690"/>
                  <typename><typedef-ref name="sim_event_t" ref="0xb7aca8e8"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
      <field name="cleanup" ref="0xb7ac9acc" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-function size="I:1" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
            <function-parameters>
              <type-pointer size="I:4" alignment="I:4">
                <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7aca690"/>
                  <typename><typedef-ref name="sim_event_t" ref="0xb7aca8e8"/></typename>
                </type-tag>
              </type-pointer>
            </function-parameters>
          </type-function>
        </type-pointer>
      </field>
    </struct>
    <enum loc="6:dataStructures/interfaces/../../includes/am_types.h" ref="0xb78c1efc" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_jump_t" ref="0xb7b2ac10" size="V:" alignment="V:">
    </struct>
    <nx_struct name="tossim_footer" loc="20:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0xb7914688" defined="" size="I:2" alignment="I:1">
      <field name="crc" ref="0xb7914974" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0xb7ce40b0"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__codecvt_result" loc="176:/usr/include/libio.h" ref="0xb7b2780c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_packet" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_packet.h" ref="0xb7921e30" defined="" size="I:0" alignment="I:1">
    </struct>
    <enum name="cc2420_iocfg0_enums" loc="347:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7829bf0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="153:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75b16bc" defined="" size="I:1" alignment="I:1">
      <field name="tov0" ref="0xb75b17c4" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocf0" ref="0xb75b1824" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="tov1" ref="0xb75b1884" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocf1b" ref="0xb75b18e4" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocf1a" ref="0xb75b1944" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="icf1" ref="0xb75b19a4" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="tov2" ref="0xb75b1a04" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocf2" ref="0xb75b1a64" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="297:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75a1430" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb75a1538" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb75a1598" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb75a2f10"/></type-tag>
      </field>
    </union>
    <enum name="cc2420_rsctrl_enums" loc="317:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb782c664" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="136:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75b3068" defined="" size="I:1" alignment="I:1">
      <field name="toie0" ref="0xb75b3170" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocie0" ref="0xb75b31d0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="toie1" ref="0xb75b3230" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocie1b" ref="0xb75b3290" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocie1a" ref="0xb75b32f0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ticie1" ref="0xb75b3350" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="toie2" ref="0xb75b33b0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocie2" ref="0xb75b3410" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__pthread_internal_slist" loc="81:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c829bc" defined="" size="I:4" alignment="I:4">
      <field name="__next" ref="0xb7c82d98" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0xb7c829bc"/></type-tag>
        </type-pointer>
      </field>
    </struct>
    <struct loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.h" ref="0xb78e6ae0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0xb78e6be8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="82:/usr/include/wchar.h" ref="0xb7b2b7c0" defined="" size="I:8" alignment="I:4">
      <field name="__count" ref="0xb7b2b8c8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__value" ref="0xb7b2b928" bit-offset="I:32" size="I:4">
        <type-tag size="I:4" alignment="I:4"><union-ref ref="0xb7b2b4e0"/></type-tag>
      </field>
    </struct>
    <nx_struct name="serial_metadata" loc="136:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0xb790db18" defined="" size="I:1" alignment="I:1">
      <field name="ack" ref="0xb790ddfc" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <enum name="__itimer_which" loc="91:/usr/include/i386-linux-gnu/sys/time.h" ref="0xb7a3a650" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atmostonce" loc="97:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/tos.h" ref="0xb7abab70" defined="" size="I:0" alignment="I:1">
    </attribute>
    <enum loc="12:includes/command.h" ref="0xb765b07c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="174:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c7bae8" defined="" size="I:32" alignment="I:4">
      <field name="__data" ref="0xb7c7bbf0" bit-offset="I:0" size="I:32">
        <type-tag size="I:32" alignment="I:4"><struct-ref ref="0xb7c7b010"/></type-tag>
      </field>
      <field name="__size" ref="0xb7c7bc50" bit-offset="I:0" size="I:32">
        <type-array elements="I:32" size="I:32" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c7bcb0" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="138:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb78592d8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_status_enums" loc="164:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7840e4c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="101:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75b8834" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0xb75b893c" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="wgm1" ref="0xb75b899c" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="com" ref="0xb75b89fc" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="wgm0" ref="0xb75b8a5c" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="foc" ref="0xb75b8abc" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="hwevent"  loc="NONE" ref="0xb7f8b434" size="V:" alignment="V:">
    </attribute>
    <enum name="cc2420_ram_addr_enums" loc="225:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7837400" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_battmon_enums" loc="341:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb782926c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="97:/usr/include/stdlib.h" ref="0xb7ca64ac" defined="" size="I:8" alignment="I:4">
      <field name="quot" ref="0xb7ca65b4" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rem" ref="0xb7ca6614" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="_IO_FILE" loc="241:/usr/include/libio.h" ref="0xb7b2d91c" defined="" size="I:148" alignment="I:4">
      <field name="_flags" ref="0xb7b248b8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_IO_read_ptr" ref="0xb7b24918" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_end" ref="0xb7b24978" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_read_base" ref="0xb7b249d8" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_base" ref="0xb7b24a38" bit-offset="I:128" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_ptr" ref="0xb7b24a98" bit-offset="I:160" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_write_end" ref="0xb7b24af8" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_base" ref="0xb7b24b58" bit-offset="I:224" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_buf_end" ref="0xb7b24bb8" bit-offset="I:256" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_base" ref="0xb7b24c18" bit-offset="I:288" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_backup_base" ref="0xb7b24c78" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_IO_save_end" ref="0xb7b24cd8" bit-offset="I:352" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="_markers" ref="0xb7b24d38" bit-offset="I:384" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="_IO_marker" ref="0xb7b270c4"/></type-tag>
        </type-pointer>
      </field>
      <field name="_chain" ref="0xb7b24e18" bit-offset="I:416" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7b2d91c"/></type-tag>
        </type-pointer>
      </field>
      <field name="_fileno" ref="0xb7b24e78" bit-offset="I:448" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_flags2" ref="0xb7b24ed8" bit-offset="I:480" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_old_offset" ref="0xb7b24f38" bit-offset="I:512" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__off_t" ref="0xb7cb0010"/></typename>
        </type-int>
      </field>
      <field name="_cur_column" ref="0xb7b24f98" bit-offset="I:544" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="_vtable_offset" ref="0xb7b22010" bit-offset="I:560" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="_shortbuf" ref="0xb7b22070" bit-offset="I:568" size="I:1">
        <type-array elements="I:1" size="I:1" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="_lock" ref="0xb7b220d0" bit-offset="I:576" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1">
            <typename><typedef-ref name="_IO_lock_t" ref="0xb7b2aea4"/></typename>
          </type-void>
        </type-pointer>
      </field>
      <field name="_offset" ref="0xb7b22130" bit-offset="I:608" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0xb7cb0274"/></typename>
        </type-int>
      </field>
      <field name="__pad1" ref="0xb7b22190" bit-offset="I:672" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad2" ref="0xb7b221f0" bit-offset="I:704" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad3" ref="0xb7b22250" bit-offset="I:736" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad4" ref="0xb7b223b0" bit-offset="I:768" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__pad5" ref="0xb7b22410" bit-offset="I:800" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="size_t" ref="0xb7f883cc"/></typename>
        </type-int>
      </field>
      <field name="_mode" ref="0xb7b22470" bit-offset="I:832" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="_unused2" ref="0xb7b224d0" bit-offset="I:864" size="I:40">
        <type-array elements="I:40" size="I:40" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </struct>
    <union name="pthread_attr_t" loc="63:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c820fc" defined="" size="I:36" alignment="I:4">
      <field name="__size" ref="0xb7c82478" bit-offset="I:0" size="I:36">
        <type-array elements="I:36" size="I:36" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c824d8" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <struct name="hashtable" ref="0xb7ab9260" size="V:" alignment="V:">
    </struct>
    <struct name="heap" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/heap.h" ref="0xb7a791fc" defined="" size="I:12" alignment="I:4">
      <field name="size" ref="0xb7a7960c" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="data" ref="0xb7a7966c" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="private_size" ref="0xb7a796cc" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum name="cc2420_syncword_enums" loc="280:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7831cb4" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="safe"  loc="NONE" ref="0xb7f8bd30" size="V:" alignment="V:">
    </attribute>
    <nx_struct name="pack" loc="19:includes/packet.h" ref="0xb78c4420" defined="" size="I:28" alignment="I:1">
      <field name="dest" ref="0xb78c4dfc" bit-offset="I:0" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0xb7ce9cd4"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0xb78c4e5c" bit-offset="I:16" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0xb7ce9cd4"/></typename>
        </type-int>
      </field>
      <field name="seq" ref="0xb78c4ebc" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0xb7ce9cd4"/></typename>
        </type-int>
      </field>
      <field name="TTL" ref="0xb78c4f1c" bit-offset="I:48" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="protocol" ref="0xb78c4f7c" bit-offset="I:56" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="payload" ref="0xb78c2010" bit-offset="I:64" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <struct name="_IO_marker" loc="156:/usr/include/libio.h" ref="0xb7b270c4" defined="" size="I:12" alignment="I:4">
      <field name="_next" ref="0xb7b275ac" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="_IO_marker" ref="0xb7b270c4"/></type-tag>
        </type-pointer>
      </field>
      <field name="_sbuf" ref="0xb7b2760c" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7b2d91c"/></type-tag>
        </type-pointer>
      </field>
      <field name="_pos" ref="0xb7b2766c" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sendInfo" loc="12:includes/sendInfo.h" ref="0xb765a9bc" defined="" size="I:32" alignment="I:2">
      <field name="packet" ref="0xb765ae50" bit-offset="I:0" size="I:28">
        <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0xb78c4420"/>
          <typename><typedef-ref name="pack" ref="0xb78c20c4"/></typename>
        </type-tag>
      </field>
      <field name="src" ref="0xb765aeb0" bit-offset="I:224" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0xb765af10" bit-offset="I:240" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_log.c" ref="0xb7ab37a8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="random_data" loc="343:/usr/include/stdlib.h" ref="0xb7c745c8" defined="" size="I:28" alignment="I:4">
      <field name="fptr" ref="0xb7c74e70" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0xb7f82a2c"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rptr" ref="0xb7c74ed0" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0xb7f82a2c"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="state" ref="0xb7c74f30" bit-offset="I:64" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0xb7f82a2c"/></typename>
          </type-int>
        </type-pointer>
      </field>
      <field name="rand_type" ref="0xb7c74f90" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_deg" ref="0xb7c73010" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="rand_sep" ref="0xb7c73070" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="end_ptr" ref="0xb7c730d0" bit-offset="I:192" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="int" size="I:4" alignment="I:4">
            <typename><typedef-ref name="int32_t" ref="0xb7f82a2c"/></typename>
          </type-int>
        </type-pointer>
      </field>
    </struct>
    <enum loc="50:/usr/include/i386-linux-gnu/bits/waitflags.h" ref="0xb7cb86d8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="85:/usr/include/wchar.h" ref="0xb7b2b4e0" defined="" size="I:4" alignment="I:4">
      <field name="__wch" ref="0xb7b2b5e8" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__wchb" ref="0xb7b2b648" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
    </union>
    <enum loc="76:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/tos.h" ref="0xb7ad21bc" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="144:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb7859894" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="150:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb7858848" defined="" size="I:1" alignment="I:1">
      <field name="adps" ref="0xb7858950" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="adie" ref="0xb78589b0" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="adif" ref="0xb7858a10" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="adfr" ref="0xb7858a70" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="adsc" ref="0xb7858ad0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="aden" ref="0xb7858b30" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb786254c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="tm" loc="133:/usr/include/time.h" ref="0xb79abd50" defined="" size="I:44" alignment="I:4">
      <field name="tm_sec" ref="0xb79a98a8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_min" ref="0xb79a9908" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_hour" ref="0xb79a9968" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mday" ref="0xb79a99c8" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_mon" ref="0xb79a9a28" bit-offset="I:128" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_year" ref="0xb79a9a88" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_wday" ref="0xb79a9ae8" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_yday" ref="0xb79a9b48" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_isdst" ref="0xb79a9ba8" bit-offset="I:256" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_gmtoff" ref="0xb79a9c08" bit-offset="I:288" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="tm_zone" ref="0xb79a9c68" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
    </struct>
    <struct loc="196:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75ae478" defined="" size="I:1" alignment="I:1">
      <field name="wgm10" ref="0xb75ae580" bit-offset="I:0" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="comC" ref="0xb75ae5e0" bit-offset="I:2" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="comB" ref="0xb75ae640" bit-offset="I:4" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="comA" ref="0xb75ae6a0" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="sim_log_output" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_log.c" ref="0xb7ab3bd0" defined="" size="I:8" alignment="I:4">
      <field name="num" ref="0xb7ab3f74" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="files" ref="0xb7ab2010" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7b2d91c"/>
              <typename><typedef-ref name="FILE" ref="0xb7b2db48"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <union loc="150:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75b1bf0" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb75b1cf8" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb75b1d58" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb75b16bc"/></type-tag>
      </field>
    </union>
    <union loc="130:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c80d4c" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0xb7c80e54" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c80eb4" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="46:/usr/include/ctype.h" ref="0xb7b48610" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_log.c" ref="0xb7ab2ba4" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="radio_stats" loc="109:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0xb7910f50" defined="" size="I:18" alignment="I:2">
      <field name="version" ref="0xb790e050" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="flags" ref="0xb790e0b0" bit-offset="I:8" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="reserved" ref="0xb790e110" bit-offset="I:16" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="platform" ref="0xb790e170" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="MTU" ref="0xb790e1d0" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
        </type-int>
      </field>
      <field name="radio_crc_fail" ref="0xb790e230" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
        </type-int>
      </field>
      <field name="radio_queue_drops" ref="0xb790e290" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
        </type-int>
      </field>
      <field name="serial_crc_fail" ref="0xb790e2f0" bit-offset="I:80" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
        </type-int>
      </field>
      <field name="serial_tx_fail" ref="0xb790e350" bit-offset="I:96" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
        </type-int>
      </field>
      <field name="serial_short_packets" ref="0xb790e3b0" bit-offset="I:112" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
        </type-int>
      </field>
      <field name="serial_proto_drops" ref="0xb790e410" bit-offset="I:128" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
          <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="dmemset" loc="15:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0xb7f830b4" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0xb7f83324" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0xb7f83384" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0xb7f833e4" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="one_nok" loc="14:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0xb7f85b6c" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0xb7f85d30" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <attribute name="atleastonce" loc="98:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/tos.h" ref="0xb7abad64" defined="" size="I:0" alignment="I:1">
    </attribute>
    <struct loc="84:/usr/include/i386-linux-gnu/bits/waitstatus.h" ref="0xb7ca75ec" defined="" size="I:4" alignment="I:4">
      <field name="__w_stopval" ref="0xb7ca76f4" bit-offset="I:0" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_stopsig" ref="0xb7ca7754" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="26:/usr/include/_G_config.h" ref="0xb7b2a4c0" defined="" size="I:16" alignment="I:4">
      <field name="__pos" ref="0xb7b2a5c8" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__off64_t" ref="0xb7cb0274"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0xb7b2a628" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7b2b7c0"/>
          <typename><typedef-ref name="__mbstate_t" ref="0xb7b2b9dc"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="673:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h" ref="0xb78acadc" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="234:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75a9488" defined="" size="I:1" alignment="I:1">
      <field name="cs" ref="0xb75a9d90" bit-offset="I:0" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="wgm32" ref="0xb75a9df0" bit-offset="I:3" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0xb75a9e50" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ices1" ref="0xb75a9eb0" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="icnc1" ref="0xb75a9f10" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <union loc="312:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb759f89c" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb759f9a4" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb759fa04" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb759f3bc"/></type-tag>
      </field>
    </union>
    <struct name="itimerval" loc="107:/usr/include/i386-linux-gnu/sys/time.h" ref="0xb7a3ae24" defined="" size="I:16" alignment="I:4">
      <field name="it_interval" ref="0xb7a39268" bit-offset="I:0" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timeval" ref="0xb7c8b514"/></type-tag>
      </field>
      <field name="it_value" ref="0xb7a392c8" bit-offset="I:64" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="timeval" ref="0xb7c8b514"/></type-tag>
      </field>
    </struct>
    <enum loc="39:includes/packet.h" ref="0xb78c1bc4" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="cc2420_header_t" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7846924" defined="" size="I:12" alignment="I:1">
      <field name="length" ref="0xb7845564" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0xb7ce6c14"/></typename>
        </type-int>
      </field>
      <field name="fcf" ref="0xb78455c4" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0xb7ce40b0"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0xb7845624" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0xb7ce6c14"/></typename>
        </type-int>
      </field>
      <field name="destpan" ref="0xb7845684" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0xb7ce40b0"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0xb78456e4" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0xb7ce40b0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0xb7845744" bit-offset="I:64" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
          <typename><typedef-ref name="nxle_uint16_t" ref="0xb7ce40b0"/></typename>
        </type-int>
      </field>
      <field name="network" ref="0xb78457a4" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0xb7ce6c14"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0xb7845804" bit-offset="I:88" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0xb7ce6c14"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="123:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75b5adc" defined="" size="I:1" alignment="I:1">
      <field name="tcr0ub" ref="0xb75b5be4" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocr0ub" ref="0xb75b5c44" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="tcn0ub" ref="0xb75b5ca4" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="as0" ref="0xb75b5d04" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0xb75b5d64" bit-offset="I:4" bit-size="I:4">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="count_nok" loc="12:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0xb7f8515c" defined="" size="I:4" alignment="I:4">
      <field name="n" ref="0xb7f852f8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum name="cc2420_rxctrl0_enums" loc="294:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb782f4f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sigevent" ref="0xb79a83b8" size="V:" alignment="V:">
    </struct>
    <union loc="139:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c7d398" defined="" size="I:48" alignment="I:4">
      <field name="__data" ref="0xb7c7d4a0" bit-offset="I:0" size="I:44">
        <type-tag size="I:44" alignment="I:4"><struct-ref ref="0xb7c7eba0"/></type-tag>
      </field>
      <field name="__size" ref="0xb7c7d500" bit-offset="I:0" size="I:48">
        <type-array elements="I:48" size="I:48" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c7d560" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </union>
    <struct loc="253:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75a72ac" defined="" size="I:1" alignment="I:1">
      <field name="rsvd" ref="0xb75a73b4" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="focC" ref="0xb75a7414" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="focB" ref="0xb75a7474" bit-offset="I:6" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="focA" ref="0xb75a74d4" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="87:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0xb7911364" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_security_enums" loc="385:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7825ab0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="one" loc="13:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0xb7f8563c" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0xb7f85800" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <struct loc="21:/usr/include/_G_config.h" ref="0xb7b2be30" defined="" size="I:12" alignment="I:4">
      <field name="__pos" ref="0xb7b2bf38" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__off_t" ref="0xb7cb0010"/></typename>
        </type-int>
      </field>
      <field name="__state" ref="0xb7b2bf98" bit-offset="I:32" size="I:8">
        <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7b2b7c0"/>
          <typename><typedef-ref name="__mbstate_t" ref="0xb7b2b9dc"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb78615fc" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="26:/home/sigi/CSE160/tiny/tinyos-main/tos/types/AM.h" ref="0xb7916f40" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_fsmtc_enums" loc="372:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb78264bc" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="94:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb785c64c" defined="" size="I:1" alignment="I:1">
      <field name="mux" ref="0xb785c754" bit-offset="I:0" bit-size="I:5">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="adlar" ref="0xb785c7b4" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="refs" ref="0xb785c814" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <struct name="__locale_data" ref="0xb7cd6320" size="V:" alignment="V:">
    </struct>
    <attribute name="spontaneous"  loc="NONE" ref="0xb7f8b6f8" size="V:" alignment="V:">
    </attribute>
    <enum loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h" ref="0xb7c7829c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="104:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb785ca20" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="snr_lqi" loc="9:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h" ref="0xb7745b74" defined="" size="I:16" alignment="I:4">
      <field name="snr" ref="0xb7742010" bit-offset="I:0" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="numLqi" ref="0xb7742070" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0xb77420d0" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
            <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <union loc="90:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c80654" defined="" size="I:24" alignment="I:4">
      <field name="__data" ref="0xb7c8075c" bit-offset="I:0" size="I:24">
        <type-tag size="I:24" alignment="I:4"><struct-ref name="__pthread_mutex_s" ref="0xb7c81118"/></type-tag>
      </field>
      <field name="__size" ref="0xb7c807bc" bit-offset="I:0" size="I:24">
        <type-array elements="I:24" size="I:24" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c8081c" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="102:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0xb79103ec" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75bcd64" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="112:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c81d3c" defined="" size="I:4" alignment="I:4">
      <field name="__elision_data" ref="0xb7c81e44" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb7c81948"/></type-tag>
      </field>
      <field name="__list" ref="0xb7c81ea4" bit-offset="I:0" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0xb7c829bc"/>
          <typename><typedef-ref name="__pthread_slist_t" ref="0xb7c82e4c"/></typename>
        </type-tag>
      </field>
    </union>
    <attribute name="unsafe"  loc="NONE" ref="0xb7f8be8c" size="V:" alignment="V:">
    </attribute>
    <nx_struct name="cc2420_footer_t" loc="83:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7845b00" defined="" size="I:0" alignment="I:1">
    </nx_struct>
    <struct loc="69:/usr/include/i386-linux-gnu/bits/waitstatus.h" ref="0xb7ca8dc8" defined="" size="I:4" alignment="I:4">
      <field name="__w_termsig" ref="0xb7ca8ed0" bit-offset="I:0" bit-size="I:7">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_coredump" ref="0xb7ca8f30" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__w_retcode" ref="0xb7ca8f90" bit-offset="I:8" bit-size="I:8">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.h" ref="0xb78e66c0" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0xb78e67c8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum loc="90:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75b95a8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="167:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75b0e84" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb75b0f8c" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb75af010" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb75b0a04"/></type-tag>
      </field>
    </union>
    <struct loc="170:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75b0a04" defined="" size="I:1" alignment="I:1">
      <field name="psr321" ref="0xb75b0b0c" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="psr0" ref="0xb75b0b6c" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="pud" ref="0xb75b0bcc" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="acme" ref="0xb75b0c2c" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0xb75b0c8c" bit-offset="I:4" bit-size="I:3">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="tsm" ref="0xb75b0cec" bit-offset="I:7" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <enum name="cc2420_mdmctrl0_enums" loc="256:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7833010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="211:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75ac354" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="27:/usr/include/i386-linux-gnu/bits/sigset.h" ref="0xb7c8d8d4" defined="" size="I:128" alignment="I:4">
      <field name="__val" ref="0xb7c8d9dc" bit-offset="I:0" size="I:128">
        <type-array elements="I:32" size="I:128" alignment="I:4">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
        </type-array>
      </field>
    </struct>
    <enum loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h" ref="0xb7857240" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_mdmctrl1_enums" loc="267:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7832774" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="117:/usr/include/stdlib.h" ref="0xb7ca5084" defined="" size="I:16" alignment="I:4">
      <field name="quot" ref="0xb7ca518c" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0xb7ca51ec" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <attribute name="nts" loc="17:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0xb7f83dc4" defined="" size="I:4" alignment="I:4">
      <field name="dummy" ref="0xb7f83f88" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <union loc="239:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c79b60" defined="" size="I:20" alignment="I:4">
      <field name="__size" ref="0xb7c79c68" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c79cc8" bit-offset="I:0" size="I:4">
        <type-int cname="long" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <enum loc="23:includes/command.h" ref="0xb765a24c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="_IO_FILE_plus" ref="0xb7b228a0" size="V:" alignment="V:">
    </struct>
    <struct name="exception" loc="372:/usr/include/math.h" ref="0xb7b497a8" defined="" size="I:32" alignment="I:4">
      <field name="type" ref="0xb7b49cc4" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="name" ref="0xb7b49d24" bit-offset="I:32" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="arg1" ref="0xb7b49d84" bit-offset="I:64" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="arg2" ref="0xb7b49de4" bit-offset="I:128" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="retval" ref="0xb7b49e44" bit-offset="I:192" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
    </struct>
    <enum loc="209:/usr/include/math.h" ref="0xb7b4bcf0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75c0874" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="sim_log_channel" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_log.c" ref="0xb7ab22d0" defined="" size="I:16" alignment="I:4">
      <field name="name" ref="0xb7ab2898" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-qualified const="">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-qualified>
        </type-pointer>
      </field>
      <field name="numOutputs" ref="0xb7ab28f8" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0xb7ab2958" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="outputs" ref="0xb7ab29b8" bit-offset="I:96" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7b2d91c"/>
              <typename><typedef-ref name="FILE" ref="0xb7b2db48"/></typename>
            </type-tag>
          </type-pointer>
        </type-pointer>
      </field>
    </struct>
    <enum loc="10:includes/CommandMsg.h" ref="0xb78c804c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="126:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h" ref="0xb78635cc" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="120:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb785a010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="300:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75a2f10" defined="" size="I:1" alignment="I:1">
      <field name="ocie1c" ref="0xb75a1050" bit-offset="I:0" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocie3c" ref="0xb75a10b0" bit-offset="I:1" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="toie3" ref="0xb75a1110" bit-offset="I:2" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocie3b" ref="0xb75a1170" bit-offset="I:3" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ocie3a" ref="0xb75a11d0" bit-offset="I:4" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="ticie3" ref="0xb75a1230" bit-offset="I:5" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="rsvd" ref="0xb75a1290" bit-offset="I:6" bit-size="I:2">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <attribute name="C"  loc="NONE" ref="0xb7f8b2d8" size="V:" alignment="V:">
    </attribute>
    <struct name="sim_noise_hash_t" loc="64:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0xb7a338b0" defined="" size="I:480" alignment="I:4">
      <field name="key" ref="0xb7a321e8" bit-offset="I:0" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="numElements" ref="0xb7a32248" bit-offset="I:160" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="size" ref="0xb7a322a8" bit-offset="I:192" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="elements" ref="0xb7a32308" bit-offset="I:224" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="flag" ref="0xb7a32368" bit-offset="I:256" size="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="dist" ref="0xb7a323c8" bit-offset="I:288" size="I:444">
        <type-array elements="I:111" size="I:444" alignment="I:4">
          <type-float cname="float" size="I:4" alignment="I:4"></type-float>
        </type-array>
      </field>
    </struct>
    <enum loc="126:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb785a5a4" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="41:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.h" ref="0xb7a0dd08" defined="" size="I:4" alignment="I:4">
      <field name="notUsed" ref="0xb7a0de10" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum name="cc2420_main_enums" loc="247:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7835e9c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="156:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c7da88" defined="" size="I:4" alignment="I:4">
      <field name="__size" ref="0xb7c7db90" bit-offset="I:0" size="I:4">
        <type-array elements="I:4" size="I:4" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="__align" ref="0xb7c7dbf0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </union>
    <attribute name="macro"  loc="NONE" ref="0xb7f8ba10" size="V:" alignment="V:">
      <field name="macro_name" ref="0xb7f8bb18" bit-offset="U:" bit-size="U:">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
    </attribute>
    <enum loc="347:/usr/include/math.h" ref="0xb7b4a894" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="114:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c81948" defined="" size="I:4" alignment="I:2">
      <field name="__espins" ref="0xb7c81a50" bit-offset="I:0" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
      <field name="__elision" ref="0xb7c81ab0" bit-offset="I:16" size="I:2">
        <type-int cname="short" size="I:2" alignment="I:2"></type-int>
      </field>
    </struct>
    <enum loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb7861010" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_enums" loc="155:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7841ac8" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_sfdmux_enums" loc="380:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb78253e0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <nx_struct name="message_t" loc="14:/home/sigi/CSE160/tiny/tinyos-main/tos/types/message.h" ref="0xb790a48c" defined="" size="I:48" alignment="I:1">
      <field name="header" ref="0xb7909010" bit-offset="I:0" size="I:11">
        <type-array elements="I:11" size="I:11" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="data" ref="0xb7909070" bit-offset="I:88" size="I:28">
        <type-array elements="I:28" size="I:28" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="footer" ref="0xb79090d0" bit-offset="I:312" size="I:2">
        <type-array elements="I:2" size="I:2" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="metadata" ref="0xb7909130" bit-offset="I:328" size="I:7">
        <type-array elements="I:7" size="I:7" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
            <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
          </type-int>
        </type-array>
      </field>
    </nx_struct>
    <nx_struct name="tossim_header" loc="6:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h" ref="0xb7915564" defined="" size="I:11" alignment="I:1">
      <field name="length" ref="0xb7914110" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="fcf" ref="0xb7914170" bit-offset="I:8" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_uint16_t" ref="0xb7ce9cd4"/></typename>
        </type-int>
      </field>
      <field name="dsn" ref="0xb79141d0" bit-offset="I:24" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
        </type-int>
      </field>
      <field name="dest" ref="0xb7914230" bit-offset="I:32" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0xb79163f0"/></typename>
        </type-int>
      </field>
      <field name="src" ref="0xb7914290" bit-offset="I:48" size="I:2">
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
          <typename><typedef-ref name="nx_am_addr_t" ref="0xb79163f0"/></typename>
        </type-int>
      </field>
      <field name="group" ref="0xb79142f0" bit-offset="I:64" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_group_t" ref="0xb791616c"/></typename>
        </type-int>
      </field>
      <field name="network" ref="0xb7914350" bit-offset="I:72" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
          <typename><typedef-ref name="nxle_uint8_t" ref="0xb7ce6c14"/></typename>
        </type-int>
      </field>
      <field name="type" ref="0xb79143b0" bit-offset="I:80" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
          <typename><typedef-ref name="nx_am_id_t" ref="0xb7917d80"/></typename>
        </type-int>
      </field>
    </nx_struct>
    <struct loc="280:/usr/include/inttypes.h" ref="0xb7dc2da4" defined="" size="I:16" alignment="I:4">
      <field name="quot" ref="0xb7dc2eac" bit-offset="I:0" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="rem" ref="0xb7dc2f0c" bit-offset="I:64" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
      </field>
    </struct>
    <enum loc="94:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h" ref="0xb7911904" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_config_reg_enums" loc="173:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb783e4f0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="141:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c7eba0" defined="" size="I:44" alignment="I:4">
      <field name="__lock" ref="0xb7c7eca8" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__futex" ref="0xb7c7ed08" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__total_seq" ref="0xb7c7ed68" bit-offset="I:64" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__wakeup_seq" ref="0xb7c7edc8" bit-offset="I:128" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__woken_seq" ref="0xb7c7ee28" bit-offset="I:192" size="I:8">
        <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8"></type-int>
      </field>
      <field name="__mutex" ref="0xb7c7ee88" bit-offset="I:256" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-void size="I:1" alignment="I:1"></type-void>
        </type-pointer>
      </field>
      <field name="__nwaiters" ref="0xb7c7eee8" bit-offset="I:288" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__broadcast_seq" ref="0xb7c7ef48" bit-offset="I:320" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <struct name="sim_noise_node_t" loc="73:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0xb7a32754" defined="" size="I:184" alignment="I:4">
      <field name="key" ref="0xb7a316e4" bit-offset="I:0" size="I:64">
        <type-array elements="I:16" size="I:64" alignment="I:4">
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </type-array>
      </field>
      <field name="freqKey" ref="0xb7a31744" bit-offset="I:512" size="I:20">
        <type-array elements="I:20" size="I:20" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="lastNoiseVal" ref="0xb7a317a4" bit-offset="I:672" size="I:16">
        <type-array elements="I:16" size="I:16" alignment="I:1">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-array>
      </field>
      <field name="noiseGenTime" ref="0xb7a31804" bit-offset="I:800" size="I:64">
        <type-array elements="I:16" size="I:64" alignment="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
          </type-int>
        </type-array>
      </field>
      <field name="noiseTable" ref="0xb7a31864" bit-offset="I:1312" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0xb7ab9260"/></type-tag>
        </type-pointer>
      </field>
      <field name="noiseTrace" ref="0xb7a318c4" bit-offset="I:1344" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </field>
      <field name="noiseTraceLen" ref="0xb7a31924" bit-offset="I:1376" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
        </type-int>
      </field>
      <field name="noiseTraceIndex" ref="0xb7a31984" bit-offset="I:1408" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
        </type-int>
      </field>
      <field name="generated" ref="0xb7a319e4" bit-offset="I:1440" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="12:includes/packet.h" ref="0xb78c5a54" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="132:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h" ref="0xb785ac00" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="14:/home/sigi/CSE160/tiny/tinyos-main/tos/types/AM.h" ref="0xb7916be0" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h" ref="0xb7a35920" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum name="cc2420_manfidl_enums" loc="362:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb782772c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="82:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75bab6c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <union loc="98:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h" ref="0xb75b8c90" defined="" size="I:1" alignment="I:1">
      <field name="flat" ref="0xb75b8d98" bit-offset="I:0" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="bits" ref="0xb75b8df8" bit-offset="I:0" size="I:1">
        <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb75b8834"/></type-tag>
      </field>
    </union>
    <struct loc="202:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c7b010" defined="" size="I:32" alignment="I:4">
      <field name="__lock" ref="0xb7c7b318" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers" ref="0xb7c7b378" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__readers_wakeup" ref="0xb7c7b3d8" bit-offset="I:64" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__writer_wakeup" ref="0xb7c7b438" bit-offset="I:96" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_readers_queued" ref="0xb7c7b498" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nr_writers_queued" ref="0xb7c7b4f8" bit-offset="I:160" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__flags" ref="0xb7c7b558" bit-offset="I:192" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__shared" ref="0xb7c7b5b8" bit-offset="I:200" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__rwelision" ref="0xb7c7b618" bit-offset="I:208" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__pad2" ref="0xb7c7b678" bit-offset="I:216" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
      </field>
      <field name="__writer" ref="0xb7c7b6d8" bit-offset="I:224" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </struct>
    <enum name="cc2420_iocfg1_enums" loc="356:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb7828e04" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <attribute name="atomic_hwevent"  loc="NONE" ref="0xb7f8b598" size="V:" alignment="V:">
    </attribute>
    <attribute name="dmemcpy" loc="16:/usr/local/lib/ncc/deputy_nodeputy.h" ref="0xb7f83750" defined="" size="I:12" alignment="I:4">
      <field name="a1" ref="0xb7f839c0" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a2" ref="0xb7f83a20" bit-offset="I:32" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="a3" ref="0xb7f83a80" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
    </attribute>
    <enum name="cc2420_rxctrl1_enums" loc="304:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h" ref="0xb782e97c" defined="" size="I:4" alignment="I:4">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="__pthread_mutex_s" loc="92:/usr/include/i386-linux-gnu/bits/pthreadtypes.h" ref="0xb7c81118" defined="" size="I:24" alignment="I:4">
      <field name="__lock" ref="0xb7c80010" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__count" ref="0xb7c80070" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__owner" ref="0xb7c800d0" bit-offset="I:64" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__kind" ref="0xb7c80130" bit-offset="I:96" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__nusers" ref="0xb7c80190" bit-offset="I:128" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="__elision_data" ref="0xb7c801f0" bit-offset="I:160" size="I:4">
        <type-tag size="I:4" alignment="I:2"><struct-ref ref="0xb7c81948"/></type-tag>
      </field>
      <field name="__list" ref="0xb7c80250" bit-offset="I:160" size="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0xb7c829bc"/>
          <typename><typedef-ref name="__pthread_slist_t" ref="0xb7c82e4c"/></typename>
        </type-tag>
      </field>
    </struct>
    <enum loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc" ref="0xb78e4a5c" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="145:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0xb77d27ec" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="101:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0xb778a118" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="528:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc" ref="0xb766aa10" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <enum loc="96:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc" ref="0xb778aa74" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct name="receive_message" loc="69:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc" ref="0xb76e60f4" defined="" scoped="" size="I:52" alignment="I:4">
      <component-ref qname="CpmModelC"/>
      <field name="source" ref="0xb76e4338" bit-offset="I:0" size="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </field>
      <field name="start" ref="0xb76e4398" bit-offset="I:32" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0xb7ad29dc"/></typename>
        </type-int>
      </field>
      <field name="end" ref="0xb76e43f8" bit-offset="I:96" size="I:8">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="sim_time_t" ref="0xb7ad29dc"/></typename>
        </type-int>
      </field>
      <field name="power" ref="0xb76e4458" bit-offset="I:160" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="reversePower" ref="0xb76e44b8" bit-offset="I:224" size="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </field>
      <field name="strength" ref="0xb76e4518" bit-offset="I:288" size="I:1">
        <type-int cname="signed char" size="I:1" alignment="I:1">
          <typename><typedef-ref name="int8_t" ref="0xb7f825d0"/></typename>
        </type-int>
      </field>
      <field name="lost" ref="0xb76e4578" bit-offset="I:296" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
        </type-int>
      </field>
      <field name="ack" ref="0xb76e45d8" bit-offset="I:304" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
        </type-int>
      </field>
      <field name="msg" ref="0xb76e4638" bit-offset="I:320" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
            <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="next" ref="0xb76e4698" bit-offset="I:352" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:52" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0xb76e60f4"/>
            <typename><typedef-ref name="receive_message_t" scoped="" ref="0xb76e63c4"/></typename>
          </type-tag>
        </type-pointer>
      </field>
      <field name="channel" ref="0xb76e46f8" bit-offset="I:384" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
      <field name="lqi" ref="0xb76e4758" bit-offset="I:392" size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="74:lib/modules/SimpleSendP.nc" ref="0xb75ff8e8" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="74:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" ref="0xb75bdae0" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="71:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0xb749b628" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" ref="0xb75758ac" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0xb74921cc" defined="" scoped="" size="I:12" alignment="I:4">
      <component-ref qname="VirtualizeTimerC"/>
      <field name="t0" ref="0xb74922d4" bit-offset="I:0" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
        </type-int>
      </field>
      <field name="dt" ref="0xb7492334" bit-offset="I:32" size="I:4">
        <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
          <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
        </type-int>
      </field>
      <field name="isoneshot" ref="0xb7492394" bit-offset="I:64" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
        </type-int>
      </field>
      <field name="isrunning" ref="0xb74923f4" bit-offset="I:65" bit-size="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
        </type-int>
      </field>
      <field name="_reserved" ref="0xb7492454" bit-offset="I:66" bit-size="I:6">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
        </type-int>
      </field>
    </struct>
    <enum loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" ref="0xb7493490" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="169:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc" ref="0xb743c758" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="126:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc" ref="0xb741103c" defined="" scoped="" size="U:" alignment="U:">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unknown int" size="U:" alignment="U:"></type-int>
    </enum>
    <enum loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueP.nc" ref="0xb743d04c" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
    <struct loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc" ref="0xb7438d1c" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="AMQueueImplP"/>
      <field name="msg" ref="0xb7438e24" bit-offset="I:0" size="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
            <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
          </type-tag>
        </type-pointer>
      </field>
    </struct>
    <enum loc="22:lib/modules/CommandHandlerP.nc" ref="0xb73cd45c" defined="" scoped="" size="I:4" alignment="I:4">
      <component-ref qname="CommandHandlerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </enum>
  </tags>
  <variables>
    <variable name="snr28" ref="0xb7737bf4" loc="23:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:96" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr17" ref="0xb7702edc" loc="38:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:132" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randCM" ref="0xb79bfd4c" loc="39:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="dummy" ref="0xb794d3a4" loc="298:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr7" ref="0xb771f680" loc="29:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:540" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr30" ref="0xb76faa3c" loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:7" size="I:84" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="current_node" ref="0xb7a2c010" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="test" ref="0xb79be248" loc="41:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr23" ref="0xb77386fc" loc="22:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:108" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__timezone" ref="0xb799d508" loc="284:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr12" ref="0xb77073c4" loc="35:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:16" size="I:192" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr2" ref="0xb772a264" loc="27:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:42" size="I:504" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="channelTable" ref="0xb7ab1740" loc="68:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0xb7ab9260"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="noiseData" ref="0xb798eb74" loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-array elements="I:1000" size="I:184000" alignment="I:4">
        <type-tag size="I:184" alignment="I:4"><struct-ref name="sim_noise_node_t" ref="0xb7a32754"/>
          <typename><typedef-ref name="sim_noise_node_t" ref="0xb7a31a98"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="HASHMAP_CHANNEL" ref="0xb78c564c" loc="20:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="outputs" ref="0xb7ab14a0" loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-array elements="I:191" size="I:1528" alignment="I:4">
        <type-tag size="I:8" alignment="I:4"><struct-ref name="sim_log_output" ref="0xb7ab3bd0"/>
          <typename><typedef-ref name="sim_log_output_t" ref="0xb7ab20c4"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__tzname" ref="0xb799d0ec" loc="282:/usr/include/time.h">
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="randU" ref="0xb79bf908" loc="39:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-array elements="I:97" size="I:776" alignment="I:8">
        <type-float cname="double" size="I:8" alignment="I:8"></type-float>
      </type-array>
    </variable>
    <variable name="snr21" ref="0xb773bc98" loc="20:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:108" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr26" ref="0xb773fd9c" loc="17:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:96" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="timezone" ref="0xb799b064" loc="298:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="eventHeap" ref="0xb7a517b8" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_event_queue.c">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_event_queue.h">
        <short>&#10; The event queue is the core of the mote side of TOSSIM.</short>
        <long>&#10; The event queue is the core of the mote side of TOSSIM. It is a&#10; wrapper around the underlying heap. Unlike the 1.x version, it is&#10; not re-entrant: merging the Python console and TOSSIM means that&#10; functionality like packet injection/reception from external tools&#10; is on the Python side.&#10;&#10; @author Phil Levis&#10; @date   November 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:4"><struct-ref name="heap" ref="0xb7a791fc"/>
        <typename><typedef-ref name="heap_t" ref="0xb7a79780"/></typename>
      </type-tag>
    </variable>
    <variable name="FLOODING_CHANNEL" ref="0xb78c663c" loc="11:includes/channels.h">
      <type-array elements="I:9" size="I:9" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="SECURITYLOCK" ref="0xb7823364" loc="399:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="137:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short> &#10; The 6LowPAN NALP ID for a TinyOS network is 63 (TEP 125).</short>
        <long> &#10; The 6LowPAN NALP ID for a TinyOS network is 63 (TEP 125).&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="snr15" ref="0xb7705690" loc="36:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:132" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr5" ref="0xb7725838" loc="28:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:46" size="I:552" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaRxTxDelay" ref="0xb7a02b60" loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="numCase1" ref="0xb798ff24" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.c">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr18" ref="0xb76fc84c" loc="41:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:132" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="randC" ref="0xb79bfa6c" loc="39:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr10" ref="0xb770c010" loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:26" size="I:312" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="FreqKeyNum" ref="0xb798e7c4" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
      </type-int>
    </variable>
    <variable name="snr29" ref="0xb7736edc" loc="24:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:96" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaLow" ref="0xb7a047cc" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaPreambleLength" ref="0xb7a02064" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr8" ref="0xb7714e50" loc="31:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:34" size="I:408" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr31" ref="0xb76fa13c" loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:3" size="I:36" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="numTotal" ref="0xb798e4dc" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="daylight" ref="0xb799de34" loc="297:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaExponentBase" ref="0xb7a02324" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stdin_" ref="0xb7b22b40" loc="315:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0xb7b228a0"/></type-tag>
    </variable>
    <variable name="allSnr" ref="0xb76f9b38" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:29" size="I:464" alignment="I:4">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="snr_lqi" ref="0xb7745b74"/>
          <typename><typedef-ref name="snr_lqi_t" ref="0xb7742184"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr24" ref="0xb77423bc" loc="15:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:8" size="I:96" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="COMMAND_CHANNEL" ref="0xb78c76ec" loc="6:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="randCD" ref="0xb79bfbdc" loc="39:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr0" ref="0xb773421c" loc="25:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:25" size="I:300" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="j97" ref="0xb79be084" loc="40:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr13" ref="0xb77096a8" loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:13" size="I:156" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="TOS_NODE_ID" ref="0xb7ad2724" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
      </type-int>
    </variable>
    <variable name="sys_errlist" ref="0xb7ad7a90" loc="27:/usr/include/i386-linux-gnu/bits/sys_errlist.h">
      <type-qualified const="">
        <type-array elements="V:" size="V:" alignment="V:">
          <type-qualified const="">
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </type-qualified>
        </type-array>
      </type-qualified>
    </variable>
    <variable name="snr3" ref="0xb7731680" loc="26:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:540" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="tzname" ref="0xb799d79c" loc="289:/usr/include/time.h">
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="STARTING_SIZE" ref="0xb7a75440" loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/heap.c">
      <type-qualified const="">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </variable>
    <variable name="=va_arg" ref="0xb7f8e10c"  loc="NONE">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_IO_2_1_stderr_" ref="0xb7b21128" loc="317:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0xb7b228a0"/></type-tag>
    </variable>
    <variable name="csmaHigh" ref="0xb7a04564" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMaxIterations" ref="0xb7a025ec" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="atm128RegFile" ref="0xb786f8e8" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-array elements="I:1000" size="I:160000" alignment="I:1">
        <type-array elements="I:160" size="I:160" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
          </type-int>
        </type-array>
      </type-array>
    </variable>
    <variable name="localNoise" ref="0xb79e313c" loc="10:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:16016" alignment="I:4">
        <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_gain_noise" ref="0xb79e54b4"/>
          <typename><typedef-ref name="sim_gain_noise_t" ref="0xb79e5914"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="snr27" ref="0xb773d0b8" loc="18:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:108" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="TRANSPORT_CHANNEL" ref="0xb78c5130" loc="17:includes/channels.h">
      <type-array elements="I:10" size="I:10" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="_IO_2_1_stdout_" ref="0xb7b22e24" loc="316:/usr/include/libio.h">
      <type-tag size="V:" alignment="V:"><struct-ref name="_IO_FILE_plus" ref="0xb7b228a0"/></type-tag>
    </variable>
    <variable name="snr16" ref="0xb77007d4" loc="39:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:11" size="I:132" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="csmaInitLow" ref="0xb7a042f4" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr6" ref="0xb7719270" loc="30:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:45" size="I:540" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="ROUTING_CHANNEL" ref="0xb78c6b54" loc="14:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="numCase2" ref="0xb798e26c" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr19" ref="0xb76fd13c" loc="40:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:120" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sim_ticks" ref="0xb7a2edc8" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0xb7ad29dc"/></typename>
      </type-int>
    </variable>
    <variable name="snr22" ref="0xb77391d8" loc="21:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:9" size="I:108" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="__daylight" ref="0xb799d2ec" loc="283:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stderr" ref="0xb7b13e78" loc="170:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7b2d91c"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="connectivity" ref="0xb79e5d14" loc="9:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-array elements="I:1001" size="I:4004" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0xb79eb37c"/>
            <typename><typedef-ref name="gain_entry_t" ref="0xb79eb984"/></typename>
          </type-tag>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="snr11" ref="0xb770f4b4" loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:20" size="I:240" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sys_nerr" ref="0xb7ad77f4" loc="26:/usr/include/i386-linux-gnu/bits/sys_errlist.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="stdin" ref="0xb7b13988" loc="168:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7b2d91c"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="simTimeBuf" ref="0xb7a13c1c" loc="183:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-array elements="I:128" size="I:128" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="NEIGHBOR_CHANNEL" ref="0xb78c6128" loc="10:includes/channels.h">
      <type-array elements="I:9" size="I:9" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="snr20" ref="0xb773c5bc" loc="19:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:120" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="sim_seed" ref="0xb7a2c1fc" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_tossim.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="_LIB_VERSION" ref="0xb7b495d4" loc="359:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0xb7b4a894"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0xb7b49304"/></typename>
      </type-tag>
    </variable>
    <variable name="sensitivity" ref="0xb79e3328" loc="11:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="snr25" ref="0xb77406b0" loc="16:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:10" size="I:120" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="allSnr_len" ref="0xb76f1010" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="signgam" ref="0xb7b4bb78" loc="168:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaInitHigh" ref="0xb7a04064" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="snr14" ref="0xb7703010" loc="37:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-array elements="I:14" size="I:168" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
          <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="stdout" ref="0xb7b13c00" loc="169:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7b2d91c"/></type-tag>
      </type-pointer>
    </variable>
    <variable name="csmaAckTime" ref="0xb7a02dec" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaSymbolsPerSec" ref="0xb7a04a94" loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaMinFreeSamples" ref="0xb7a028c0" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="csmaBitsPerSymbol" ref="0xb7a04d60" loc="49:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_csma.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="GENERAL_CHANNEL" ref="0xb78c7bf0" loc="7:includes/channels.h">
      <type-array elements="I:8" size="I:8" alignment="I:1">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
      </type-array>
    </variable>
    <variable name="i97" ref="0xb79bff04" loc="40:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/randomlib.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="sim_scheduler_event_pending" ref="0xb78e3af4" loc="66:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="m_tail" ref="0xb78e355c" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="m_head" ref="0xb78e3358" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="m_next" ref="0xb78e382c" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-array elements="I:10" size="I:10" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="sim_scheduler_event" ref="0xb78e3e54" loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7aca690"/>
        <typename><typedef-ref name="sim_event_t" ref="0xb7aca8e8"/></typename>
      </type-tag>
    </variable>
    <variable name="radioChannel" ref="0xb7822c58" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="bootEvent" ref="0xb7822a18" loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7aca690"/>
          <typename><typedef-ref name="sim_event_t" ref="0xb7aca8e8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="startTime" ref="0xb78225e0" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="euid" ref="0xb78223d0" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="long long" size="I:8" alignment="I:8"></type-int>
    </variable>
    <variable name="isOn" ref="0xb78227b4" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
      <component-ref qname="SimMoteP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="buffer" ref="0xb77cbac8" loc="62:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
        <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
      </type-tag>
    </variable>
    <variable name="bufferPointer" ref="0xb77cbd40" loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimActiveMessageC.nc">
      <component-ref qname="TossimActiveMessageC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
          <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sendEvent" ref="0xb778614c" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7aca690"/>
        <typename><typedef-ref name="sim_event_t" ref="0xb7aca8e8"/></typename>
      </type-tag>
    </variable>
    <variable name="initialized" ref="0xb7782b78" loc="70:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="error" ref="0xb774c140" loc="294:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="backoffCount" ref="0xb7787144" loc="72:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="neededFreeSamples" ref="0xb77873b4" loc="73:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="sending" ref="0xb77875f0" loc="74:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
          <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="running" ref="0xb7782e1c" loc="71:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="receiveBuffer" ref="0xb77863a8" loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
        <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
      </type-tag>
    </variable>
    <variable name="sendingLength" ref="0xb7787c78" loc="76:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="transmitting" ref="0xb778797c" loc="75:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="destNode" ref="0xb7787ee8" loc="77:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="collision" ref="0xb76c89f4" loc="206:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="requestAck" ref="0xb76e7414" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="receiveEvent" ref="0xb76c84c8" loc="203:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7aca690"/>
        <typename><typedef-ref name="sim_event_t" ref="0xb7aca8e8"/></typename>
      </type-tag>
    </variable>
    <variable name="transmissionEndTime" ref="0xb76e7ea8" loc="65:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0xb7ad29dc"/></typename>
      </type-int>
    </variable>
    <variable name="incomingSource" ref="0xb76c7190" loc="208:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </variable>
    <variable name="outstandingReceptionHead" ref="0xb76e4a14" loc="84:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:52" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0xb76e60f4"/>
          <typename><typedef-ref name="receive_message_t" scoped="" ref="0xb76e63c4"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="incoming" ref="0xb76c8cf0" loc="207:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
          <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="rssi" ref="0xb76e788c" loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="clearThreshold" ref="0xb76c86e4" loc="205:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-float cname="double" size="I:8" alignment="I:8"></type-float>
    </variable>
    <variable name="transmitting" ref="0xb76e7b64" loc="64:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="outgoing" ref="0xb76e7204" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
          <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="receiving" ref="0xb76e7618" loc="62:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="group" ref="0xb7665b90" loc="68:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0xb7916860"/></typename>
      </type-int>
    </variable>
    <variable name="addr" ref="0xb7665978" loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0xb76656c0" loc="66:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="sendPackage" ref="0xb7649b74" loc="32:Node.nc">
      <component-ref qname="Node"/>
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0xb78c4420"/>
        <typename><typedef-ref name="pack" ref="0xb78c20c4"/></typename>
      </type-tag>
    </variable>
    <variable name="check" ref="0xb76421ec" loc="35:Node.nc">
      <component-ref qname="Node"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="loopPackage" ref="0xb7649da8" loc="33:Node.nc">
      <component-ref qname="Node"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0xb78c4420"/>
          <typename><typedef-ref name="pack" ref="0xb78c20c4"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="replypkg" ref="0xb7642010" loc="34:Node.nc">
      <component-ref qname="Node"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0xb78c4420"/>
          <typename><typedef-ref name="pack" ref="0xb78c20c4"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="sequenceNum" ref="0xb75ea7e8" loc="30:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
      </type-int>
    </variable>
    <variable name="pkt" ref="0xb75ead08" loc="32:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
        <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
      </type-tag>
    </variable>
    <variable name="busy" ref="0xb75eaa5c" loc="31:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="base" ref="0xb7575774" loc="40:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
      </type-int>
    </variable>
    <variable name="t0" ref="0xb7575414" loc="39:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
      </type-int>
    </variable>
    <variable name="set" ref="0xb757522c" loc="38:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="dt" ref="0xb757555c" loc="39:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
      </type-int>
    </variable>
    <variable name="oldScale" ref="0xb7537d64" loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <documentation loc="76:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
        <short> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero.</short>
        <long> This variable is needed to keep track of when the underlying&#10;  timer starts, in order to reset lastZero. When oldScale is&#10;  AVR_CLOCK_OFF and the scale is set to something else, the&#10;  clock starts ticking. *</long>
      </documentation>
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="lastZero" ref="0xb7537a9c" loc="74:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0xb7ad29dc"/></typename>
      </type-int>
    </variable>
    <variable name="overflow" ref="0xb74d6a28" loc="480:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7aca690"/>
          <typename><typedef-ref name="sim_event_t" ref="0xb7aca8e8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="compare" ref="0xb75248bc" loc="185:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7aca690"/>
          <typename><typedef-ref name="sim_event_t" ref="0xb7aca8e8"/></typename>
        </type-tag>
      </type-pointer>
    </variable>
    <variable name="savedCounter" ref="0xb753a210" loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="inOverflow" ref="0xb753bee8" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/sim/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="m_dt" ref="0xb74b0ef0" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
      </type-int>
    </variable>
    <variable name="m_oneshot" ref="0xb74ae108" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers_changed" ref="0xb7492a44" loc="69:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </variable>
    <variable name="m_timers" ref="0xb74927f8" loc="68:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0xb74921cc"/>
          <typename><typedef-ref name="Timer_t" scoped="" ref="0xb7492508"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="seed" ref="0xb745e4e8" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
      </type-int>
    </variable>
    <variable name="current" ref="0xb7436110" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0xb7436550" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-tag size="I:4" alignment="I:4"><struct-ref scoped="" ref="0xb7438d1c"/>
          <typename><typedef-ref name="queue_entry_t" scoped="" ref="0xb7438ed8"/></typename>
        </type-tag>
      </type-array>
    </variable>
    <variable name="cancelMask" ref="0xb7436a2c" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:1">
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
        </type-int>
      </type-array>
    </variable>
    <variable name="index" ref="0xb73fd98c" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0xb73fde88" loc="62:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-pointer size="I:4" alignment="I:4">
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb7401944"/></type-var>
        </type-pointer>
      </type-array>
    </variable>
    <variable name="free" ref="0xb73fd794" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="pool" ref="0xb73fb14c" loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/system/PoolP.nc">
      <component-ref qname="PoolP"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0xb7401944"/></type-var>
      </type-array>
    </variable>
    <variable name="tail" ref="0xb73e66b8" loc="50:/home/sigi/CSE160/tiny/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="size" ref="0xb73e6948" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="queue" ref="0xb73e6238" loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0xb7404b80"/></type-var>
      </type-array>
      <attribute-value>
        <attribute-ref name="one_nok" ref="0xb7f85b6c"/>
        <value-structured>
          <type-tag size="I:4" alignment="I:4"><attribute-ref name="one_nok" ref="0xb7f85b6c"/></type-tag>
        </value-structured>
      </attribute-value>
    </variable>
    <variable name="head" ref="0xb73e6428" loc="49:/home/sigi/CSE160/tiny/tinyos-main/tos/system/QueueC.nc">
      <component-ref qname="QueueC"/>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </variable>
    <variable name="container" ref="0xb73a984c" loc="18:dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-array elements="U:" size="U:" alignment="U:">
        <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0xb73cf448"/></type-var>
      </type-array>
    </variable>
    <variable name="MAX_SIZE" ref="0xb73a9514" loc="16:dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
      </type-int>
    </variable>
    <variable name="size" ref="0xb73a9a48" loc="19:dataStructures/modules/ListC.nc">
      <component-ref qname="ListC"/>
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
      </type-int>
    </variable>
  </variables>
  <constants>
    <constant cst="I:46" name="CC2420_DACTST" ref="0xb783856c" loc="219:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACIE" ref="0xb7882010" loc="1075:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCDR7" ref="0xb788e8c0" loc="943:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PB6" ref="0xb787ede0" loc="1132:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB81" ref="0xb78848b4" loc="1058:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_ADC_DIFF_ADC22_1x" ref="0xb785d14c" loc="85:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1BL" ref="0xb78b7d7c" loc="140:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_DDRD" ref="0xb78b9218" loc="81:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOIE0" ref="0xb789b6fc" loc="786:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PING0" ref="0xb786f538" loc="1299:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_FREE_RUNNING_OFF" ref="0xb785ae58" loc="133:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_WAVE16_PWM_CAPTURE_HIGH" ref="0xb75abc00" loc="222:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_ADC_DIFF_ADC51_1x" ref="0xb785e59c" loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SRL0" ref="0xb78a76e8" loc="705:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS30" ref="0xb788f520" loc="924:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINA2" ref="0xb787e718" loc="1126:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINB4" ref="0xb787cce4" loc="1154:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES3" ref="0xb7890c10" loc="919:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINC6" ref="0xb7879390" loc="1182:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="CC2420_STATUS_TX_UNDERFLOW" ref="0xb783fe88" loc="169:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="CC2420_FSTST3" ref="0xb7839d04" loc="215:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADLAR" ref="0xb78818b8" loc="1093:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PA2" ref="0xb7880ba8" loc="1106:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGMA1" ref="0xb78931c8" loc="876:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGMB3" ref="0xb7891538" loc="902:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="TOS_SERIAL_UNKNOWN_ID" ref="0xb7910294" loc="98:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWA3" ref="0xb78a9da8" loc="687:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MDMCTRL0_PAN_COORDINATOR" ref="0xb7833574" loc="258:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1B1" ref="0xb78938dc" loc="882:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADHSM" ref="0xb788c1c8" loc="961:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="P_ALL" ref="0xb7cb87e4" loc="52:/usr/include/i386-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INT3" ref="0xb789d520" loc="763:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_CCM" ref="0xb7824290" loc="389:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC31" ref="0xb78a5564" loc="730:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINF3" ref="0xb7871560" loc="1275:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-1" name="_IEEE_" ref="0xb7b4aa84" loc="349:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_WAVE16_PWM_FAST_COMPARE" ref="0xb75aa830" loc="227:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM21" ref="0xb78958b0" loc="858:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM33" ref="0xb7890dc8" loc="920:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_TXCTRL_TXMIX_CURRENT" ref="0xb7830b4c" loc="288:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_WAVE16_RESERVED" ref="0xb75aa368" loc="225:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_SNGL_ADC5" ref="0xb7860230" loc="64:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:129" name="ATM128_ICR3H" ref="0xb78b04b4" loc="269:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XMM0" ref="0xb78a6370" loc="714:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="CC2420_MANOR" ref="0xb783ac60" loc="207:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS2" ref="0xb7897e64" loc="839:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_SECCTRL0_SEC_RXKEYSEL" ref="0xb782a464" loc="331:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="_ISgraph" ref="0xb7b42184" loc="55:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:51" name="ATM128_TCCR0" ref="0xb78b5968" loc="169:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC1C" ref="0xb788e548" loc="939:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_RIGHT_ADJUST" ref="0xb7861240" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PB0" ref="0xb787d844" loc="1138:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PC2" ref="0xb787bdfc" loc="1166:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3AL" ref="0xb78af550" loc="283:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WDP1" ref="0xb788dbfc" loc="956:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PD4" ref="0xb78784fc" loc="1194:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PE6" ref="0xb7876a90" loc="1222:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PROTOCOL_NAME" ref="0xb78c96c0" loc="13:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="CC2420_FSCTRL" ref="0xb783b6e0" loc="197:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RAM_TXFIFO" ref="0xb78375f8" loc="226:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CTR" ref="0xb7824ba4" loc="394:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_MDMCTRL1_MODULATION_MODE" ref="0xb7832f20" loc="270:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK8_DIVIDE_128" ref="0xb75bc644" loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM00" ref="0xb78968c4" loc="847:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ADPS2" ref="0xb7881010" loc="1086:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWA6" ref="0xb78a9898" loc="684:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MANFIDL_MANFID" ref="0xb7827bac" loc="364:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:140" name="ATM128_TCCR3C" ref="0xb78ae448" loc="298:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INT6" ref="0xb789d010" loc="760:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW10" ref="0xb7898010" loc="817:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS0" ref="0xb7889c58" loc="1004:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_WAVE16_PWM_FAST_8BIT" ref="0xb75ab058" loc="217:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_PORTE" ref="0xb78c0e88" loc="36:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_TXCTRL_TXMIX_CAP_ARRAY" ref="0xb78308b8" loc="287:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC0" ref="0xb789639c" loc="844:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PIND0" ref="0xb7876738" loc="1218:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINE2" ref="0xb7874dd0" loc="1246:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="CC2420_MANAND" ref="0xb783aa5c" loc="206:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WDCE" ref="0xb788d6f8" loc="953:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_PRESCALE_16" ref="0xb785b548" loc="109:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_WAVE16_CTC_CAPTURE" ref="0xb75aa154" loc="224:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES" ref="0xb7891380" loc="901:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SECCTRL0_SEC_CBC_HEAD" ref="0xb782bc3c" loc="328:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:50" name="ATM128_TCNT0" ref="0xb78b5754" loc="166:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_POWER_ADC_NR" ref="0xb7863a04" loc="128:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="AVR_CLOCK_DIVIDE_8" ref="0xb75baa14" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_COMPARE_SET" ref="0xb75b9d9c" loc="94:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDA6" ref="0xb787f284" loc="1112:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK8_NORMAL" ref="0xb75c0c98" loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ISC71" ref="0xb78a4390" loc="740:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="REFS0" ref="0xb7881700" loc="1092:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDF7" ref="0xb78720d4" loc="1261:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1024" name="_ISalpha" ref="0xb7b46c28" loc="50:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="SERIAL_PROTO_PACKET_UNKNOWN" ref="0xb7910d6c" loc="106:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSR" ref="0xb78bd898" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_SACK" ref="0xb783dba8" loc="184:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CMD_PACKET_HEADER_LENGTH" ref="0xb78c8288" loc="11:includes/CommandMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:55" name="ATM128_TIMSK" ref="0xb78b442c" loc="182:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MANFIDH_PARTNUM" ref="0xb782629c" loc="369:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:46" name="ATM128_TCCR1B" ref="0xb78b6e84" loc="154:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="NOISE_BIN_SIZE" ref="0xb7a3488c" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="OCDR2" ref="0xb788d1c8" loc="948:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM00" ref="0xb7889aa0" loc="1003:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_IOCFG0_BCN_ACCEPT" ref="0xb7829e2c" loc="348:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_RXCTRL1_HIGH_HGM" ref="0xb782d6a8" loc="309:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="MAX_TTL" ref="0xb78c4280" loc="15:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCIE2" ref="0xb789ca70" loc="779:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF3C" ref="0xb78998a8" loc="811:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SM2" ref="0xb7898698" loc="821:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PF0" ref="0xb7873ef8" loc="1258:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV1" ref="0xb789a1c0" loc="794:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PG2" ref="0xb7870010" loc="1283:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ10" ref="0xb7889398" loc="997:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="ATM128_ADC_SNGL_1_23" ref="0xb785d9c4" loc="89:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE8_CTC" ref="0xb75b91e8" loc="85:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:59" name="ATM128_RAMPZ" ref="0xb78b4c70" loc="194:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CMD_ERROR" ref="0xb765a114" loc="20:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="INTF3" ref="0xb789c380" loc="773:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="MAC_PACKET_SIZE" ref="0xb78414e4" loc="150:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWWC" ref="0xb78a9378" loc="679:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="RAMPZ0" ref="0xb78a539c" loc="727:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_ADC_DIFF_ADC10_10x" ref="0xb7860a90" loc="68:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_ADC_DIFF_ADC22_10x" ref="0xb785f154" loc="71:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="XDIV3" ref="0xb78a6c24" loc="721:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="HDLC_CTLESC_BYTE" ref="0xb791176c" loc="89:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_FSMTC_TC_TXEND2PAOFF" ref="0xb78251b8" loc="377:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE1" ref="0xb7887960" loc="1025:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_WAVE16_PWM_FAST_9BIT" ref="0xb75ab29c" loc="218:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_ENABLE_OFF" ref="0xb7859ad8" loc="145:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="_SVID_" ref="0xb7b4abf8" loc="350:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="CC2420_BATTMON" ref="0xb783bd38" loc="200:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="EOFF" ref="0xb7c78b10" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_ENABLE_ON" ref="0xb7859d00" loc="146:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3C" ref="0xb78b06c8" loc="272:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_IOCFG1_CCAMUX" ref="0xb78274f8" loc="359:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RXCTRL0_MED_LNA_GAIN" ref="0xb782fc7c" loc="297:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDF1" ref="0xb7872af4" loc="1267:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDG3" ref="0xb78706c8" loc="1289:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM1" ref="0xb7887cc8" loc="1027:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="CC2420_NONCE_FLAGS" ref="0xb7835c88" loc="244:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDB0" ref="0xb787c5f4" loc="1148:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDC2" ref="0xb787abe4" loc="1176:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDD4" ref="0xb7877284" loc="1204:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDE6" ref="0xb787586c" loc="1232:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="CC2420_MDMCTRL1" ref="0xb783ca4c" loc="191:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF1B" ref="0xb789a010" loc="793:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC3B" ref="0xb788fdc0" loc="933:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PE1" ref="0xb7875358" loc="1227:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE1A" ref="0xb789b010" loc="782:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPR0" ref="0xb788bbd4" loc="980:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PF3" ref="0xb7873a0c" loc="1255:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RSSI_CCA_THR" ref="0xb7831828" loc="276:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK8_DIVIDE_8" ref="0xb75c0eec" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC0" ref="0xb7887e88" loc="1030:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ACSR" ref="0xb78bdec0" loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCW" ref="0xb78bd0a4" loc="39:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:125" name="ATM128_ETIMSK" ref="0xb78b1e90" loc="264:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="XDIV6" ref="0xb78a66fc" loc="718:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK8_DIVIDE_32" ref="0xb75bc180" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:100" name="ATM128_DDRG" ref="0xb78b38e0" loc="216:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE3" ref="0xb789ac34" loc="802:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINF1" ref="0xb78718d0" loc="1277:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PING3" ref="0xb786f010" loc="1296:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWS5" ref="0xb78a8a48" loc="696:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS21" ref="0xb7895c10" loc="860:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINA5" ref="0xb787e1f0" loc="1123:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:112" name="ATM128_TWBR" ref="0xb78b2994" loc="238:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:67" name="SERIAL_PROTO_ACK" ref="0xb79105d8" loc="103:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="ATM128_OCR1B" ref="0xb78b7b70" loc="139:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINB7" ref="0xb787c7bc" loc="1151:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_TXCTRL_RESERVED" ref="0xb782f058" loc="290:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="NO_SEC" ref="0xb7824454" loc="390:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PA5" ref="0xb78806bc" loc="1103:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1" ref="0xb78b7554" loc="134:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_SACKPEND" ref="0xb783ddc8" loc="185:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_INT_FLAG_OFF" ref="0xb7859508" loc="139:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDA1" ref="0xb787faf4" loc="1117:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDB3" ref="0xb787c0e4" loc="1145:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDC5" ref="0xb787a6d4" loc="1173:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDD7" ref="0xb7878d4c" loc="1201:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_FREE_RUNNING_ON" ref="0xb7859160" loc="134:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_FSCTRL_LOCK_STATUS" ref="0xb782b290" loc="322:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK8_DIVIDE_1024" ref="0xb75bcb1c" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_MIN_TRACE" ref="0xb7a33230" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3BL" ref="0xb78b0f00" loc="278:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="CC2420_RAM_RXFIFO" ref="0xb783782c" loc="227:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC10" ref="0xb78a5dfc" loc="735:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINF6" ref="0xb7871038" loc="1272:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_WAVE16_PWM_FAST_CAPTURE" ref="0xb75aa5cc" loc="226:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDF2" ref="0xb7872944" loc="1266:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDG4" ref="0xb7870518" loc="1288:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SFLUSHRX" ref="0xb783d790" loc="182:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CBC_MAC_4" ref="0xb7824634" loc="391:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS02" ref="0xb7896c2c" loc="849:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM00" ref="0xb7896554" loc="845:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM12" ref="0xb7890380" loc="912:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_POWER_IDLE" ref="0xb78637c0" loc="127:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COMB0" ref="0xb7894c4c" loc="873:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ERESERVE" ref="0xb790427c" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_RXCTRL0_LOW_LNA_GAIN" ref="0xb782ff10" loc="298:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE1" ref="0xb788745c" loc="1022:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_ADC_DIFF_ADC01_1x" ref="0xb785fa24" loc="75:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:144" name="ATM128_UBRR0H" ref="0xb78ae664" loc="301:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:154" name="ATM128_UCSR1B" ref="0xb78aeed4" loc="313:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_ISblank" ref="0xb7b428d8" loc="56:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE" ref="0xb7886c44" loc="1040:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ADIE" ref="0xb7882db0" loc="1085:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="JTD" ref="0xb7898bb4" loc="826:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="CC2420_FSTST0" ref="0xb78396e0" loc="212:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_ENABLE_OFF" ref="0xb785a22c" loc="121:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:109" name="ATM128_XMCRA" ref="0xb78b2570" loc="232:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM3C1" ref="0xb7892aac" loc="894:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIF" ref="0xb788ca50" loc="968:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_SXOSCOFF" ref="0xb783d570" loc="181:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_IOCFG1_HSSD_SRC" ref="0xb7827058" loc="357:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SRE" ref="0xb7899c14" loc="815:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_PINC" ref="0xb78b9634" loc="87:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SRW01" ref="0xb78a78a0" loc="706:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINC1" ref="0xb7879c28" loc="1187:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PIND3" ref="0xb7876210" loc="1215:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINE5" ref="0xb78748a8" loc="1243:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:56" name="ATM128_EIFR" ref="0xb78b4634" loc="185:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:53" name="ATM128_MCUCR" ref="0xb78b4010" loc="176:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_TXCTRL_PA_LEVEL" ref="0xb782f2bc" loc="291:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCDR0" ref="0xb788d538" loc="950:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3" ref="0xb78af970" loc="287:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_SNGL_ADC2" ref="0xb7861c10" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_ADC_DIFF_ADC32_200x" ref="0xb785f7fc" loc="74:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_PRESCALE_4" ref="0xb785b12c" loc="107:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDE1" ref="0xb78741c0" loc="1237:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:49" name="ATM128_OCR0" ref="0xb78b5540" loc="163:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ISC50" ref="0xb78a4c28" loc="745:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_NONCE_FRAME_COUNTER" ref="0xb78357b8" loc="242:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:39" name="ATM128_ICR1H" ref="0xb78b795c" loc="136:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3L" ref="0xb78b02b0" loc="268:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INTF1" ref="0xb789c6f0" loc="775:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="EINVAL" ref="0xb7c78e8c" loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_ADC_DIFF_ADC10_200x" ref="0xb7860f08" loc="70:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_ADC_DIFF_ADC22_200x" ref="0xb785f5c0" loc="73:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN" ref="0xb7a35b30" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_ADC_DIFF_ADC12_1x" ref="0xb785ee3c" loc="84:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SE" ref="0xb78981ac" loc="818:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ADSC" ref="0xb78828a0" loc="1082:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="OCDR5" ref="0xb788ec30" loc="945:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="CC2420_SECCTRL0" ref="0xb783b900" loc="198:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PB4" ref="0xb787d1b4" loc="1134:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PC6" ref="0xb787b76c" loc="1162:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="ATM128_OCR1AH" ref="0xb78b663c" loc="146:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1CL" ref="0xb78b1638" loc="254:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CMD_PING" ref="0xb765b218" loc="13:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_PINF" ref="0xb78c0864" loc="27:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_DDRB" ref="0xb78b9e60" loc="99:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINA0" ref="0xb787ea88" loc="1128:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINB2" ref="0xb787b0a4" loc="1156:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINC4" ref="0xb7879700" loc="1184:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PIND6" ref="0xb7877cc4" loc="1212:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ICES1" ref="0xb7890010" loc="910:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_IOCFG0_SFD_POLARITY" ref="0xb78286e4" loc="351:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWPS0" ref="0xb78a71c8" loc="700:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN" ref="0xb7885370" loc="1044:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ01" ref="0xb7889e1c" loc="1005:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="CC2420_AGCTST0" ref="0xb78390a4" loc="209:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PA0" ref="0xb7880ef0" loc="1108:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL1" ref="0xb788aa6c" loc="992:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="INTF6" ref="0xb789ddb0" loc="770:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_SECCTRL0_SEC_TXKEYSEL" ref="0xb782a1c4" loc="330:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWA1" ref="0xb78a81c0" loc="689:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC1" ref="0xb78872a4" loc="1021:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_TIMER_COMPARE_SET" ref="0xb75afb2c" loc="189:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COM1C1" ref="0xb7893c64" loc="884:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="INT1" ref="0xb789d880" loc="765:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_ENABLE_ON" ref="0xb785a42c" loc="122:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_WAVE16_CTC_COMPARE" ref="0xb75acddc" loc="216:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM31" ref="0xb7892e28" loc="896:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_BATTMON_BATTMON_EN" ref="0xb7829714" loc="343:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS0" ref="0xb78961dc" loc="841:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PROTOCOL_DV" ref="0xb78c9ab4" loc="15:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE1" ref="0xb7885dd0" loc="1052:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-5" name="NOISE_MAX" ref="0xb7a35d78" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ACME" ref="0xb788c378" loc="962:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="CC2420_RXCTRL0" ref="0xb783b2bc" loc="195:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_STATUS_LOCK" ref="0xb783f498" loc="166:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADCL" ref="0xb78bd48c" loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC1A" ref="0xb788e1d8" loc="937:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PC0" ref="0xb787a1b4" loc="1168:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PD2" ref="0xb7878844" loc="1196:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PE4" ref="0xb7876dd8" loc="1224:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PF6" ref="0xb7873520" loc="1252:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_RXCTRL1_LNA_CAP_ARRAY" ref="0xb782dbac" loc="311:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_FSCTRL_FREQ" ref="0xb782b4cc" loc="323:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ADPS0" ref="0xb7881380" loc="1088:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWA4" ref="0xb78a9bf8" loc="686:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM0" ref="0xb788a1c0" loc="985:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_ADC_DIFF_ADC21_1x" ref="0xb785fe74" loc="77:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FP_NAN" ref="0xb7b4be88" loc="211:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="PACKET_MAX_PAYLOAD_SIZE" ref="0xb78c40a4" loc="14:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:139" name="ATM128_TCCR3A" ref="0xb78ae22c" loc="295:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_COMPARE_OFF" ref="0xb75b97a8" loc="91:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_NONCE_SOURCE_ADDRESS" ref="0xb7835a4c" loc="243:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="NOISE_DEFAULT_ELEMENT_SIZE" ref="0xb7a34d20" loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_CLK16_EXTERNAL_RISE" ref="0xb75ba1b4" loc="71:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="ATM128_PORTC" ref="0xb78b9a50" loc="93:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB80" ref="0xb7883544" loc="1067:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINE0" ref="0xb78731c8" loc="1248:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS00" ref="0xb7895010" loc="851:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ITIMER_VIRTUAL" ref="0xb7a3aa3c" loc="97:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS12" ref="0xb7890530" loc="913:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CMD_KILL" ref="0xb765bed8" loc="19:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC" ref="0xb78911d0" loc="900:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE0" ref="0xb7884e10" loc="1063:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:60" name="ATM128_XDIV" ref="0xb78b4e78" loc="197:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="CC2420_IOCFG0" ref="0xb783a010" loc="201:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDA4" ref="0xb787f5e4" loc="1114:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDB6" ref="0xb787dbb4" loc="1142:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPMEN" ref="0xb789ec40" loc="756:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC01" ref="0xb78a4010" loc="736:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDF5" ref="0xb7872434" loc="1263:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="BLBSET" ref="0xb789e718" loc="753:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_SECCTRL1_SEC_TXL" ref="0xb782ada0" loc="337:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="CC2420_STATUS_ENC_BUSY" ref="0xb783fb20" loc="168:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PGWRT" ref="0xb789e8d0" loc="754:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOCC" ref="0xb788fa40" loc="929:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COMA1" ref="0xb7894724" loc="870:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="ATM128_OSCCAL" ref="0xb78b278c" loc="235:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_TIME_ACK_TURNAROUND" ref="0xb7841d18" loc="156:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_FSCTRL_LOCK_THR" ref="0xb782c88c" loc="318:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="AS0" ref="0xb7894010" loc="864:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="UPM10" ref="0xb788addc" loc="994:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:304" name="CC2420_RAM_KEY1" ref="0xb7836144" loc="231:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:98" name="ATM128_PORTF" ref="0xb78b34d0" loc="210:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL1" ref="0xb788955c" loc="998:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN1" ref="0xb7884380" loc="1055:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ACBG" ref="0xb7883a60" loc="1072:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE0" ref="0xb789b544" loc="785:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF3A" ref="0xb7899388" loc="808:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_MAIN_DEMOD_RESETn" ref="0xb783463c" loc="250:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="SM0" ref="0xb78984f4" loc="820:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PG0" ref="0xb7870358" loc="1285:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:149" name="ATM128_UCSR0C" ref="0xb78ae880" loc="304:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="ATM128_TCNT1H" ref="0xb78b6c68" loc="151:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:136" name="ATM128_TCNT3L" ref="0xb78afb7c" loc="288:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDE" ref="0xb788d89c" loc="954:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ADFR" ref="0xb7882a50" loc="1083:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="MUX1" ref="0xb7880010" loc="1097:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_ADC_DIFF_ADC02_1x" ref="0xb785ec14" loc="83:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADC_PRESCALE_32" ref="0xb785b75c" loc="110:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="FP_ZERO" ref="0xb7b4a280" loc="217:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM3A0" ref="0xb7892560" loc="891:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XDIV1" ref="0xb78a5010" loc="723:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_RXCTRL1_RXBPF_MIDCUR" ref="0xb782ee60" loc="306:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_TIME_SYMBOL" ref="0xb784024c" loc="158:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ2" ref="0xb78856d8" loc="1046:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:134" name="ATM128_OCR3A" ref="0xb78af344" loc="282:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:156" name="ATM128_UDR1" ref="0xb78ad338" loc="319:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDG1" ref="0xb7870a28" loc="1291:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="FALSE" ref="0xb7ad2328" loc="76:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="EBUSY" ref="0xb7c78cc8" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32768" name="ATM128_TIMER0_TICKSPPS" ref="0xb785618c" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDC0" ref="0xb7879010" loc="1178:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDD2" ref="0xb78775e4" loc="1206:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDE4" ref="0xb7875bcc" loc="1234:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CHANNEL_BANDGAP" ref="0xb7857c7c" loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCIE3C" ref="0xb789adf8" loc="803:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="AM_COMMANDMSG" ref="0xb78c7438" loc="23:includes/CommandMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK16_OFF" ref="0xb75bb010" loc="64:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ISC41" ref="0xb78a4de0" loc="746:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="_XOPEN_" ref="0xb7b4ad74" loc="351:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWGCE" ref="0xb78a8528" loc="691:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CSB1" ref="0xb7891a50" loc="905:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MUX4" ref="0xb7881a68" loc="1094:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="CC2420_ACK_WAIT_DELAY" ref="0xb7840c24" loc="161:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_FSCTRL_CAL_DONE" ref="0xb782caf0" loc="319:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_POWER_EXT_STANDBY" ref="0xb7863c7c" loc="129:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR0" ref="0xb7886564" loc="1034:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PB7" ref="0xb787ec3c" loc="1131:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE8_PWM_FAST" ref="0xb75b93f0" loc="86:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOIE1" ref="0xb789b38c" loc="784:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="DEFAULT_CHANNEL_SIZE" ref="0xb7ab39cc" loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_DDRE" ref="0xb78c0c74" loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PING1" ref="0xb786f380" loc="1298:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_COMPARE_CLEAR" ref="0xb75b9bb0" loc="93:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWS3" ref="0xb78a8da8" loc="698:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="SRL1" ref="0xb78a7538" loc="704:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PROTOCOL_TCP" ref="0xb78c98c0" loc="14:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:116" name="ATM128_TWCR" ref="0xb78b1218" loc="250:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS31" ref="0xb788f370" loc="923:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINA3" ref="0xb787e560" loc="1125:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINB5" ref="0xb787cb2c" loc="1153:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINC7" ref="0xb78791d8" loc="1181:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="CC2420_TOPTST" ref="0xb7838778" loc="220:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CPOL" ref="0xb788b6c4" loc="977:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_CTR" ref="0xb78240a4" loc="388:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SPE" ref="0xb788b1b4" loc="974:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PA3" ref="0xb7880a04" loc="1105:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_STXON" ref="0xb783eed8" loc="178:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="ATM128_ADC_DIFF_ADC11_1x" ref="0xb785fc4c" loc="76:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CC2420_SXOSCON" ref="0xb783e8c4" loc="175:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COM1A0" ref="0xb7893718" loc="881:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:115" name="ATM128_TWDR" ref="0xb78b1010" loc="247:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INT4" ref="0xb789d370" loc="762:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:130" name="ATM128_OCR3CL" ref="0xb78b08d4" loc="273:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:135" name="ATM128_OCR3AH" ref="0xb78af75c" loc="284:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC20" ref="0xb78a5a8c" loc="733:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINF4" ref="0xb78713a8" loc="1274:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_MDMCTRL0_AUTOCRC" ref="0xb7832010" loc="262:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM10" ref="0xb78921c8" loc="887:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_SNGL_ADC6" ref="0xb7860430" loc="65:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="XMM1" ref="0xb78a61c0" loc="713:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RXCTRL1_RXMIX_CURRENT" ref="0xb782c43c" loc="314:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COMC0" ref="0xb7893010" loc="875:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="NOISE_QUANTIZE_INTERVAL" ref="0xb7a342a4" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SFDMUX_SFD" ref="0xb78255d4" loc="381:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_MDMCTRL0_AUTOACK" ref="0xb783227c" loc="263:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_SRFOFF" ref="0xb783d350" loc="180:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_RXCTRL0_HIGH_LNA_GAIN" ref="0xb782f9e8" loc="296:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PB1" ref="0xb787d6a0" loc="1137:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PC3" ref="0xb787bc58" loc="1165:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="_ISpunct" ref="0xb7b417dc" loc="58:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="WDP2" ref="0xb788da4c" loc="955:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PD5" ref="0xb7878358" loc="1193:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PE7" ref="0xb78768ec" loc="1221:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:152" name="ATM128_UBRR1H" ref="0xb78aea9c" loc="307:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM01" ref="0xb789670c" loc="846:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUSR" ref="0xb78b5b7c" loc="172:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE3" ref="0xb789a6f4" loc="799:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WDRF" ref="0xb7898f14" loc="828:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM0" ref="0xb78977b0" loc="835:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RWWSRE" ref="0xb789e554" loc="752:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE" ref="0xb7885010" loc="1042:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CCM_4" ref="0xb7824d5c" loc="395:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_MAIN_ENC_RESETn" ref="0xb78343c4" loc="249:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INT7" ref="0xb789ee00" loc="759:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16384" name="_ISprint" ref="0xb7b44a00" loc="54:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE0" ref="0xb78863b4" loc="1033:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_CLK16_DIVIDE_1024" ref="0xb75bbc08" loc="69:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SRW11" ref="0xb78a7c10" loc="708:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="ATM128_PINA" ref="0xb78b82ac" loc="105:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS1" ref="0xb7889010" loc="995:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_STXENC" ref="0xb783c21c" loc="187:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PIND1" ref="0xb7876580" loc="1217:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINE3" ref="0xb7874c18" loc="1245:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="CC2420_SYNCWORD" ref="0xb783ce64" loc="193:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TWSTA" ref="0xb78a9010" loc="677:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TWIE" ref="0xb78a96d8" loc="681:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:360" name="CC2420_RAM_PANID" ref="0xb7836a38" loc="235:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1" ref="0xb78b6850" loc="149:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_SNGL_ADC0" ref="0xb7861810" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_PRESCALE_2" ref="0xb785cc3c" loc="105:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDA7" ref="0xb787f0d4" loc="1111:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CHANNEL_GND" ref="0xb7857e70" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ISC60" ref="0xb78a48b8" loc="743:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="REFS1" ref="0xb7881548" loc="1091:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_ADC_DIFF_ADC00_200x" ref="0xb7860ccc" loc="69:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE0" ref="0xb7884a88" loc="1061:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_PRESCALE_128" ref="0xb785bb8c" loc="112:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="ATM128_ADC_DIFF_ADC71_1x" ref="0xb785e9ec" loc="82:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:122" name="ATM128_TCCR1C" ref="0xb78b1a60" loc="258:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCDR3" ref="0xb788d010" loc="947:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PB2" ref="0xb787d4fc" loc="1136:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM01" ref="0xb78898e8" loc="1002:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="ATM128_OCR1BH" ref="0xb78b6010" loc="141:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PC4" ref="0xb787bab4" loc="1164:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PD6" ref="0xb78781b4" loc="1192:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:352" name="CC2420_RAM_IEEEADR" ref="0xb783680c" loc="234:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_POSIX_" ref="0xb7b4aef0" loc="352:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CMD_ROUTETABLE_DUMP" ref="0xb765b8c8" loc="16:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOV2" ref="0xb789ba6c" loc="790:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PF1" ref="0xb7873d54" loc="1257:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PG3" ref="0xb7871de0" loc="1282:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PROTOCOL_LINKEDLIST" ref="0xb78c94b8" loc="12:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ11" ref="0xb78891d4" loc="996:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_MDMCTRL1_TX_MODE" ref="0xb78311a0" loc="271:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="SEND_BUFFER_SIZE" ref="0xb765a7f4" loc="9:includes/sendInfo.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_RXCTRL1_LOW_LOWGAIN" ref="0xb782d1b0" loc="307:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="INTF4" ref="0xb789c1c8" loc="772:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_MDMCTRL0_RESERVED_FRAME_MODE" ref="0xb78332b8" loc="257:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_SPCR" ref="0xb78bc978" loc="69:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="XDIV4" ref="0xb78a6a6c" loc="720:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC" ref="0xb788852c" loc="1011:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TWEN" ref="0xb78a9528" loc="680:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_MDMCTRL1_DEMOD_AVG_MODE" ref="0xb7832c64" loc="269:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="CC2420_RXFIFO" ref="0xb7838b90" loc="222:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:48" name="ATM128_ASSR" ref="0xb78b5338" loc="160:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE16_NORMAL" ref="0xb75ac568" loc="212:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_POWER_SAVE" ref="0xb7863eac" loc="130:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="__codecvt_error" ref="0xb7b27d0c" loc="180:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_MDMCTRL1_CORR_THR" ref="0xb78329b0" loc="268:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDB1" ref="0xb787c444" loc="1147:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDC3" ref="0xb787aa34" loc="1175:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDD5" ref="0xb78770d4" loc="1203:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDE7" ref="0xb78756bc" loc="1231:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCF1C" ref="0xb7899a60" loc="812:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="FOC3C" ref="0xb788e010" loc="934:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PD0" ref="0xb7878b8c" loc="1198:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE1B" ref="0xb789b1d4" loc="783:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="SPR1" ref="0xb788ba24" loc="979:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PE2" ref="0xb78751b4" loc="1226:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PF4" ref="0xb7873868" loc="1254:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:33" name="ATM128_WDTCR" ref="0xb78b8b00" loc="119:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN0" ref="0xb7883010" loc="1064:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CHANNEL_THERMISTOR" ref="0xb7857798" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL" ref="0xb788bd9c" loc="983:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_CLK16_NORMAL" ref="0xb75bb258" loc="65:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM20" ref="0xb78956f8" loc="857:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XMBK" ref="0xb78a7dd0" loc="711:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC1" ref="0xb78870f4" loc="1020:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF3" ref="0xb78991d0" loc="807:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:57" name="ATM128_EIMSK" ref="0xb78b4848" loc="188:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ENOMEM" ref="0xb7904618" loc="62:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_PORTA" ref="0xb78b86c8" loc="111:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWS6" ref="0xb78a8898" loc="695:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS22" ref="0xb7895a60" loc="859:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS10" ref="0xb7890890" loc="915:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC3" ref="0xb7890a58" loc="918:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ACIS0" ref="0xb7882530" loc="1078:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINA6" ref="0xb787e038" loc="1122:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_STXCAL" ref="0xb783ead0" loc="176:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:120" name="ATM128_OCR1C" ref="0xb78b142c" loc="253:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CMD_TEST_CLIENT" ref="0xb765bae4" loc="17:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="ATM128_ADC_DIFF_ADC32_10x" ref="0xb785f384" loc="72:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:106" name="ATM128_EICRA" ref="0xb78b2148" loc="226:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="__codecvt_partial" ref="0xb7b27b40" loc="179:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ACI" ref="0xb7883da8" loc="1074:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE" ref="0xb78886dc" loc="1012:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PA6" ref="0xb7880518" loc="1102:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:69" name="SERIAL_PROTO_PACKET_NOACK" ref="0xb7910ac4" loc="105:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CHANNEL_BATTERY" ref="0xb7857a60" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDA2" ref="0xb787f944" loc="1116:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDB4" ref="0xb787df14" loc="1144:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDC6" ref="0xb787a524" loc="1172:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC11" ref="0xb78a5c44" loc="734:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINF7" ref="0xb7872e6c" loc="1271:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_WAVE16_PWM_10BIT" ref="0xb75acbac" loc="215:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDF3" ref="0xb7872794" loc="1265:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_PRESCALE_2b" ref="0xb785ce50" loc="106:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="XDIVEN" ref="0xb78a6544" loc="717:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MANFIDL_PARTNUM" ref="0xb7827954" loc="363:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOCA" ref="0xb788f6e0" loc="927:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PROTOCOL_PINGREPLY" ref="0xb78c9274" loc="11:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM01" ref="0xb7896a7c" loc="848:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="WGM13" ref="0xb78901c8" loc="911:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_IOCFG0_CCA_POLARITY" ref="0xb7828970" loc="352:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COMB1" ref="0xb7894a94" loc="872:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ELAST" ref="0xb7904b7c" loc="65:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE" ref="0xb7888bc0" loc="1015:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="IVSEL" ref="0xb7898850" loc="822:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:27" name="ATM128_ADC_DIFF_ADC32_1x" ref="0xb785d374" loc="86:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_IOCFG0_FIFOP_POLARITY" ref="0xb7828458" loc="350:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_BATTMON_BATTMON_VOLTAGE" ref="0xb78299c8" loc="344:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ACIC" ref="0xb78821c0" loc="1076:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:30" name="CC2420_MANFIDL" ref="0xb783a434" loc="203:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_UCSR0A" ref="0xb78bc568" loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:157" name="ATM128_UCSR1C" ref="0xb78ad554" loc="322:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_NO_SEC" ref="0xb7825c7c" loc="386:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_CLK16_DIVIDE_64" ref="0xb75bb71c" loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TSM" ref="0xb788c010" loc="960:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PUD" ref="0xb788c51c" loc="963:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DORD" ref="0xb788b364" loc="975:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ADIF" ref="0xb7882c00" loc="1084:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_START_CONVERSION_OFF" ref="0xb785a824" loc="127:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:40" name="CC2420_FSTST1" ref="0xb78398ec" loc="213:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB8" ref="0xb7885a38" loc="1048:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="P_PID" ref="0xb7cb894c" loc="53:/usr/include/i386-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:108" name="ATM128_XMCRB" ref="0xb78b235c" loc="229:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM3B0" ref="0xb78928e8" loc="893:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="JTRF" ref="0xb7898d64" loc="827:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="ATM128_PIND" ref="0xb78b9010" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CC2420_CBC_MAC" ref="0xb7825e90" loc="387:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SNOP" ref="0xb783e6ac" loc="174:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CBC_MAC_8" ref="0xb7824814" loc="392:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINB0" ref="0xb787b414" loc="1158:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="OCF2" ref="0xb789b8bc" loc="789:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM0" ref="0xb7897b10" loc="837:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINC2" ref="0xb7879a70" loc="1186:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PIND4" ref="0xb7876058" loc="1214:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ0" ref="0xb788a6e0" loc="988:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINE6" ref="0xb78746f0" loc="1242:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_TIMER_COMPARE_CLEAR" ref="0xb75af8f4" loc="188:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RXCTRL0_LOW_LNA_CURRENT" ref="0xb782e748" loc="301:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPMIE" ref="0xb789e1d8" loc="750:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCDR1" ref="0xb788d380" loc="949:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_SNGL_ADC3" ref="0xb7861e10" loc="62:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PSR0" ref="0xb788c6cc" loc="964:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WCOL" ref="0xb788cc00" loc="969:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDD0" ref="0xb7877944" loc="1208:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDE2" ref="0xb7874010" loc="1236:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_TXCTRL_TXMIXBUF_CUR" ref="0xb783037c" loc="285:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCIE3A" ref="0xb789a8b8" loc="800:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_WAVE16_PWM_9BIT" ref="0xb75ac990" loc="214:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="_ISOC_" ref="0xb7b490a8" loc="353:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ISC51" ref="0xb78a4a70" loc="744:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X0" ref="0xb78868c4" loc="1036:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:113" name="ATM128_TWSR" ref="0xb78b2b9c" loc="241:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MUX2" ref="0xb7881dc8" loc="1096:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MAC_FOOTER_SIZE" ref="0xb7841010" loc="148:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="OCDR6" ref="0xb788ea78" loc="944:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="CC2420_SECCTRL1" ref="0xb783bb20" loc="199:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TXB80" ref="0xb78836fc" loc="1068:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PB5" ref="0xb787d010" loc="1133:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PC7" ref="0xb787b5c8" loc="1161:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_DDRC" ref="0xb78b983c" loc="90:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="ATM128_PING" ref="0xb78b36d8" loc="213:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_STATUS_RSSI_VALID" ref="0xb783f180" loc="165:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE" ref="0xb7886dfc" loc="1041:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="__codecvt_ok" ref="0xb7b27960" loc="178:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWPS1" ref="0xb78a7010" loc="699:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINA1" ref="0xb787e8d0" loc="1127:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINB3" ref="0xb787ce9c" loc="1155:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINC5" ref="0xb7879548" loc="1183:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PIND7" ref="0xb7877b0c" loc="1211:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:41" name="CC2420_FSTST2" ref="0xb7839af8" loc="214:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_NONCE_KEY_SEQ_COUNTER" ref="0xb783552c" loc="241:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CCM_16" ref="0xb7823108" loc="397:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ02" ref="0xb788338c" loc="1066:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CCM_8" ref="0xb7824f14" loc="396:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="CC2420_AGCTST1" ref="0xb78392bc" loc="210:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PA1" ref="0xb7880d4c" loc="1107:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGMA0" ref="0xb7893380" loc="877:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGMB2" ref="0xb78916f0" loc="903:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK8_DIVIDE_256" ref="0xb75bc8ac" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="INTF7" ref="0xb789dbf8" loc="769:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TWA2" ref="0xb78a8010" loc="688:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CHANNEL_RSSI" ref="0xb78574b0" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/platforms/micaz/sim/platform_hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_PRESCALE_8" ref="0xb785b334" loc="108:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TCR0UB" ref="0xb789455c" loc="867:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="COM1B0" ref="0xb7893aa0" loc="883:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_RXCTRL0_HIGH_LNA_CURRENT" ref="0xb782e1e0" loc="299:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INT2" ref="0xb789d6d0" loc="764:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:133" name="ATM128_OCR3BH" ref="0xb78af130" loc="279:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC30" ref="0xb78a571c" loc="731:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ITIMER_PROF" ref="0xb7a3ac50" loc="101:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PINF2" ref="0xb7871718" loc="1276:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PING4" ref="0xb7870da0" loc="1295:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_PRESCALE" ref="0xb785bdb0" loc="116:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_SFLUSHTX" ref="0xb783d9b0" loc="183:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="CC2420_RXCTRL1_RXMIX_TAIL" ref="0xb782de2c" loc="312:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="WGM20" ref="0xb7895388" loc="855:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM32" ref="0xb788f010" loc="921:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:16" name="CC2420_MAIN" ref="0xb783c60c" loc="189:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:28" name="ATM128_ADC_DIFF_ADC42_1x" ref="0xb785d59c" loc="87:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC_SNGL_ADC4" ref="0xb7860030" loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_WAVE16_PWM_CAPTURE_LOW" ref="0xb75ab744" loc="220:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS1" ref="0xb7896038" loc="840:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1AL" ref="0xb78b6430" loc="145:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWINT" ref="0xb78acc68" loc="675:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK16_DIVIDE_256" ref="0xb75bb98c" loc="68:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="ATM128_SFIOR" ref="0xb78b88ec" loc="116:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_SERIAL_CC1000_ID" ref="0xb7911db8" loc="96:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_ADC" ref="0xb78bd294" loc="41:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="_IScntrl" ref="0xb7b41088" loc="57:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOC1B" ref="0xb788e390" loc="938:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM" ref="0xb7888f14" loc="1017:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:23" name="CC2420_RXCTRL1" ref="0xb783b4d4" loc="196:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PC1" ref="0xb787a010" loc="1167:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WDP0" ref="0xb788ddac" loc="957:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PD3" ref="0xb78786a0" loc="1195:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PE5" ref="0xb7876c34" loc="1223:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PF7" ref="0xb787337c" loc="1251:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="CC2420_RSSI" ref="0xb783cc44" loc="192:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:336" name="CC2420_RAM_CBCSTATE" ref="0xb78365cc" loc="233:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_NONCE_BLOCK_COUNTER" ref="0xb783528c" loc="240:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_WAVE16_PWM_FAST_10BIT" ref="0xb75ab4ec" loc="219:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ADPS1" ref="0xb78811c8" loc="1087:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWA5" ref="0xb78a9a48" loc="685:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="TICIE1" ref="0xb789cdec" loc="781:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="EXTRF" ref="0xb789729c" loc="830:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM1" ref="0xb788a010" loc="984:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ" ref="0xb7885520" loc="1045:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_POWER_STANDBY" ref="0xb7862174" loc="131:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="BORF" ref="0xb78970e4" loc="829:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:138" name="ATM128_TCCR3B" ref="0xb78ae010" loc="292:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_BACKOFF_PERIOD" ref="0xb7840618" loc="159:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="CC2420_AGCTST2" ref="0xb78394d4" loc="211:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB81" ref="0xb78846fc" loc="1057:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:18" name="ATM128_PORTD" ref="0xb78b942c" loc="84:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINE1" ref="0xb7873010" loc="1247:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS01" ref="0xb7896ddc" loc="850:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:25" name="CMD_PACKET_MAX_PAYLOAD_SIZE" ref="0xb78c86cc" loc="12:includes/CommandMsg.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PGERS" ref="0xb789ea88" loc="755:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="__codecvt_noconv" ref="0xb7b27ef4" loc="181:/usr/include/libio.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRIE1" ref="0xb7884010" loc="1053:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ADEN" ref="0xb78826f0" loc="1081:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADMUX" ref="0xb78bdcb8" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="CC2420_IOCFG1" ref="0xb783a21c" loc="202:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="AM_FLOODING" ref="0xb78c0128" loc="7:dataStructures/interfaces/../../includes/am_types.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MAIN_MOD_RESETn" ref="0xb78348a0" loc="251:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4096" name="_ISxdigit" ref="0xb7b45b08" loc="52:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PROTOCOL_PING" ref="0xb78c9038" loc="10:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="TOS_AM_GROUP" ref="0xb7915128" loc="27:/home/sigi/CSE160/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDA5" ref="0xb787f434" loc="1113:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDB7" ref="0xb787da04" loc="1141:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ISC70" ref="0xb78a4548" loc="741:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDF6" ref="0xb7872284" loc="1262:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:137" name="ATM128_TCNT3H" ref="0xb78afd88" loc="289:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_BATTMON_BATT_OK" ref="0xb7829494" loc="342:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="AVR_CLOCK_OFF" ref="0xb75ba5d8" loc="76:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:68" name="SERIAL_PROTO_PACKET_ACK" ref="0xb7910844" loc="104:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="CC2420_TIME_VREN" ref="0xb7840010" loc="157:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SECCTRL1_SEC_RXL" ref="0xb7829038" loc="338:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:47" name="ATM128_TCCR1A" ref="0xb78b5130" loc="157:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:63" name="ATM128_SREG" ref="0xb78b30a4" loc="202:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UPM11" ref="0xb788ac24" loc="993:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:121" name="ATM128_OCR1CH" ref="0xb78b1844" loc="255:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FP_NORMAL" ref="0xb7b4a690" loc="223:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PROTOCOL_NEIGHBOR" ref="0xb78c9ce4" loc="16:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="CC2420_MAIN_RESETn" ref="0xb7834160" loc="248:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:512" name="_ISlower" ref="0xb7b464d4" loc="49:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_START_CONVERSION_ON" ref="0xb785aa88" loc="128:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOS_SERIAL_ACTIVE_MESSAGE_ID" ref="0xb7911b68" loc="95:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:101" name="ATM128_PORTG" ref="0xb78b3af4" loc="219:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCF3B" ref="0xb7899540" loc="809:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="SM1" ref="0xb7898350" loc="819:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PG1" ref="0xb78701b4" loc="1284:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="TOV0" ref="0xb789a520" loc="796:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MAIN_XOSC16M_BYPASS" ref="0xb7834d84" loc="253:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_UBRR0L" ref="0xb78bc130" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="INTF2" ref="0xb789c538" loc="774:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ECANCEL" ref="0xb7c78960" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="FP_SUBNORMAL" ref="0xb7b4a490" loc="220:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM3A1" ref="0xb789239c" loc="890:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:15" name="ATM128_SPDR" ref="0xb78bcd88" loc="75:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XDIV2" ref="0xb78a6ddc" loc="722:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="ATM128_ADC_VREF_2_56" ref="0xb7862df4" loc="47:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="ATM128_CLK8_DIVIDE_64" ref="0xb75bc3dc" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR" ref="0xb7888a1c" loc="1014:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UPE0" ref="0xb7886714" loc="1035:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:19" name="ATM128_ADC_DIFF_ADC31_1x" ref="0xb785e14c" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="NOISE_HASHTABLE_SIZE" ref="0xb7a33010" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:132" name="ATM128_OCR3B" ref="0xb78b0cf4" loc="277:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X" ref="0xb7888d64" loc="1016:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SYNCWORD_SYNCWORD" ref="0xb7831ef0" loc="281:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_TIMER_COMPARE_TOGGLE" ref="0xb75af6b8" loc="187:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_ADC_VREF_RSVD" ref="0xb7862ba4" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDF0" ref="0xb7872ca4" loc="1268:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDG2" ref="0xb7870878" loc="1290:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="ATM128_ADC_DIFF_ADC00_10x" ref="0xb7860860" loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MPCM0" ref="0xb7886a7c" loc="1037:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRW" ref="0xb7899db8" loc="816:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ACD" ref="0xb78838b0" loc="1071:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_RXCTRL1_MED_HGM" ref="0xb782d90c" loc="310:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ATM128_CLK16_DIVIDE_8" ref="0xb75bb4b4" loc="66:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDC1" ref="0xb787ad94" loc="1177:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDD3" ref="0xb7877434" loc="1205:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDE5" ref="0xb7875a1c" loc="1233:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:17" name="CC2420_MDMCTRL0" ref="0xb783c82c" loc="190:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCF1A" ref="0xb789bdd4" loc="792:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC3A" ref="0xb788fc08" loc="932:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_MIN_BACKOFF" ref="0xb78409c8" loc="160:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PE0" ref="0xb78754fc" loc="1228:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PF2" ref="0xb7873bb0" loc="1256:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:52" name="ATM128_MCUCSR" ref="0xb78b5d88" loc="173:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="USBS" ref="0xb788a370" loc="986:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PG4" ref="0xb7871c3c" loc="1281:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="ATM128_WAVE16_PWM_COMPARE_LOW" ref="0xb75ab99c" loc="221:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:38" name="ATM128_ICR1L" ref="0xb78b7758" loc="135:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_STXONCCA" ref="0xb783d144" loc="179:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_MDMCTRL0_CCA_MOD" ref="0xb7833ce4" loc="261:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MDMCTRL0_PREAMBLE_LENGTH" ref="0xb7832538" loc="264:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ENOACK" ref="0xb79047dc" loc="63:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CSB2" ref="0xb78918a0" loc="904:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2147483648" name="CC2420_INVALID_TIMESTAMP" ref="0xb7823814" loc="403:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:191" name="SIM_LOG_OUTPUT_COUNT" ref="0xb7ab10dc" loc="64:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SPI2X" ref="0xb788cdb8" loc="970:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="CC2420_SFDMUX_XOSC16M_STABLE" ref="0xb7825874" loc="382:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_CLK16_EXTERNAL_FALL" ref="0xb75bbe98" loc="70:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:126" name="HDLC_FLAG_BYTE" ref="0xb7911540" loc="88:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CPHA" ref="0xb788b874" loc="978:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_RXCTRL1_RXBPF_LOCUR" ref="0xb782ebcc" loc="305:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ICF1" ref="0xb789bc1c" loc="791:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DOR1" ref="0xb78877b0" loc="1024:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:97" name="ATM128_DDRF" ref="0xb78b32bc" loc="207:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TOIE2" ref="0xb789cc28" loc="780:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINF0" ref="0xb7871a88" loc="1278:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PING2" ref="0xb786f1c8" loc="1297:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_FSCTRL_LOCK_LENGTH" ref="0xb782b010" loc="321:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CMD_LENGTH" ref="0xb765a3fc" loc="24:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE8_PWM" ref="0xb75b9010" loc="84:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWS4" ref="0xb78a8bf8" loc="697:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="SRL2" ref="0xb78a7388" loc="703:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ERETRY" ref="0xb79040a4" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CS20" ref="0xb7895dc0" loc="861:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ICNC1" ref="0xb7891dc8" loc="909:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:42" name="ATM128_OCR1A" ref="0xb78b6224" loc="144:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CS32" ref="0xb788f1c0" loc="922:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINA4" ref="0xb787e3a8" loc="1124:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="PINB6" ref="0xb787c974" loc="1152:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PA4" ref="0xb7880860" loc="1104:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDA0" ref="0xb787fca4" loc="1118:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="COM1A1" ref="0xb7893554" loc="880:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="DDB2" ref="0xb787c294" loc="1146:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INT5" ref="0xb789d1c0" loc="761:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDC4" ref="0xb787a884" loc="1174:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="DDD6" ref="0xb7878efc" loc="1202:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="_ISupper" ref="0xb7b48d28" loc="48:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC21" ref="0xb78a58d4" loc="732:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PINF5" ref="0xb78711f0" loc="1273:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:288" name="CC2420_RAM_SABUF" ref="0xb7837eb8" loc="230:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:45" name="CC2420_ADCTST" ref="0xb7838360" loc="218:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="MAC_HEADER_SIZE" ref="0xb7843d24" loc="146:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_MAIN_FS_RESETn" ref="0xb7834af8" loc="252:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="TWSTO" ref="0xb78a91c8" loc="678:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="WGM11" ref="0xb7892010" loc="886:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_RXCTRL0_RXMIXBUF_CUR" ref="0xb782f748" loc="295:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="XMM2" ref="0xb78a6010" loc="712:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="ATM128_ADC_SNGL_ADC7" ref="0xb7860630" loc="66:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="COMC1" ref="0xb7894e04" loc="874:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PSR321" ref="0xb788c890" loc="965:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:124" name="ATM128_ETIFR" ref="0xb78b1c74" loc="261:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:37" name="ATM128_TCCR2" ref="0xb78b734c" loc="131:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="UDRE0" ref="0xb7886210" loc="1032:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:155" name="ATM128_UCSR1A" ref="0xb78ad130" loc="316:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_SECCTRL0_SEC_M" ref="0xb782a6bc" loc="332:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="WGM1" ref="0xb7897cc0" loc="838:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM3C0" ref="0xb7892c70" loc="895:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="SPIE" ref="0xb788b010" loc="973:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE1" ref="0xb7887600" loc="1023:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_PINB" ref="0xb78b9c58" loc="96:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="SRW00" ref="0xb78a7a58" loc="707:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:320" name="CC2420_RAM_TXNONCE" ref="0xb7836384" loc="232:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCF0" ref="0xb789a370" loc="795:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC2" ref="0xb78951d0" loc="854:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PINC0" ref="0xb7879de0" loc="1188:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="PIND2" ref="0xb78763c8" loc="1216:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="PINE4" ref="0xb7874a60" loc="1244:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_ADC_VREF_OFF" ref="0xb7862754" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="FE" ref="0xb7888878" loc="1013:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FP_INFINITE" ref="0xb7b4a0a4" loc="214:/usr/include/math.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_WAVE8_NORMAL" ref="0xb75bad74" loc="83:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ACO" ref="0xb7883c04" loc="1073:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_LEFT_ADJUST" ref="0xb78614a4" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:272" name="CC2420_RAM_RXNONCE" ref="0xb7837c8c" loc="229:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="AVR_CLOCK_ON" ref="0xb75ba7d8" loc="77:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_TIMER_COMPARE_NORMAL" ref="0xb75af474" loc="186:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:-115" name="NOISE_MIN_QUANTIZE" ref="0xb7a34038" loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="MSTR" ref="0xb788b514" loc="976:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="CC2420_SAES" ref="0xb783c414" loc="188:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:29" name="ATM128_ADC_DIFF_ADC52_1x" ref="0xb785d7c4" loc="88:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:36" name="ATM128_TCNT2" ref="0xb78b7138" loc="128:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_SNGL_ADC1" ref="0xb7861a10" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:111" name="NOISE_NUM_VALUES" ref="0xb7a33688" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDE0" ref="0xb7874370" loc="1238:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_RXCTRL1_RXMIX_VCM" ref="0xb782c19c" loc="313:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ISC61" ref="0xb78a4700" loc="742:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:32" name="CC2420_FSMTC" ref="0xb783a850" loc="205:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXCIE1" ref="0xb7885c0c" loc="1051:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_MANFIDH_VERSION" ref="0xb7826038" loc="368:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INTF0" ref="0xb789c8a8" loc="776:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CBC_MAC_16" ref="0xb7824a00" loc="393:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="PORF" ref="0xb789744c" loc="831:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="RXB8" ref="0xb7885888" loc="1047:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ETIMEOUT" ref="0xb79049b4" loc="64:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_VREF_AVCC" ref="0xb78629a4" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:62" name="CC2420_TXFIFO" ref="0xb7838984" loc="221:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="OCDR4" ref="0xb788ede8" loc="946:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PB3" ref="0xb787d358" loc="1135:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PC5" ref="0xb787b910" loc="1163:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PD7" ref="0xb7878010" loc="1191:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CC2420_RXCTRL0_MED_LNA_CURRENT" ref="0xb782e494" loc="300:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOS_SERIAL_802_15_4_ID" ref="0xb7910038" loc="97:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2048" name="_ISdigit" ref="0xb7b453ac" loc="51:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="OCR0UB" ref="0xb7894398" loc="866:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:99" name="PROTOCOL_CMD" ref="0xb78c9ef4" loc="17:includes/protocol.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_ADCH" ref="0xb78bd684" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TOV3" ref="0xb78996f0" loc="810:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="UCSZ00" ref="0xb7888010" loc="1006:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ12" ref="0xb7884544" loc="1056:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="ATM128_TCNT1L" ref="0xb78b6a5c" loc="150:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_SECCTRL0_SEC_MODE" ref="0xb782a934" loc="333:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="UMSEL0" ref="0xb7889730" loc="1001:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_FSMTC_TC_SWITCH2TX" ref="0xb782698c" loc="374:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_FSCTRL_CAL_RUNNING" ref="0xb782cd70" loc="320:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="INTF5" ref="0xb789c010" loc="771:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TWA0" ref="0xb78a8370" loc="690:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXC0" ref="0xb7886058" loc="1031:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCR" ref="0xb78b3d08" loc="222:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_WAVE16_PWM_8BIT" ref="0xb75ac77c" loc="213:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="COM1C0" ref="0xb7893e28" loc="885:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="SUCCESS" ref="0xb7c7842c" loc="52:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="ESIZE" ref="0xb7c78794" loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="XDIV5" ref="0xb78a68b4" loc="719:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="INT0" ref="0xb789da30" loc="766:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="IVCE" ref="0xb7898a00" loc="823:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:43" name="CC2420_RXBPFTST" ref="0xb7839f24" loc="216:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:131" name="ATM128_OCR3CH" ref="0xb78b0ae0" loc="274:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="WGM30" ref="0xb7891010" loc="897:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_COMPARE_TOGGLE" ref="0xb75b99b0" loc="92:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_ADC_INT_FLAG_ON" ref="0xb785971c" loc="140:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TXCIE0" ref="0xb7884c4c" loc="1062:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:65535" name="AM_BROADCAST_ADDR" ref="0xb7916dd8" loc="15:/home/sigi/CSE160/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:22" name="ATM128_ADC_DIFF_ADC61_1x" ref="0xb785e7c4" loc="81:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_FSMTC_TC_TXEND2SWITCH" ref="0xb7826e98" loc="376:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="FAIL" ref="0xb7c785dc" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_TXCTRL_PA_CURRENT" ref="0xb7830dc4" loc="289:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PD1" ref="0xb78789e8" loc="1197:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="OCIE1C" ref="0xb7899010" loc="804:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PE3" ref="0xb7875010" loc="1225:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PF5" ref="0xb78736c4" loc="1253:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="_ISalnum" ref="0xb7b40010" loc="59:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_SIZE" ref="0xb78418a4" loc="152:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADCSRA" ref="0xb78bdaa4" loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN1" ref="0xb78841c8" loc="1054:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="CC2420_FSMTC_TC_PAON2TX" ref="0xb7826bf8" loc="375:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:34" name="ATM128_OCDR" ref="0xb78b8d08" loc="122:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM21" ref="0xb7895540" loc="856:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_RXCTRL1_MED_LOWGAIN" ref="0xb782d43c" loc="308:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="EALREADY" ref="0xb7904454" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="ATM128_ADC_DIFF_ADC41_1x" ref="0xb785e374" loc="79:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="ATM128_ADC_SNGL_GND" ref="0xb785dbb8" loc="90:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ACIS1" ref="0xb7882378" loc="1077:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:24" name="ATM128_PORTB" ref="0xb78b80a4" loc="102:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="TWS7" ref="0xb78a86e8" loc="694:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CS11" ref="0xb78906e0" loc="914:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINA7" ref="0xb787fe6c" loc="1121:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="CC2420_AGCCTRL" ref="0xb783ae78" loc="208:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:114" name="ATM128_TWAR" ref="0xb78b2da4" loc="244:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:58" name="ATM128_EICRB" ref="0xb78b4a5c" loc="191:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PA7" ref="0xb7880374" loc="1101:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:54" name="ATM128_TIFR" ref="0xb78b4218" loc="179:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:128" name="ATM128_ICR3" ref="0xb78b00ac" loc="267:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:44" name="CC2420_FMSTATE" ref="0xb7838154" loc="217:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="ATM128_ADC_PRESCALE_64" ref="0xb785b970" loc="111:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDA3" ref="0xb787f794" loc="1115:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="DDB5" ref="0xb787dd64" loc="1143:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="DDC7" ref="0xb787a374" loc="1171:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:64" name="CC2420_STATUS_XOSC16M_STABLE" ref="0xb783e2a0" loc="170:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:31" name="CC2420_MANFIDH" ref="0xb783a64c" loc="204:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC00" ref="0xb78a41c8" loc="737:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="DDF4" ref="0xb78725e4" loc="1264:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="CC2420_SRXDEC" ref="0xb783c010" loc="186:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CMD_TEST_SERVER" ref="0xb765bd00" loc="18:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="AM_PACK" ref="0xb78c1d64" loc="40:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="FOCB" ref="0xb788f890" loc="928:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:362" name="CC2420_RAM_SHORTADR" ref="0xb7836c80" loc="236:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ATM128_CLK8_OFF" ref="0xb75c0a58" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TOS_AM_ADDRESS" ref="0xb791534c" loc="28:/home/sigi/CSE160/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="CC2420_MDMCTRL0_ADR_DECODE" ref="0xb7833800" loc="259:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="COMA0" ref="0xb78948dc" loc="871:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:11" name="ATM128_WAVE16_PWM_COMPARE_HIGH" ref="0xb75abe64" loc="223:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_FSMTC_TC_RXCHAIN2RX" ref="0xb782670c" loc="373:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="FOC" ref="0xb7897600" loc="834:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:256" name="CC2420_RAM_KEY0" ref="0xb7837a4c" loc="228:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL0" ref="0xb78881d4" loc="1007:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="TXEN0" ref="0xb78831c8" loc="1065:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="ATM128_UCSR0B" ref="0xb78bc34c" loc="60:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:153" name="ATM128_UBRR1L" ref="0xb78aecb8" loc="310:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:14" name="ATM128_SPSR" ref="0xb78bcb80" loc="72:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_MDMCTRL1_RX_MODE" ref="0xb783140c" loc="272:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="RXC" ref="0xb7888388" loc="1010:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:13" name="CC2420_TXCTRL_TX_TURNAROUND" ref="0xb7830610" loc="286:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="CMD_NEIGHBOR_DUMP" ref="0xb765b448" loc="14:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="ATM128_POWER_DOWN" ref="0xb78623a4" loc="132:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="MUX0" ref="0xb78801c0" loc="1098:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ITIMER_REAL" ref="0xb7a3a818" loc="94:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="CC2420_SRXON" ref="0xb783ecd4" loc="177:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:4" name="RXEN" ref="0xb78851c0" loc="1043:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM3B1" ref="0xb7892724" loc="892:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="XDIV0" ref="0xb78a51c8" loc="724:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="CC2420_IOCFG1_SFDMUX" ref="0xb78272a8" loc="358:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="PACKET_HEADER_LENGTH" ref="0xb78c5c68" loc="13:includes/packet.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="ATM128_PINE" ref="0xb78c0a6c" loc="30:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:26" name="ATM128_DDRA" ref="0xb78b84b4" loc="108:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="TCN0UB" ref="0xb78941d4" loc="865:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="PINB1" ref="0xb787b25c" loc="1157:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="COM1" ref="0xb7897960" loc="836:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="PINC3" ref="0xb78798b8" loc="1185:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="UCSZ1" ref="0xb788a528" loc="987:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:5" name="PIND5" ref="0xb7877e7c" loc="1213:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="PINE7" ref="0xb7874538" loc="1241:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="TWEA" ref="0xb78ace18" loc="676:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:12" name="ATM128_UDR0" ref="0xb78bc770" loc="66:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_RSSI_RSSI_VAL" ref="0xb7831a78" loc="277:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="DDG0" ref="0xb7870bd8" loc="1292:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_STATUS_TX_ACTIVE" ref="0xb783f7e0" loc="167:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:6" name="RWWSB" ref="0xb789e390" loc="751:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="TRUE" ref="0xb7ad24c8" loc="76:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="CMD_LINKSTATE_DUMP" ref="0xb765b684" loc="15:includes/command.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="DDD1" ref="0xb7877794" loc="1207:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:20" name="NOISE_HISTORY" ref="0xb7a34a94" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="P_PGID" ref="0xb7cb8ad0" loc="54:/usr/include/i386-linux-gnu/bits/waitflags.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="DDE3" ref="0xb7875d7c" loc="1235:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="CC2420_SECCTRL0_SEC_SAKEYSEL" ref="0xb782bedc" loc="329:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:35" name="ATM128_OCR2" ref="0xb78b8f10" loc="125:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:7" name="IDRD" ref="0xb788e708" loc="942:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:104" name="ATM128_SPMCSR" ref="0xb78b3f14" loc="223:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="CC2420_IOCFG0_FIFO_POLARITY" ref="0xb78281b8" loc="349:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="OCIE3B" ref="0xb789aa7c" loc="801:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CC2420_IOCFG0_FIFOP_THR" ref="0xb7828bdc" loc="353:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8192" name="_ISspace" ref="0xb7b442ac" loc="53:/usr/include/ctype.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="ISC40" ref="0xb789e010" loc="747:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="CC2420_SECCTRL0_RXFIFO_PROTECTION" ref="0xb782b99c" loc="327:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="U2X1" ref="0xb7887b10" loc="1026:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:8" name="CC2420_MDMCTRL0_CCA_HYST" ref="0xb7833a78" loc="260:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="CSB0" ref="0xb7891c00" loc="906:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:21" name="CC2420_TXCTRL" ref="0xb783b0a4" loc="194:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="UCPOL" ref="0xb788a898" loc="989:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="MUX3" ref="0xb7881c18" loc="1095:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128_sim.h">
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:255" name="NO_TASK" ref="0xb78e3104" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:10" name="NUM_TASKS" ref="0xb78e4f18" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimSchedulerBasicP.nc">
      <component-ref qname="SimSchedulerBasicP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="stopDoneTask" ref="0xb778a010" loc="101:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="sendDoneTask" ref="0xb77d26e4" loc="145:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:0" name="startDoneTask" ref="0xb778a86c" loc="96:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:3" name="read_rssi_task" ref="0xb766a908" loc="528:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="sendBufferTask" ref="0xb75ff7e0" loc="74:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:2" name="MINDT" ref="0xb7575a28" loc="45:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:230" name="MAXT" ref="0xb7575bec" loc="46:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="Atm128AlarmAsyncP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="fired" ref="0xb75bd9d8" loc="74:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="END_OF_LIST" ref="0xb74938a0" loc="56:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="updateFromTimer" ref="0xb749b520" loc="71:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="NUM_TIMERS" ref="0xb74936a8" loc="55:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:1" name="NUM_CLIENTS" ref="0xb743d514" loc="48:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="errorTask" ref="0xb743c650" loc="169:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="U:" name="CancelTask" ref="0xb743cf00" loc="126:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
    <constant cst="I:9" name="processCommand" ref="0xb73cd354" loc="22:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-int cname="int" size="I:4" alignment="I:4"></type-int>
    </constant>
  </constants>
  <functions>
  </functions>
  <typedefs>
    <typedef name="intptr_t" ref="0xb7dc3dd0" loc="125:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="intptr_t" ref="0xb7dc3dd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_packet_t" ref="0xb790d90c" loc="134:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_packet" ref="0xb790d31c"/>
        <typename><typedef-ref name="serial_packet_t" ref="0xb790d90c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3B_t" ref="0xb75a89b4" loc="247:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75a8130"/>
        <typename><typedef-ref name="Atm128_TCCR3B_t" ref="0xb75a89b4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_spinlock_t" ref="0xb7c796cc" loc="234:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-qualified volatile="">
          <typename><typedef-ref name="pthread_spinlock_t" ref="0xb7c796cc"/></typename>
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-qualified>
    </typedef>
    <typedef name="wchar_t" ref="0xb7f88608" loc="324:/usr/lib/gcc/i686-linux-gnu/4.8/include/stddef.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="wchar_t" ref="0xb7f88608"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Admux_t" ref="0xb785c8c8" loc="99:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb785c64c"/>
        <typename><typedef-ref name="Atm128Admux_t" ref="0xb785c8c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ushort" ref="0xb7c8fd40" loc="151:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="ushort" ref="0xb7c8fd40"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_footer_t" ref="0xb7914a28" loc="22:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:2" alignment="I:1"><nx_struct-ref name="tossim_footer" ref="0xb7914688"/>
        <typename><typedef-ref name="tossim_footer_t" ref="0xb7914a28"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int64_t" ref="0xb7cb45a8" loc="46:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__int64_t" ref="0xb7cb45a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int16_t" ref="0xb7cb6ce4" loc="38:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__int16_t" ref="0xb7cb6ce4"/></typename>
      </type-int>
    </typedef>
    <typedef name="serial_header_t" ref="0xb790d124" loc="129:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="serial_header" ref="0xb790e6bc"/>
        <typename><typedef-ref name="serial_header_t" ref="0xb790d124"/></typename>
      </type-tag>
    </typedef>
    <typedef name="TMilli" ref="0xb78e645c" loc="42:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb78e62a0"/>
        <typename><typedef-ref name="TMilli" ref="0xb78e645c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="cc2420_metadata_t" ref="0xb7844e5c" loc="108:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="86:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Packet metadata.</short>
        <long>&#10; CC2420 Packet metadata. Contains extra information about the message&#10; that will not be transmitted.&#10;&#10; Note that the first two bytes automatically take in the values of the&#10; FCS when the payload is full. Do not modify the first two bytes of metadata.&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0xb7845f4c"/>
        <typename><typedef-ref name="cc2420_metadata_t" ref="0xb7844e5c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__u_char" ref="0xb7cb6044" loc="30:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__u_char" ref="0xb7cb6044"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT0_t" ref="0xb75b6624" loc="111:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT0_t" ref="0xb75b6624"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1BL_t" ref="0xb75a4374" loc="278:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BL_t" ref="0xb75a4374"/></typename>
      </type-int>
    </typedef>
    <typedef name="__intptr_t" ref="0xb7cab694" loc="186:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__intptr_t" ref="0xb7cab694"/></typename>
      </type-int>
    </typedef>
    <typedef name="__qaddr_t" ref="0xb7cab274" loc="182:/usr/include/i386-linux-gnu/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="long long" size="I:8" alignment="I:8">
          <typename><typedef-ref name="__quad_t" ref="0xb7cb4a68"/></typename>
        </type-int>
        <typename><typedef-ref name="__qaddr_t" ref="0xb7cab274"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_OCR2_t" ref="0xb75b5064" loc="116:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR2_t" ref="0xb75b5064"/></typename>
      </type-int>
    </typedef>
    <typedef name="fd_set" ref="0xb7c8a618" loc="75:/usr/include/i386-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0xb7c8a45c"/>
        <typename><typedef-ref name="fd_set" ref="0xb7c8a618"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_time_t" ref="0xb7ad29dc" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_tossim.h">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_tossim.h">
        <short>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the basic TOSSIM primitives and utility&#10; functions.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="sim_time_t" ref="0xb7ad29dc"/></typename>
      </type-int>
    </typedef>
    <typedef name="__caddr_t" ref="0xb7cab484" loc="183:/usr/include/i386-linux-gnu/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="__caddr_t" ref="0xb7cab484"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__time_t" ref="0xb7caf478" loc="139:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__time_t" ref="0xb7caf478"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ssize_t" ref="0xb7cac81c" loc="172:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__ssize_t" ref="0xb7cac81c"/></typename>
      </type-int>
    </typedef>
    <typedef name="float_t" ref="0xb7c34d6c" loc="35:/usr/include/i386-linux-gnu/bits/mathdef.h">
      <type-float cname="long double" size="I:12" alignment="I:4">
        <typename><typedef-ref name="float_t" ref="0xb7c34d6c"/></typename>
      </type-float>
    </typedef>
    <typedef name="mode_t" ref="0xb7c9297c" loc="70:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="mode_t" ref="0xb7c9297c"/></typename>
      </type-int>
    </typedef>
    <typedef name="CommandMsg" ref="0xb78c7124" loc="20:includes/CommandMsg.h">
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="CommandMsg" ref="0xb78c88b8"/>
        <typename><typedef-ref name="CommandMsg" ref="0xb78c7124"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1C_t" ref="0xb75a7bf8" loc="262:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75a76bc"/>
        <typename><typedef-ref name="Atm128_TCCR1C_t" ref="0xb75a7bf8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_lock_t" ref="0xb7b2aea4" loc="150:/usr/include/libio.h">
      <type-void size="I:1" alignment="I:1">
        <typename><typedef-ref name="_IO_lock_t" ref="0xb7b2aea4"/></typename>
      </type-void>
    </typedef>
    <typedef name="int_least32_t" ref="0xb7dc6bd0" loc="67:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_least32_t" ref="0xb7dc6bd0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__builtin_va_list" ref="0xb7f8e010"  loc="NONE">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0xb7f94f04"/></type-tag>
      </type-pointer>
    </typedef>
    <typedef name="__uint32_t" ref="0xb7cb4360" loc="41:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uint32_t" ref="0xb7cb4360"/></typename>
      </type-int>
    </typedef>
    <typedef name="TMicro" ref="0xb78e6c9c" loc="44:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb78e6ae0"/>
        <typename><typedef-ref name="TMicro" ref="0xb78e6c9c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsword_t" ref="0xb7cac60c" loc="170:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsword_t" ref="0xb7cac60c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt_t" ref="0xb7cac134" loc="166:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsfilcnt_t" ref="0xb7cac134"/></typename>
      </type-int>
    </typedef>
    <typedef name="nlink_t" ref="0xb7c92bb8" loc="75:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="nlink_t" ref="0xb7c92bb8"/></typename>
      </type-int>
    </typedef>
    <typedef name="clock_t" ref="0xb7c8f010" loc="59:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clock_t" ref="0xb7c8f010"/></typename>
      </type-int>
    </typedef>
    <typedef name="security_header_t" ref="0xb78466fc" loc="58:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="49:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Security Header&#10;</short>
      </documentation>
      <type-tag size="I:6" alignment="I:1"><nx_struct-ref name="security_header_t" ref="0xb7854a58"/>
        <typename><typedef-ref name="security_header_t" ref="0xb78466fc"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1BH_t" ref="0xb75a40fc" loc="277:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1BH_t" ref="0xb75a40fc"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_status_t" ref="0xb78546ec" loc="4:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="33:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/SimMoteP.nc">
        <short>&#10; The TOSSIM abstraction of a mote.</short>
        <long>&#10; The TOSSIM abstraction of a mote. By putting simulation state into&#10; a component, we can scale and reference this state automatically&#10; using nesC's rewriting, rather than managing and indexing into&#10; arrays manually.&#10;&#10; @author Phil Levis&#10; @date   August 19 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="cc2420_status_t" ref="0xb78546ec"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_condattr_t" ref="0xb7c7dca4" loc="160:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0xb7c7da88"/>
        <typename><typedef-ref name="pthread_condattr_t" ref="0xb7c7dca4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="heap_t" ref="0xb7a79780" loc="65:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/heap.h">
      <documentation loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/heap.h">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:4"><struct-ref name="heap" ref="0xb7a791fc"/>
        <typename><typedef-ref name="heap_t" ref="0xb7a79780"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gid_t" ref="0xb7cb2440" loc="126:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gid_t" ref="0xb7cb2440"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint16_t" ref="0xb7ce40b0" loc="446:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nxle_uint16_t">
        <typename><typedef-ref name="nxle_uint16_t" ref="0xb7ce40b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_channel_t" ref="0xb7ab2a6c" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_log_channel" ref="0xb7ab22d0"/>
        <typename><typedef-ref name="sim_log_channel_t" ref="0xb7ab2a6c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int" ref="0xb7c945f0" loc="35:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int" ref="0xb7c945f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_once_t" ref="0xb7c7c13c" loc="168:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_once_t" ref="0xb7c7c13c"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint" ref="0xb7c8ff20" loc="152:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint" ref="0xb7c8ff20"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_group_t" ref="0xb7916860" loc="11:/home/sigi/CSE160/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_group_t" ref="0xb7916860"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR3C_t" ref="0xb75a7f18" loc="265:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75a76bc"/>
        <typename><typedef-ref name="Atm128_TCCR3C_t" ref="0xb75a7f18"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least8_t" ref="0xb7dc50e8" loc="76:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_least8_t" ref="0xb7dc50e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsid_t" ref="0xb7cb093c" loc="134:/usr/include/i386-linux-gnu/bits/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7cb0780"/>
        <typename><typedef-ref name="__fsid_t" ref="0xb7cb093c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCNT1H_t" ref="0xb75a61cc" loc="269:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1H_t" ref="0xb75a61cc"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3L_t" ref="0xb75a6934" loc="272:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3L_t" ref="0xb75a6934"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast32_t" ref="0xb7dc3938" loc="110:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast32_t" ref="0xb7dc3938"/></typename>
      </type-int>
    </typedef>
    <typedef name="blksize_t" ref="0xb7c844a4" loc="228:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="blksize_t" ref="0xb7c844a4"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least64_t" ref="0xb7dc6e34" loc="72:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_least64_t" ref="0xb7dc6e34"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ETIFR_t" ref="0xb759fab8" loc="324:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb759f89c"/>
        <typename><typedef-ref name="Atm128_ETIFR_t" ref="0xb759fab8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pid_t" ref="0xb7cb0470" loc="133:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__pid_t" ref="0xb7cb0470"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_int" ref="0xb7cb646c" loc="32:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_int" ref="0xb7cb646c"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT2_t" ref="0xb75b6dec" loc="115:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT2_t" ref="0xb75b6dec"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AL_t" ref="0xb75a6e34" loc="276:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AL_t" ref="0xb75a6e34"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_event_t" ref="0xb7aca8e8" loc="51:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_event_queue.h">
      <type-tag size="I:28" alignment="I:4"><struct-ref name="sim_event" ref="0xb7aca690"/>
        <typename><typedef-ref name="sim_event_t" ref="0xb7aca8e8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="error_t" ref="0xb78e9360" loc="68:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; @author Eric B. Decker &#60;cire831@gmail.com>&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="error_t" ref="0xb78e9360"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sig_atomic_t" ref="0xb7c8d328" loc="22:/usr/include/i386-linux-gnu/bits/sigset.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__sig_atomic_t" ref="0xb7c8d328"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_SFIOR_t" ref="0xb75af0c4" loc="178:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b0e84"/>
        <typename><typedef-ref name="Atm128_SFIOR_t" ref="0xb75af0c4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__daddr_t" ref="0xb7cafb28" loc="143:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__daddr_t" ref="0xb7cafb28"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino_t" ref="0xb7cb2674" loc="127:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__ino_t" ref="0xb7cb2674"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least8_t" ref="0xb7dc677c" loc="65:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_least8_t" ref="0xb7dc677c"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_packet_t" ref="0xb7843830" loc="114:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_packet_t" ref="0xb7843240"/>
        <typename><typedef-ref name="cc2420_packet_t" ref="0xb7843830"/></typename>
      </type-tag>
    </typedef>
    <typedef name="FILE" ref="0xb7b2db48" loc="48:/usr/include/stdio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7b2d91c"/>
        <typename><typedef-ref name="FILE" ref="0xb7b2db48"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__compar_fn_t" ref="0xb7c4d944" loc="741:/usr/include/stdlib.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
          <function-parameters>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:4" alignment="I:4">
              <type-qualified const="">
                <type-void size="I:1" alignment="I:1"></type-void>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <typename><typedef-ref name="__compar_fn_t" ref="0xb7c4d944"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__locale_t" ref="0xb7cd4010" loc="39:/usr/include/xlocale.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:116" alignment="I:4"><struct-ref name="__locale_struct" ref="0xb7cd6190"/></type-tag>
        <typename><typedef-ref name="__locale_t" ref="0xb7cd4010"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="Atm128_ADCL_t" ref="0xb78570e8" loc="161:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCL_t" ref="0xb78570e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mode_t" ref="0xb7cb2b10" loc="129:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__mode_t" ref="0xb7cb2b10"/></typename>
      </type-int>
    </typedef>
    <typedef name="locale_t" ref="0xb7cd4274" loc="42:/usr/include/xlocale.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="I:116" alignment="I:4"><struct-ref name="__locale_struct" ref="0xb7cd6190"/></type-tag>
        <typename><typedef-ref name="locale_t" ref="0xb7cd4274"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="radio_stats_t" ref="0xb790e4c4" loc="121:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:18" alignment="I:2"><struct-ref name="radio_stats" ref="0xb7910f50"/>
        <typename><typedef-ref name="radio_stats_t" ref="0xb790e4c4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="clockid_t" ref="0xb7c8f550" loc="91:/usr/include/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="clockid_t" ref="0xb7c8f550"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1H_t" ref="0xb75a39f8" loc="291:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1H_t" ref="0xb75a39f8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3L_t" ref="0xb75a2174" loc="294:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3L_t" ref="0xb75a2174"/></typename>
      </type-int>
    </typedef>
    <typedef name="gid_t" ref="0xb7c92750" loc="65:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="gid_t" ref="0xb7c92750"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsid_t" ref="0xb7c94ec8" loc="39:/usr/include/i386-linux-gnu/sys/types.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7cb0780"/>
        <typename><typedef-ref name="fsid_t" ref="0xb7c94ec8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_packet_t" ref="0xb791f044" loc="59:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_packet.h">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_packet.h">
        <short>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.</short>
        <long>&#10;&#10; TOSSIM packet abstract data type, so C++ code can call into nesC&#10; code that does the native-to-network type translation.&#10;&#10; @author Philip Levis&#10; @date   Jan 2 2006&#10;</long>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><struct-ref name="sim_packet" ref="0xb7921e30"/>
        <typename><typedef-ref name="sim_packet_t" ref="0xb791f044"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128Adcsra_t" ref="0xb7858be4" loc="158:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-tag size="I:1" alignment="I:1"><struct-ref ref="0xb7858848"/>
        <typename><typedef-ref name="Atm128Adcsra_t" ref="0xb7858be4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="int8_t" ref="0xb7f825d0" loc="36:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int8_t" ref="0xb7f825d0"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_log_output_t" ref="0xb7ab20c4" loc="54:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_log.c">
      <type-tag size="I:8" alignment="I:4"><struct-ref name="sim_log_output" ref="0xb7ab3bd0"/>
        <typename><typedef-ref name="sim_log_output_t" ref="0xb7ab20c4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="suseconds_t" ref="0xb7c8bb2c" loc="48:/usr/include/i386-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="suseconds_t" ref="0xb7c8bb2c"/></typename>
      </type-int>
    </typedef>
    <typedef name="sigset_t" ref="0xb7c8dcf4" loc="37:/usr/include/i386-linux-gnu/sys/select.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0xb7c8d8d4"/>
        <typename><typedef-ref name="sigset_t" ref="0xb7c8dcf4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="T32khz" ref="0xb78e687c" loc="43:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb78e66c0"/>
        <typename><typedef-ref name="T32khz" ref="0xb78e687c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_short" ref="0xb7c943dc" loc="34:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_short" ref="0xb7c943dc"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_header_t" ref="0xb7914464" loc="18:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <documentation loc="14:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
        <short> I-Frame 6LowPAN interoperability byte *</short>
      </documentation>
      <type-tag size="I:11" alignment="I:1"><nx_struct-ref name="tossim_header" ref="0xb7915564"/>
        <typename><typedef-ref name="tossim_header_t" ref="0xb7914464"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ptrdiff_t" ref="0xb7f881a8" loc="147:/usr/lib/gcc/i686-linux-gnu/4.8/include/stddef.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ptrdiff_t" ref="0xb7f881a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="TSecond" ref="0xb7a0dec4" loc="41:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/Timer.h">
      <documentation loc="1:NodeC.nc">
        <short>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.</short>
        <long>&#10; ANDES Lab - University of California, Merced&#10; This class provides the basic functions of a network node.&#10;&#10; @author UCM ANDES Lab&#10; @date   2013/09/03&#10;&#10;</long>
      </documentation>
      <type-tag size="I:4" alignment="I:4"><struct-ref ref="0xb7a0dd08"/>
        <typename><typedef-ref name="TSecond" ref="0xb7a0dec4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="blkcnt_t" ref="0xb7c84708" loc="235:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="blkcnt_t" ref="0xb7c84708"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint32_t" ref="0xb7dc62c0" loc="51:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint32_t" ref="0xb7dc62c0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_uint64_t" ref="0xb7ce49c8" loc="448:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nxle_uint64_t">
        <typename><typedef-ref name="nxle_uint64_t" ref="0xb7ce49c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint8_t" ref="0xb7ce9878" loc="435:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_uint8_t" ref="0xb7ce9878"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintptr_t" ref="0xb7dc2010" loc="128:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uintptr_t" ref="0xb7dc2010"/></typename>
      </type-int>
    </typedef>
    <typedef name="caddr_t" ref="0xb7c91adc" loc="116:/usr/include/i386-linux-gnu/sys/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-int cname="char" size="I:1" alignment="I:1"></type-int>
        <typename><typedef-ref name="caddr_t" ref="0xb7c91adc"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="__u_long" ref="0xb7cb6690" loc="33:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__u_long" ref="0xb7cb6690"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast64_t" ref="0xb7dc3bb8" loc="112:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_fast64_t" ref="0xb7dc3bb8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT3H_t" ref="0xb75a66bc" loc="271:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT3H_t" ref="0xb75a66bc"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint16_t" ref="0xb7cb6f1c" loc="39:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__uint16_t" ref="0xb7cb6f1c"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_char" ref="0xb7c941a0" loc="33:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_char" ref="0xb7c941a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="mcu_power_t" ref="0xb7865670" loc="120:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="mcu_power_t" ref="0xb7865670"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast16_t" ref="0xb7dc5d8c" loc="96:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast16_t" ref="0xb7dc5d8c"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1AH_t" ref="0xb75a6bbc" loc="275:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1AH_t" ref="0xb75a6bbc"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR1CL_t" ref="0xb75a4864" loc="280:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CL_t" ref="0xb75a4864"/></typename>
      </type-int>
    </typedef>
    <typedef name="fpos_t" ref="0xb7b1368c" loc="110:/usr/include/stdio.h">
      <type-tag size="I:12" alignment="I:4"><struct-ref ref="0xb7b2be30"/>
        <typename><typedef-ref name="fpos_t" ref="0xb7b1368c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR1B_t" ref="0xb75a8680" loc="244:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75a8130"/>
        <typename><typedef-ref name="Atm128_TCCR1B_t" ref="0xb75a8680"/></typename>
      </type-tag>
    </typedef>
    <typedef name="div_t" ref="0xb7ca66c8" loc="101:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7ca64ac"/>
        <typename><typedef-ref name="div_t" ref="0xb7ca66c8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="sim_gain_noise_t" ref="0xb79e5914" loc="6:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_gain.c">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="sim_gain_noise" ref="0xb79e54b4"/>
        <typename><typedef-ref name="sim_gain_noise_t" ref="0xb79e5914"/></typename>
      </type-tag>
    </typedef>
    <typedef name="size_t" ref="0xb7f883cc" loc="212:/usr/lib/gcc/i686-linux-gnu/4.8/include/stddef.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="size_t" ref="0xb7f883cc"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint8_t" ref="0xb7cb6ab8" loc="37:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__uint8_t" ref="0xb7cb6ab8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__sigset_t" ref="0xb7c8da90" loc="30:/usr/include/i386-linux-gnu/bits/sigset.h">
      <type-tag size="I:128" alignment="I:4"><struct-ref ref="0xb7c8d8d4"/>
        <typename><typedef-ref name="__sigset_t" ref="0xb7c8da90"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR0_t" ref="0xb75b63b4" loc="110:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b8c90"/>
        <typename><typedef-ref name="Atm128_TCCR0_t" ref="0xb75b63b4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__loff_t" ref="0xb7cab010" loc="181:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__loff_t" ref="0xb7cab010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__ino64_t" ref="0xb7cb28ec" loc="128:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__ino64_t" ref="0xb7cb28ec"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_id_t" ref="0xb7917d80" loc="6:/home/sigi/CSE160/tiny/tinyos-main/tos/types/AM.h">
      <documentation loc="34:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/platform_message.h">
        <short>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.</short>
        <long>&#10; Defining the platform-independently named packet structures to be the&#10; tossim structures.&#10;&#10; @author Philip Levis&#10; @date   Dec 2 2005&#10; Revision:  $Revision: 1.5 $&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_id_t" ref="0xb7917d80"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_header_t" ref="0xb790b69c" loc="53:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:11" alignment="I:1"><union-ref name="message_header" ref="0xb790b0ec"/>
        <typename><typedef-ref name="message_header_t" ref="0xb790b69c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="gain_entry_t" ref="0xb79eb984" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_gain.h">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_gain.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="I:16" alignment="I:4"><struct-ref name="gain_entry" ref="0xb79eb37c"/>
        <typename><typedef-ref name="gain_entry_t" ref="0xb79eb984"/></typename>
      </type-tag>
    </typedef>
    <typedef name="am_addr_t" ref="0xb7916aa8" loc="12:/home/sigi/CSE160/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="am_addr_t" ref="0xb7916aa8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int32_t" ref="0xb7ce9010" loc="433:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nx_int32_t">
        <typename><typedef-ref name="nx_int32_t" ref="0xb7ce9010"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ADCH_t" ref="0xb7858e48" loc="160:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/adc/Atm128Adc.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ADCH_t" ref="0xb7858e48"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_least16_t" ref="0xb7dc5448" loc="77:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint_least16_t" ref="0xb7dc5448"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_close_fn" ref="0xb7b1e244" loc="353:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
        </function-parameters>
        <typename><typedef-ref name="__io_close_fn" ref="0xb7b1e244"/></typename>
      </type-function>
    </typedef>
    <typedef name="uint8_t" ref="0xb7f82e7c" loc="48:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint8_t" ref="0xb7f82e7c"/></typename>
      </type-int>
    </typedef>
    <typedef name="time_t" ref="0xb7c8f29c" loc="75:/usr/include/time.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="time_t" ref="0xb7c8f29c"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int8_t" ref="0xb7ce7a30" loc="441:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nxle_int8_t">
        <typename><typedef-ref name="nxle_int8_t" ref="0xb7ce7a30"/></typename>
      </type-int>
    </typedef>
    <typedef name="lldiv_t" ref="0xb7ca52a0" loc="121:/usr/include/stdlib.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0xb7ca5084"/>
        <typename><typedef-ref name="lldiv_t" ref="0xb7ca52a0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="_IO_FILE" ref="0xb7b226c4" loc="310:/usr/include/libio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7b2d91c"/>
        <typename><typedef-ref name="_IO_FILE" ref="0xb7b226c4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_attr_t" ref="0xb7c82744" loc="69:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:36" alignment="I:4"><union-ref name="pthread_attr_t" ref="0xb7c820fc"/>
        <typename><typedef-ref name="pthread_attr_t" ref="0xb7c82744"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_seek_fn" ref="0xb7b1fce8" loc="350:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="long long" size="I:8" alignment="I:8">
              <typename><typedef-ref name="__off64_t" ref="0xb7cb0274"/></typename>
            </type-int>
          </type-pointer>
          <type-int cname="int" size="I:4" alignment="I:4"></type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_seek_fn" ref="0xb7b1fce8"/></typename>
      </type-function>
    </typedef>
    <typedef name="pid_t" ref="0xb7c91224" loc="98:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pid_t" ref="0xb7c91224"/></typename>
      </type-int>
    </typedef>
    <typedef name="timer_t" ref="0xb7c8f7bc" loc="103:/usr/include/time.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="timer_t" ref="0xb7c8f7bc"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="pthread_rwlockattr_t" ref="0xb7c79450" loc="228:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:8" alignment="I:4"><union-ref ref="0xb7c79234"/>
        <typename><typedef-ref name="pthread_rwlockattr_t" ref="0xb7c79450"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR0_t" ref="0xb75b6888" loc="112:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR0_t" ref="0xb75b6888"/></typename>
      </type-int>
    </typedef>
    <typedef name="__uint64_t" ref="0xb7cb4818" loc="47:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__uint64_t" ref="0xb7cb4818"/></typename>
      </type-int>
    </typedef>
    <typedef name="__dev_t" ref="0xb7cb2010" loc="124:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__dev_t" ref="0xb7cb2010"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int32_t" ref="0xb7ce634c" loc="443:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="int" size="I:4" alignment="I:1" network="nxle_int32_t">
        <typename><typedef-ref name="nxle_int32_t" ref="0xb7ce634c"/></typename>
      </type-int>
    </typedef>
    <typedef name="pack" ref="0xb78c20c4" loc="26:includes/packet.h">
      <type-tag size="I:28" alignment="I:1"><nx_struct-ref name="pack" ref="0xb78c4420"/>
        <typename><typedef-ref name="pack" ref="0xb78c20c4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="va_list" ref="0xb7b13438" loc="79:/usr/include/stdio.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0xb7f94f04"/></type-tag>
        <typename><typedef-ref name="va_list" ref="0xb7b13438"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="sendInfo" ref="0xb7659010" loc="16:includes/sendInfo.h">
      <type-tag size="I:32" alignment="I:2"><struct-ref name="sendInfo" ref="0xb765a9bc"/>
        <typename><typedef-ref name="sendInfo" ref="0xb7659010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__off_t" ref="0xb7cb0010" loc="131:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__off_t" ref="0xb7cb0010"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast8_t" ref="0xb7dc5b78" loc="90:/usr/include/stdint.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="int_fast8_t" ref="0xb7dc5b78"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blkcnt_t" ref="0xb7cae6f4" loc="158:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__blkcnt_t" ref="0xb7cae6f4"/></typename>
      </type-int>
    </typedef>
    <typedef name="tossim_metadata_t" ref="0xb7912f08" loc="36:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimRadioMsg.h">
      <type-tag size="I:7" alignment="I:1"><nx_struct-ref name="tossim_metadata" ref="0xb7914c34"/>
        <typename><typedef-ref name="tossim_metadata_t" ref="0xb7912f08"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__syscall_ulong_t" ref="0xb7cacd50" loc="177:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__syscall_ulong_t" ref="0xb7cacd50"/></typename>
      </type-int>
    </typedef>
    <typedef name="am_id_t" ref="0xb7916618" loc="10:/home/sigi/CSE160/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="am_id_t" ref="0xb7916618"/></typename>
      </type-int>
    </typedef>
    <typedef name="intmax_t" ref="0xb7dc2254" loc="138:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="intmax_t" ref="0xb7dc2254"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCapture_t" ref="0xb75a834c" loc="241:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75a8130"/>
        <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0xb75a834c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR2_t" ref="0xb75b6b7c" loc="114:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b8c90"/>
        <typename><typedef-ref name="Atm128_TCCR2_t" ref="0xb75b6b7c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="serial_metadata_t" ref="0xb790deb0" loc="138:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <type-tag size="I:1" alignment="I:1"><nx_struct-ref name="serial_metadata" ref="0xb790db18"/>
        <typename><typedef-ref name="serial_metadata_t" ref="0xb790deb0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fsblkcnt_t" ref="0xb7caebf0" loc="162:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fsblkcnt_t" ref="0xb7caebf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint16_t" ref="0xb7dc60b8" loc="49:/usr/include/stdint.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="uint16_t" ref="0xb7dc60b8"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos_t" ref="0xb7b2a064" loc="25:/usr/include/_G_config.h">
      <type-tag size="I:12" alignment="I:4"><struct-ref ref="0xb7b2be30"/>
        <typename><typedef-ref name="_G_fpos_t" ref="0xb7b2a064"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int8_t" ref="0xb7c8e280" loc="200:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="u_int8_t" ref="0xb7c8e280"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCNT1L_t" ref="0xb75a6444" loc="270:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_TCNT1L_t" ref="0xb75a6444"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CH_t" ref="0xb75a3500" loc="287:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CH_t" ref="0xb75a3500"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_group_t" ref="0xb791616c" loc="7:/home/sigi/CSE160/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nx_uint8_t">
        <typename><typedef-ref name="nx_am_group_t" ref="0xb791616c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timer_t" ref="0xb7cae24c" loc="150:/usr/include/i386-linux-gnu/bits/types.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-void size="I:1" alignment="I:1"></type-void>
        <typename><typedef-ref name="__timer_t" ref="0xb7cae24c"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="message_metadata_t" ref="0xb790a2bc" loc="61:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:7" alignment="I:1"><union-ref name="message_metadata" ref="0xb790be98"/>
        <typename><typedef-ref name="message_metadata_t" ref="0xb790a2bc"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__io_write_fn" ref="0xb7b1f410" loc="341:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__ssize_t" ref="0xb7cac81c"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-qualified const="">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-qualified>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="size_t" ref="0xb7f883cc"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_write_fn" ref="0xb7b1f410"/></typename>
      </type-function>
    </typedef>
    <typedef name="fd_mask" ref="0xb7c8a874" loc="82:/usr/include/i386-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fd_mask" ref="0xb7c8a874"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint32_t" ref="0xb7ce717c" loc="437:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nx_uint32_t">
        <typename><typedef-ref name="nx_uint32_t" ref="0xb7ce717c"/></typename>
      </type-int>
    </typedef>
    <typedef name="hashtable_t" ref="0xb7ab94b8" loc="10:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/hashtable.h">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_log.h">
        <short>&#10; The TOSSIM logging system.</short>
        <long>&#10; The TOSSIM logging system. Unlike in TinyOS 1.x, this logging&#10; system supports an arbitrary number of channels, denoted by&#10; a string identifier. A channel can be connected to any number&#10; of outputs, and a debug statement can be associated with any&#10; number of channels.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-tag size="V:" alignment="V:"><struct-ref name="hashtable" ref="0xb7ab9260"/>
        <typename><typedef-ref name="hashtable_t" ref="0xb7ab94b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="dev_t" ref="0xb7c9253c" loc="60:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="dev_t" ref="0xb7c9253c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_quad_t" ref="0xb7cb4cd8" loc="56:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__u_quad_t" ref="0xb7cb4cd8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int32_t" ref="0xb7c8e8e8" loc="202:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_int32_t" ref="0xb7c8e8e8"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsfilcnt_t" ref="0xb7c84c00" loc="243:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsfilcnt_t" ref="0xb7c84c00"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast8_t" ref="0xb7dc34c8" loc="103:/usr/include/stdint.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uint_fast8_t" ref="0xb7dc34c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="idtype_t" ref="0xb7cb8c94" loc="55:/usr/include/i386-linux-gnu/bits/waitflags.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0xb7cb86d8"/>
        <typename><typedef-ref name="idtype_t" ref="0xb7cb8c94"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__rlim64_t" ref="0xb7caf044" loc="137:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__rlim64_t" ref="0xb7caf044"/></typename>
      </type-int>
    </typedef>
    <typedef name="snr_lqi_t" ref="0xb7742184" loc="13:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref name="snr_lqi" ref="0xb7745b74"/>
        <typename><typedef-ref name="snr_lqi_t" ref="0xb7742184"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__key_t" ref="0xb7cafd24" loc="144:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__key_t" ref="0xb7cafd24"/></typename>
      </type-int>
    </typedef>
    <typedef name="__useconds_t" ref="0xb7caf6c4" loc="140:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__useconds_t" ref="0xb7caf6c4"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128Assr_t" ref="0xb75b4124" loc="130:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b5ee8"/>
        <typename><typedef-ref name="Atm128Assr_t" ref="0xb75b4124"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BL_t" ref="0xb75a3288" loc="286:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BL_t" ref="0xb75a3288"/></typename>
      </type-int>
    </typedef>
    <typedef name="__io_read_fn" ref="0xb7b21a84" loc="333:/usr/include/libio.h">
      <type-function size="I:1" alignment="I:1">
        <type-int cname="int" size="I:4" alignment="I:4">
          <typename><typedef-ref name="__ssize_t" ref="0xb7cac81c"/></typename>
        </type-int>
        <function-parameters>
          <type-pointer size="I:4" alignment="I:4">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <type-pointer size="I:4" alignment="I:4">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
            <typename><typedef-ref name="size_t" ref="0xb7f883cc"/></typename>
          </type-int>
        </function-parameters>
        <typename><typedef-ref name="__io_read_fn" ref="0xb7b21a84"/></typename>
      </type-function>
    </typedef>
    <typedef name="nx_int16_t" ref="0xb7ceab70" loc="432:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nx_int16_t">
        <typename><typedef-ref name="nx_int16_t" ref="0xb7ceab70"/></typename>
      </type-int>
    </typedef>
    <typedef name="__gwchar_t" ref="0xb7dc2890" loc="34:/usr/include/inttypes.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__gwchar_t" ref="0xb7dc2890"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR1L_t" ref="0xb75a3c68" loc="292:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR1L_t" ref="0xb75a3c68"/></typename>
      </type-int>
    </typedef>
    <typedef name="register_t" ref="0xb7c8d010" loc="205:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="register_t" ref="0xb7c8d010"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_header_t" ref="0xb78458b8" loc="78:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="73:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short> I-Frame 6LowPAN interoperability byte *</short>
      </documentation>
      <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0xb7846924"/>
        <typename><typedef-ref name="cc2420_header_t" ref="0xb78458b8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_barrierattr_t" ref="0xb7c7743c" loc="249:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0xb7c77220"/>
        <typename><typedef-ref name="pthread_barrierattr_t" ref="0xb7c7743c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_ETIMSK_t" ref="0xb75a164c" loc="309:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75a1430"/>
        <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0xb75a164c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerControl_t" ref="0xb75b8eac" loc="108:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <documentation loc="11:/home/sigi/CSE160/tiny/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b8c90"/>
        <typename><typedef-ref name="Atm128TimerControl_t" ref="0xb75b8eac"/></typename>
      </type-tag>
    </typedef>
    <typedef name="ssize_t" ref="0xb7c91664" loc="109:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ssize_t" ref="0xb7c91664"/></typename>
      </type-int>
    </typedef>
    <typedef name="__quad_t" ref="0xb7cb4a68" loc="55:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__quad_t" ref="0xb7cb4a68"/></typename>
      </type-int>
    </typedef>
    <typedef name="int32_t" ref="0xb7f82a2c" loc="38:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int32_t" ref="0xb7f82a2c"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint64_t" ref="0xb7dc6510" loc="58:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint64_t" ref="0xb7dc6510"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_long" ref="0xb7c9481c" loc="36:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="u_long" ref="0xb7c9481c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_atomic_t" ref="0xb786a064" loc="94:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/sim/atm128hardware.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__nesc_atomic_t" ref="0xb786a064"/></typename>
      </type-int>
    </typedef>
    <typedef name="_LIB_VERSION_TYPE" ref="0xb7b49304" loc="354:/usr/include/math.h">
      <type-tag size="I:4" alignment="I:4"><enum-ref ref="0xb7b4a894"/>
        <typename><typedef-ref name="_LIB_VERSION_TYPE" ref="0xb7b49304"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nxle_int64_t" ref="0xb7ce67b0" loc="444:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nxle_int64_t">
        <typename><typedef-ref name="nxle_int64_t" ref="0xb7ce67b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="nxle_int16_t" ref="0xb7ce7e94" loc="442:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="short" size="I:2" alignment="I:1" network="nxle_int16_t">
        <typename><typedef-ref name="nxle_int16_t" ref="0xb7ce7e94"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_t" ref="0xb7c84e6c" loc="60:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_t" ref="0xb7c84e6c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__blksize_t" ref="0xb7cae49c" loc="153:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__blksize_t" ref="0xb7cae49c"/></typename>
      </type-int>
    </typedef>
    <typedef name="imaxdiv_t" ref="0xb7dbf010" loc="284:/usr/include/inttypes.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0xb7dc2da4"/>
        <typename><typedef-ref name="imaxdiv_t" ref="0xb7dbf010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nlink_t" ref="0xb7cb2d3c" loc="130:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__nlink_t" ref="0xb7cb2d3c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__id_t" ref="0xb7caf254" loc="138:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__id_t" ref="0xb7caf254"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TCCR1A_t" ref="0xb75aedec" loc="205:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75ae89c"/>
        <typename><typedef-ref name="Atm128_TCCR1A_t" ref="0xb75aedec"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least32_t" ref="0xb7dc568c" loc="78:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_least32_t" ref="0xb7dc568c"/></typename>
      </type-int>
    </typedef>
    <typedef name="__mbstate_t" ref="0xb7b2b9dc" loc="94:/usr/include/wchar.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7b2b7c0"/>
        <typename><typedef-ref name="__mbstate_t" ref="0xb7b2b9dc"/></typename>
      </type-tag>
    </typedef>
    <typedef name="message_footer_t" ref="0xb790bc80" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/platform_message.h">
      <type-tag size="I:2" alignment="I:1"><union-ref name="message_footer" ref="0xb790b8a0"/>
        <typename><typedef-ref name="message_footer_t" ref="0xb790bc80"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3BH_t" ref="0xb75a3010" loc="285:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3BH_t" ref="0xb75a3010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__WAIT_STATUS" ref="0xb7ca6158" loc="71:/usr/include/stdlib.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0xb7ca7da0"/>
        <typename><typedef-ref name="__WAIT_STATUS" ref="0xb7ca6158"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__blkcnt64_t" ref="0xb7cae978" loc="159:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__blkcnt64_t" ref="0xb7cae978"/></typename>
      </type-int>
    </typedef>
    <typedef name="fsblkcnt_t" ref="0xb7c84984" loc="239:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="fsblkcnt_t" ref="0xb7c84984"/></typename>
      </type-int>
    </typedef>
    <typedef name="off_t" ref="0xb7c91010" loc="86:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="off_t" ref="0xb7c91010"/></typename>
      </type-int>
    </typedef>
    <typedef name="__u_short" ref="0xb7cb6270" loc="31:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="__u_short" ref="0xb7cb6270"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int64_t" ref="0xb7ce9444" loc="434:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="long long" size="I:8" alignment="I:1" network="nx_int64_t">
        <typename><typedef-ref name="nx_int64_t" ref="0xb7ce9444"/></typename>
      </type-int>
    </typedef>
    <typedef name="quad_t" ref="0xb7c94a48" loc="37:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="quad_t" ref="0xb7c94a48"/></typename>
      </type-int>
    </typedef>
    <typedef name="__suseconds_t" ref="0xb7caf918" loc="141:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__suseconds_t" ref="0xb7caf918"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_barrier_t" ref="0xb7c79d7c" loc="243:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:20" alignment="I:4"><union-ref ref="0xb7c79b60"/>
        <typename><typedef-ref name="pthread_barrier_t" ref="0xb7c79d7c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128TimerCtrlClock_t" ref="0xb75a78d8" loc="259:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75a76bc"/>
        <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0xb75a78d8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__int8_t" ref="0xb7cb68a8" loc="36:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="signed char" size="I:1" alignment="I:1">
        <typename><typedef-ref name="__int8_t" ref="0xb7cb68a8"/></typename>
      </type-int>
    </typedef>
    <typedef name="_G_fpos64_t" ref="0xb7b2a6dc" loc="30:/usr/include/_G_config.h">
      <type-tag size="I:16" alignment="I:4"><struct-ref ref="0xb7b2a4c0"/>
        <typename><typedef-ref name="_G_fpos64_t" ref="0xb7b2a6dc"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__clockid_t" ref="0xb7cae010" loc="147:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clockid_t" ref="0xb7cae010"/></typename>
      </type-int>
    </typedef>
    <typedef name="uint_fast16_t" ref="0xb7dc3700" loc="109:/usr/include/stdint.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uint_fast16_t" ref="0xb7dc3700"/></typename>
      </type-int>
    </typedef>
    <typedef name="cc2420_footer_t" ref="0xb7845d04" loc="84:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
      <documentation loc="80:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/cc2420/sim/CC2420.h">
        <short>&#10; CC2420 Packet Footer&#10;</short>
      </documentation>
      <type-tag size="I:0" alignment="I:1"><nx_struct-ref name="cc2420_footer_t" ref="0xb7845b00"/>
        <typename><typedef-ref name="cc2420_footer_t" ref="0xb7845d04"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR3AL_t" ref="0xb75a4d64" loc="284:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AL_t" ref="0xb75a4d64"/></typename>
      </type-int>
    </typedef>
    <typedef name="uintmax_t" ref="0xb7dc24c8" loc="140:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uintmax_t" ref="0xb7dc24c8"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_am_addr_t" ref="0xb79163f0" loc="8:/home/sigi/CSE160/tiny/tinyos-main/tos/types/AM.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_am_addr_t" ref="0xb79163f0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__clock_t" ref="0xb7cb0b68" loc="135:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__clock_t" ref="0xb7cb0b68"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_uint16_t" ref="0xb7ce9cd4" loc="436:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1" network="nx_uint16_t">
        <typename><typedef-ref name="nx_uint16_t" ref="0xb7ce9cd4"/></typename>
      </type-int>
    </typedef>
    <typedef name="__rlim_t" ref="0xb7cb0da8" loc="136:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__rlim_t" ref="0xb7cb0da8"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_quad_t" ref="0xb7c94c9c" loc="38:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_quad_t" ref="0xb7c94c9c"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast32_t" ref="0xb7dc3010" loc="97:/usr/include/stdint.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="int_fast32_t" ref="0xb7dc3010"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_least16_t" ref="0xb7dc69b4" loc="66:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int_least16_t" ref="0xb7dc69b4"/></typename>
      </type-int>
    </typedef>
    <typedef name="ldiv_t" ref="0xb7ca6c5c" loc="109:/usr/include/stdlib.h">
      <type-tag size="I:8" alignment="I:4"><struct-ref ref="0xb7ca6a40"/>
        <typename><typedef-ref name="ldiv_t" ref="0xb7ca6c5c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="u_int64_t" ref="0xb7c8ec1c" loc="203:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="u_int64_t" ref="0xb7c8ec1c"/></typename>
      </type-int>
    </typedef>
    <typedef name="u_int16_t" ref="0xb7c8e5b4" loc="201:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:2">
        <typename><typedef-ref name="u_int16_t" ref="0xb7c8e5b4"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIFR_t" ref="0xb75b1e0c" loc="163:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b1bf0"/>
        <typename><typedef-ref name="Atm128_TIFR_t" ref="0xb75b1e0c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_TCCR3A_t" ref="0xb75ac20c" loc="208:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75ae89c"/>
        <typename><typedef-ref name="Atm128_TCCR3A_t" ref="0xb75ac20c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uint_least64_t" ref="0xb7dc5918" loc="83:/usr/include/stdint.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="uint_least64_t" ref="0xb7dc5918"/></typename>
      </type-int>
    </typedef>
    <typedef name="__int32_t" ref="0xb7cb4144" loc="40:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__int32_t" ref="0xb7cb4144"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_rwlock_t" ref="0xb7c7bd64" loc="222:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:32" alignment="I:4"><union-ref ref="0xb7c7bae8"/>
        <typename><typedef-ref name="pthread_rwlock_t" ref="0xb7c7bd64"/></typename>
      </type-tag>
    </typedef>
    <typedef name="double_t" ref="0xb7c32010" loc="37:/usr/include/i386-linux-gnu/bits/mathdef.h">
      <type-float cname="long double" size="I:12" alignment="I:4">
        <typename><typedef-ref name="double_t" ref="0xb7c32010"/></typename>
      </type-float>
    </typedef>
    <typedef name="lqi_dist_t" ref="0xb77458f8" loc="7:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_lqi.h">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:12" alignment="I:4"><struct-ref name="lqi_dist" ref="0xb77454ac"/>
        <typename><typedef-ref name="lqi_dist_t" ref="0xb77458f8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__fd_mask" ref="0xb7c8bd4c" loc="54:/usr/include/i386-linux-gnu/sys/select.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__fd_mask" ref="0xb7c8bd4c"/></typename>
      </type-int>
    </typedef>
    <typedef name="bool" ref="0xb7ad2044" loc="65:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/tos.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="bool" ref="0xb7ad2044"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsblkcnt64_t" ref="0xb7caee9c" loc="163:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsblkcnt64_t" ref="0xb7caee9c"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_hash_t" ref="0xb7a3247c" loc="71:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
        <short>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.</short>
        <long>&#10; Implementation of all of the SNIST primitives and utility&#10; functions.&#10;&#10; @author Hyungjune Lee&#10; @date   Oct 13 2006&#10;</long>
      </documentation>
      <type-tag size="I:480" alignment="I:4"><struct-ref name="sim_noise_hash_t" ref="0xb7a338b0"/>
        <typename><typedef-ref name="sim_noise_hash_t" ref="0xb7a3247c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__FILE" ref="0xb7b2ddd4" loc="64:/usr/include/stdio.h">
      <type-tag size="I:148" alignment="I:4"><struct-ref name="_IO_FILE" ref="0xb7b2d91c"/>
        <typename><typedef-ref name="__FILE" ref="0xb7b2ddd4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__gnuc_va_list" ref="0xb7b2aa20" loc="40:/usr/lib/gcc/i686-linux-gnu/4.8/include/stdarg.h">
      <type-pointer size="I:4" alignment="I:4">
        <type-tag size="V:" alignment="V:"><struct-ref ref="0xb7f94f04"/></type-tag>
        <typename><typedef-ref name="__gnuc_va_list" ref="0xb7b2aa20"/></typename>
      </type-pointer>
    </typedef>
    <typedef name="nxle_uint8_t" ref="0xb7ce6c14" loc="445:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1" network="nxle_uint8_t">
        <typename><typedef-ref name="nxle_uint8_t" ref="0xb7ce6c14"/></typename>
      </type-int>
    </typedef>
    <typedef name="__off64_t" ref="0xb7cb0274" loc="132:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__off64_t" ref="0xb7cb0274"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_ICR3H_t" ref="0xb75a3ed8" loc="293:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_ICR3H_t" ref="0xb75a3ed8"/></typename>
      </type-int>
    </typedef>
    <typedef name="__fsfilcnt64_t" ref="0xb7cac3e0" loc="167:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:8">
        <typename><typedef-ref name="__fsfilcnt64_t" ref="0xb7cac3e0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3AH_t" ref="0xb75a4aec" loc="283:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3AH_t" ref="0xb75a4aec"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_OCR3CL_t" ref="0xb75a3778" loc="288:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR3CL_t" ref="0xb75a3778"/></typename>
      </type-int>
    </typedef>
    <typedef name="int64_t" ref="0xb7f82c54" loc="43:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int64_t" ref="0xb7f82c54"/></typename>
      </type-int>
    </typedef>
    <typedef name="int16_t" ref="0xb7f8284c" loc="37:/usr/include/stdint.h">
      <type-int cname="short" size="I:2" alignment="I:2">
        <typename><typedef-ref name="int16_t" ref="0xb7f8284c"/></typename>
      </type-int>
    </typedef>
    <typedef name="ulong" ref="0xb7c8fb30" loc="150:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ulong" ref="0xb7c8fb30"/></typename>
      </type-int>
    </typedef>
    <typedef name="int_fast64_t" ref="0xb7dc326c" loc="99:/usr/include/stdint.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="int_fast64_t" ref="0xb7dc326c"/></typename>
      </type-int>
    </typedef>
    <typedef name="uid_t" ref="0xb7c92dcc" loc="80:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="uid_t" ref="0xb7c92dcc"/></typename>
      </type-int>
    </typedef>
    <typedef name="__syscall_slong_t" ref="0xb7cacaa8" loc="175:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="long" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__syscall_slong_t" ref="0xb7cacaa8"/></typename>
      </type-int>
    </typedef>
    <typedef name="message_t" ref="0xb79091e4" loc="19:/home/sigi/CSE160/tiny/tinyos-main/tos/types/message.h">
      <type-tag size="I:48" alignment="I:1"><nx_struct-ref name="message_t" ref="0xb790a48c"/>
        <typename><typedef-ref name="message_t" ref="0xb79091e4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="nx_uint64_t" ref="0xb7ce75d8" loc="438:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1" network="nx_uint64_t">
        <typename><typedef-ref name="nx_uint64_t" ref="0xb7ce75d8"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128_TIMSK_t" ref="0xb75b37c4" loc="146:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75b35a8"/>
        <typename><typedef-ref name="Atm128_TIMSK_t" ref="0xb75b37c4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="loff_t" ref="0xb7c92114" loc="44:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="long long" size="I:8" alignment="I:8">
        <typename><typedef-ref name="loff_t" ref="0xb7c92114"/></typename>
      </type-int>
    </typedef>
    <typedef name="__socklen_t" ref="0xb7cab8e4" loc="189:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__socklen_t" ref="0xb7cab8e4"/></typename>
      </type-int>
    </typedef>
    <typedef name="node_t" ref="0xb7a75ac0" loc="65:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/heap.c">
      <type-tag size="I:12" alignment="I:4"><struct-ref name="node" ref="0xb7a75684"/>
        <typename><typedef-ref name="node_t" ref="0xb7a75ac0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__uid_t" ref="0xb7cb2228" loc="125:/usr/include/i386-linux-gnu/bits/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__uid_t" ref="0xb7cb2228"/></typename>
      </type-int>
    </typedef>
    <typedef name="nx_int8_t" ref="0xb7cea73c" loc="431:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="signed char" size="I:1" alignment="I:1" network="nx_int8_t">
        <typename><typedef-ref name="nx_int8_t" ref="0xb7cea73c"/></typename>
      </type-int>
    </typedef>
    <typedef name="sim_noise_node_t" ref="0xb7a31a98" loc="84:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_noise.h">
      <type-tag size="I:184" alignment="I:4"><struct-ref name="sim_noise_node_t" ref="0xb7a32754"/>
        <typename><typedef-ref name="sim_noise_node_t" ref="0xb7a31a98"/></typename>
      </type-tag>
    </typedef>
    <typedef name="id_t" ref="0xb7c91428" loc="104:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="id_t" ref="0xb7c91428"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutex_t" ref="0xb7c808d0" loc="128:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:24" alignment="I:4"><union-ref ref="0xb7c80654"/>
        <typename><typedef-ref name="pthread_mutex_t" ref="0xb7c808d0"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__itimer_which_t" ref="0xb7a39488" loc="120:/usr/include/i386-linux-gnu/sys/time.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="__itimer_which_t" ref="0xb7a39488"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_cond_t" ref="0xb7c7d614" loc="154:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:48" alignment="I:4"><union-ref ref="0xb7c7d398"/>
        <typename><typedef-ref name="pthread_cond_t" ref="0xb7c7d614"/></typename>
      </type-tag>
    </typedef>
    <typedef name="pthread_key_t" ref="0xb7c7deec" loc="164:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="pthread_key_t" ref="0xb7c7deec"/></typename>
      </type-int>
    </typedef>
    <typedef name="ino_t" ref="0xb7c92328" loc="48:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:4">
        <typename><typedef-ref name="ino_t" ref="0xb7c92328"/></typename>
      </type-int>
    </typedef>
    <typedef name="daddr_t" ref="0xb7c918a0" loc="115:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="daddr_t" ref="0xb7c918a0"/></typename>
      </type-int>
    </typedef>
    <typedef name="__timezone_ptr_t" ref="0xb7a3d64c" loc="61:/usr/include/i386-linux-gnu/sys/time.h">
      <documentation loc="32:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/sim_mote.h">
        <short>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.</short>
        <long>&#10; The C functions that allow TOSSIM-side code to access the SimMoteP&#10; component.&#10;&#10; @author Philip Levis&#10; @date   Nov 22 2005&#10;</long>
      </documentation>
      <type-qualified __restrict="">
          <typename><typedef-ref name="__timezone_ptr_t" ref="0xb7a3d64c"/></typename>
        <type-pointer size="I:4" alignment="I:4">
          <type-tag size="I:8" alignment="I:4"><struct-ref name="timezone" ref="0xb7a3d010"/></type-tag>
        </type-pointer>
      </type-qualified>
    </typedef>
    <typedef name="nxle_uint32_t" ref="0xb7ce453c" loc="447:/usr/local/lib/ncc/nesc_nx.h">
      <type-int cname="unsigned int" unsigned="" size="I:4" alignment="I:1" network="nxle_uint32_t">
        <typename><typedef-ref name="nxle_uint32_t" ref="0xb7ce453c"/></typename>
      </type-int>
    </typedef>
    <typedef name="key_t" ref="0xb7c91cf0" loc="122:/usr/include/i386-linux-gnu/sys/types.h">
      <type-int cname="int" size="I:4" alignment="I:4">
        <typename><typedef-ref name="key_t" ref="0xb7c91cf0"/></typename>
      </type-int>
    </typedef>
    <typedef name="pthread_mutexattr_t" ref="0xb7c7e010" loc="134:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><union-ref ref="0xb7c80d4c"/>
        <typename><typedef-ref name="pthread_mutexattr_t" ref="0xb7c7e010"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__pthread_slist_t" ref="0xb7c82e4c" loc="84:/usr/include/i386-linux-gnu/bits/pthreadtypes.h">
      <type-tag size="I:4" alignment="I:4"><struct-ref name="__pthread_internal_slist" ref="0xb7c829bc"/>
        <typename><typedef-ref name="__pthread_slist_t" ref="0xb7c82e4c"/></typename>
      </type-tag>
    </typedef>
    <typedef name="uart_id_t" ref="0xb79111b0" loc="83:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
      <documentation loc="71:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="uart_id_t" ref="0xb79111b0"/></typename>
      </type-int>
    </typedef>
    <typedef name="Atm128TimerCtrlCompare_t" ref="0xb75aeab8" loc="202:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-tag size="I:1" alignment="I:1"><union-ref ref="0xb75ae89c"/>
        <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0xb75aeab8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="Atm128_OCR1CH_t" ref="0xb75a45ec" loc="279:/home/sigi/CSE160/tiny/tinyos-main/tos/chips/atm128/timer/Atm128Timer.h">
      <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
        <typename><typedef-ref name="Atm128_OCR1CH_t" ref="0xb75a45ec"/></typename>
      </type-int>
    </typedef>
    <typedef name="__nesc_sillytask_startDoneTask" ref="0xb778ac60" loc="96:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:0" size="I:0" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_stopDoneTask" ref="0xb778a304" loc="101:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:1" size="I:4" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendDoneTask" ref="0xb77d29d8" loc="145:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/TossimPacketModelC.nc">
      <component-ref qname="TossimPacketModelC"/>
      <type-array elements="I:2" size="I:8" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="receive_message_t" ref="0xb76e63c4" loc="67:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-tag size="I:52" alignment="I:4"><struct-ref name="receive_message" scoped="" ref="0xb76e60f4"/>
        <typename><typedef-ref name="receive_message_t" scoped="" ref="0xb76e63c4"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_read_rssi_task" ref="0xb766abfc" loc="528:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/tossim/CpmModelC.nc">
      <component-ref qname="CpmModelC"/>
      <type-array elements="I:3" size="I:12" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_sendBufferTask" ref="0xb75ffad4" loc="74:lib/modules/SimpleSendP.nc">
      <component-ref qname="SimpleSendP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_fired" ref="0xb75bdcbc" loc="74:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="AlarmToTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_updateFromTimer" ref="0xb749b818" loc="71:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="Timer_t" ref="0xb7492508" loc="66:/home/sigi/CSE160/tiny/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="VirtualizeTimerC"/>
      <type-tag size="I:12" alignment="I:4"><struct-ref scoped="" ref="0xb74921cc"/>
        <typename><typedef-ref name="Timer_t" scoped="" ref="0xb7492508"/></typename>
      </type-tag>
    </typedef>
    <typedef name="queue_entry_t" ref="0xb7438ed8" loc="57:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-tag size="I:4" alignment="I:4"><struct-ref scoped="" ref="0xb7438d1c"/>
        <typename><typedef-ref name="queue_entry_t" scoped="" ref="0xb7438ed8"/></typename>
      </type-tag>
    </typedef>
    <typedef name="__nesc_sillytask_errorTask" ref="0xb743c93c" loc="169:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_CancelTask" ref="0xb7411220" loc="126:/home/sigi/CSE160/tiny/tinyos-main/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueImplP"/>
      <type-array elements="U:" size="U:" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
    <typedef name="__nesc_sillytask_processCommand" ref="0xb73cd648" loc="22:lib/modules/CommandHandlerP.nc">
      <component-ref qname="CommandHandlerP"/>
      <type-array elements="I:9" size="I:36" alignment="I:4">
        <type-int cname="int" size="I:4" alignment="I:4"></type-int>
      </type-array>
    </typedef>
  </typedefs>
</nesc>
